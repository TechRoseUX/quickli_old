{"version":3,"sources":["rersources/svg/carb.svg","rersources/svg/settingsw.svg","rersources/svg/historyw.svg","rersources/svg/closer.svg","rersources/svg/templatey.svg","rersources/svg/senddb.svg","rersources/svg/licensew.svg","rersources/svg/detailsw.svg","rersources/svg/mileagew.svg","rersources/svg/pencilw.svg","rersources/svg/emailb.svg","rersources/svg/calendarb.svg","rersources/svg/licenseb.svg","rersources/svg/vinb.svg","rersources/svg/plusw.svg","rersources/svg/pointw.svg","rersources/svg/phonebookw.svg","rersources/svg/returnw.svg","logo.svg","rersources/svg/lockb.svg","rersources/svg/userb.svg","rersources/svg/arrowleftw.svg","store/reducers/customer.js","store/actions/constants.js","store/reducers/environment.js","store/reducers/realCustomer.js","store/reducers/customerVehicle.js","store/reducers/customerService.js","store/reducers/customerToMessage.js","store/reducers/index.js","store/reducers/auth.js","store/index.js","history.js","store/actions/customer.js","components/Customer/customers.js","components/Customer/Styled/StyledMediaQuery.jsx","components/constants/colors.js","components/Customer/Styled/StyledComponents.jsx","components/Customer/Styled/Button.jsx","components/Customer/Styled/Text.jsx","components/Customer/Styled/StyledOverlay.jsx","components/Customer/CustomerCellRow.js","components/Customer/Styled/StyledBackIcon.jsx","components/Customer/ChatMessenger.js","components/Customer/AllCustomers.js","components/Customer/CustomerInfo.js","components/Customer/VehicleInfo.js","components/Customer/ServiceInfo.js","components/Customer/CustomerConfirmation.js","components/Customer/VehicleConfirmation.js","components/Customer/userLogin.js","components/Customer/TextField.js","components/Customer/AddCustomer.js","components/Customer/AddService.js","components/Customer/AddVehicle.js","components/Customer/RegisterUser.js","components/Customer/LoginUser.js","components/Customer/Styled/StyledNavBar.jsx","components/Customer/CustomerService.js","App.js","registerServiceWorker.js","index.js","rersources/svg/barsw.svg","rersources/mainLogo.png","rersources/svg/userw.svg","rersources/svg/phoneb.svg","rersources/svg/phonew.svg","rersources/svg/carw.svg","rersources/svg/calendarw.svg","rersources/svg/checkw.svg","rersources/svg/mileageb.svg","rersources/svg/hashb.svg","rersources/svg/mailw.svg","rersources/svg/pencilb.svg","rersources/svg/vinw.svg"],"names":["module","exports","__webpack_require__","p","customerReducer","state","arguments","length","undefined","_ref","type","payload","initialState","showNavBar","showNavToggle","barsw","selectedCustomer","selectedVehicle","selectedService","selectedServiceMesssage","selectedMessageText","showTemplateOverlay","currentEmailId","search","currentFilter","getSelectedCustomer","customer","GET_SELECTED_CUSTOMER","TOGGLE_NAV_BAR","TOGGLE_NAV_TOGGLE","GET_SELECTED_VEHICLE","GET_SELECTED_SERVICE","GET_SELECTED_SERVICE_MESSAGE","GET_SELECTED_MESSAGE_TEXT","TOGGLE_TEMPLATE_OVERLAY","GET_CURRENT_EMAIL_ID","UPDATE_CUSTOMER_SEARCH","GET_CURRENT_FILTER","customerRealReducer","customerVehicleReducer","customerServiceReducer","customerActiveToMessageReducer","combineReducers","environment","action","Object","objectSpread","display","vehicle","service","selectedServiceMessage","sm","text","status","email","filter","customers","activeToMessages","realCustomers","customerVehicles","customerServices","activeServices","customerActiveServiceReducer","auth","form","reduxForm","middleware","thunk","withDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","apply","createBrowserHistory","getRealCustomers","dispatch","fetch","then","res","json","getCustomerActiveToMessages","userLogin","values","_ref6","asyncToGenerator","regenerator_default","a","mark","_callee6","wrap","_context6","prev","next","axios","post","sent","location","reload","console","log","data","stop","_x6","this","fetchUser","_ref7","_callee7","_context7","get","_x7","Customers","props","getCustomers","react_default","createElement","map","key","id","firstName","lastName","Component","defaultProps","connect","size","device","mobileS","concat","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","colors","fullWhite","lightGray","lighterGray","lightBlue","darkBlue","black","NewDiv","styled","div","_templateObject","width","_ref2","height","_ref3","margin","_ref4","padding","_ref5","border","borderRadius","textAlign","_ref8","zIndex","_ref9","float","_ref10","_ref11","background","MainBG","_templateObject2","MainHeading","_templateObject3","Button","button","Button_templateObject","color","Colors","backgroundColor","is","Button_templateObject2","Button_templateObject3","_templateObject4","_templateObject5","_templateObject6","Text","Text_templateObject","lineHeight","maxWidth","fontWeight","fontStyle","fontFamily","Text_templateObject2","Text_templateObject3","Text_templateObject4","Text_templateObject5","Text_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","propTypes","PropTypes","string","largeText","bool","subtext","subtitle","error","gray","pointer","underline","inline","StyledOverlayContainer","StyledOverlay_templateObject","StyledOverlayContentBox","StyledOverlay_templateObject2","OverlayContentContainer","StyledOverlay_templateObject3","CustomerInputMessage","input","StyledOverlay_templateObject4","CustomerInputMessageLarge","textarea","StyledOverlay_templateObject5","TemplateNavContainer","StyledOverlay_templateObject6","CloseTemplateOverlay","StyledOverlay_templateObject7","StyledOverlay","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleNew","e","value","preventDefault","template1","text1","customerName","text2","newText","customText","onSubmit","assertThisInitialized","Styled_Text","white20","onChange","handleChange","bind","name","Styled_Button","standardBtn","onClick","_this$props","getSelectedMessageText","toggleTemplateOverlay","template2","_this$props2","template3","_this$props3","template4","_this$props4","closeTemplateOverlayFunc","forwardTemplate","messageTemplates","templateNumber","setState","backTemplate","event","target","currentTemplate","lib_default","src","closer","dblue16","white16","CustomerCellDiv","CustomerCellRow_templateObject","CellID","CustomerCellRow_templateObject2","CellInfoLeft","CustomerCellRow_templateObject3","CellInfoRight","CustomerCellRow_templateObject4","CustomerCellRow","myArray","i","customerid","openCustomerProfile","history","push","_this2","phoneNumber1","lblue20","acName","borderBottom","withRouter","StyledBackIcon","StyledBackIcon_templateObject","MessengerContainer","ChatMessenger_templateObject","MessengerContainerTop","ChatMessenger_templateObject2","MessengerTopText","ChatMessenger_templateObject3","MessageCell","ChatMessenger_templateObject4","MessageCellContentTop","ChatMessenger_templateObject5","MessageCellContentBottom","ChatMessenger_templateObject6","MessengerSearchBar","ChatMessenger_templateObject7","MessengerTextBox","ChatMessenger_templateObject8","MessengerChatContainer","ChatMessenger_templateObject9","MessengerChatTopSec","ChatMessenger_templateObject10","MessengerFixedBottom","ChatMessenger_templateObject11","ChatMessagesContainer","ChatMessenger_templateObject12","BottomLeftButton","ChatMessenger_templateObject13","BottomRightButton","ChatMessenger_templateObject14","BottomMiddleText","ChatMessenger_templateObject15","ChatToRow","ChatMessenger_templateObject16","ChatMessageToBubble","ChatMessenger_templateObject17","ChatMessenger","serviceid","openThisChat","v","getSelectedServiceMessage","displayOverlay","selectedMesageText","Styled_StyledOverlay","renderChatCells","activeServiceArray","reverse","lastMessage","vMessages","slice","dblue22","ellipsis","textMessage","renderServiceId","dblue30","checkMessageFunc","renderChatMessages","_this$props5","displayedToMessages","toggleTemplateTrue","_this$props6","sendNewMessage","_this$props7","createNewToMessage","phoneNumber","vehicleid","user","forceUpdate","correctChats","_this$props8","toggleNavBar","toggleNavToggle","go","_this$props9","Styled_StyledBackIcon","goBack","arrowleftw","white35","placeholder","templatey","method","senddb","getActiveCustomerServices","customerActiveServices","CustomerSearchBar","AllCustomers_templateObject","CustomerSearchSelectSec","AllCustomers_templateObject2","SearchNameBox","AllCustomers_templateObject3","NameSelectDiv","AllCustomers_templateObject4","StyledSelect","select","AllCustomers_templateObject5","SearchButton","AllCustomers_templateObject6","AllCsBG","AllCustomers_templateObject7","AllCustomers","searchCustomers","updateCustomerSearch","s","document","getElementById","strSelect","options","selectedIndex","updateFilter","getCurrentFilter","cFilter","renderRows","filteredCustomers","realCustomersReversed","item","toLowerCase","filterVal","match","number","d","Customer_CustomerCellRow","assign","mainHeading","CustomerInfo_templateObject","InfoElement","CustomerInfo_templateObject2","InfoEIcon","CustomerInfo_templateObject3","InfoEText","CustomerInfo_templateObject4","marginLeft","CustomerInfo","openNewVehicle","openVehicleDetails","getSelectedVehicle","renderVehicles","newVehicleArray","ownerid","vehicles","vehicleMake","vehicleModel","params","sc","userw","customerIE","phonew","mailw","carw","largeBtn","VehicleInfo_templateObject","VehicleInfo_templateObject2","VehicleInfo_templateObject3","VehicleInfo_templateObject4","VehicleInfo","openServiceScreen","openServiceDetails","getSelectedService","renderServices","newServiceArray","services","VehicleInfo_InfoElement","VehicleInfo_InfoEIcon","VehicleInfo_InfoEText","phoneNumber2","calendarw","vehicleYear","licensew","vehicleLicenseNumber","vinw","vehicleVinNumber","ServiceInfo_templateObject","ServiceInfo_templateObject2","ServiceInfo_templateObject3","ServiceInfo_templateObject4","ServiceInfo","jsTime","date","timestamp","substring","newDate","Date","fHours","getHours","fMinutes","getMinutes","fDay","getDate","fMonth","getMonth","fYear","getFullYear","ampm","formattedTime","substr","formattedDate","ServiceInfo_InfoElement","ServiceInfo_InfoEIcon","ServiceInfo_InfoEText","mileagew","mileage","pencilw","reason","detailsw","details","ConfirmContentContainer","CustomerConfirmation_templateObject","ConfirmIconDiv","CustomerConfirmation_templateObject2","ConfirmContentText","CustomerConfirmation_templateObject3","ConfirmButtons","CustomerConfirmation_templateObject4","CustomerConfirmation","openAllVehicles","openAddVehicle","pop","currentCus","checkw","dblue20","VehicleConfirmation_templateObject","VehicleConfirmation_templateObject2","VehicleConfirmation_templateObject3","VehicleConfirmation_templateObject4","VehicleConfirmation","openAddService","VehicleConfirmation_ConfirmContentContainer","VehicleConfirmation_ConfirmIconDiv","VehicleConfirmation_ConfirmContentText","VehicleConfirmation_ConfirmButtons","UserLogin","resSend","FormField","TextField_templateObject","FormFieldContainer","TextField_templateObject2","FormFieldLeft","TextField_templateObject3","FormFieldSplit","TextField_templateObject4","FormIconContainer","TextField_templateObject5","TextField","svg","label","defaultValue","fieldWidth","containerWidth","_ref3$meta","meta","touched","FormContainer","AddCustomer_templateObject","FIELDS","userb","noValueError","phoneb","emailb","AddCustomer","renderFields","field","Field","component","handleInputChange","addNewCustomer","createNewCustomer","handleSubmit","buttonText","validate","errors","forEach","AddService_templateObject","mileageb","pencilb","hashb","AddService","createNewService","AddService_FormContainer","createBody","AddVehicle_templateObject","calendarb","carb","licenseb","vinb","AddVehicle","createNewVehicle","AddVehicle_FormContainer","RegisterContainer","RegisterUser_templateObject","lockb","RegisterUser","handleNewUser","createNewUser","mainLogo","password","password2","LoginContainer","LoginUser_templateObject","LoginUser","handleLoginSubmit","logoutUser","MainNavContainer","StyledNavBar_templateObject","HeaderContainer","StyledNavBar_templateObject2","HeaderTop","StyledNavBar_templateObject3","HeaderTopImg","StyledNavBar_templateObject4","HeaderTopText","StyledNavBar_templateObject5","HeaderLIContainer","StyledNavBar_templateObject6","LILeft","StyledNavBar_templateObject7","LIRight","StyledNavBar_templateObject8","NavLIIcon","StyledNavBar_templateObject9","NavToggleIcon","StyledNavBar_templateObject10","StyledNavBar","handleLogout","companyName","renderContent","lblue22","gray30","react_router_dom","to","plusw","navItem","pointw","phonebookw","settingsw","returnw","CustomerService","openServiceCustomer","Code","App","renderCorrectPage","Customer_LoginUser","Customer_AllCustomers","getCustomerVehicles","getCustomerServices","getCurrentEmailId","className","Styled_StyledNavBar","react_router","exact","path","render","Customer_RegisterUser","Customer_AddCustomer","Customer_AddVehicle","Customer_AddService","Customer_CustomerConfirmation","Customer_VehicleConfirmation","Customer_CustomerInfo","Customer_VehicleInfo","Customer_ServiceInfo","Customer_ChatMessenger","_callee","_context","_x","_callee3","_context3","_x3","dataa","_callee2","_context2","_x2","_callee4","_context4","_x4","_callee5","_context5","_x5","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","es","store","src_App_0","querySelector","URL","process","origin","addEventListener","response","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.45566f33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carb.3154024e.svg\";","module.exports = __webpack_public_path__ + \"static/media/settingsw.923e5774.svg\";","module.exports = __webpack_public_path__ + \"static/media/historyw.ee726142.svg\";","module.exports = __webpack_public_path__ + \"static/media/closer.e4f6d492.svg\";","module.exports = __webpack_public_path__ + \"static/media/templatey.be1a3992.svg\";","module.exports = __webpack_public_path__ + \"static/media/senddb.0cb7205c.svg\";","module.exports = __webpack_public_path__ + \"static/media/licensew.ec0917c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/detailsw.1a5681fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/mileagew.f795afec.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencilw.9c7b621e.svg\";","module.exports = __webpack_public_path__ + \"static/media/emailb.49db445e.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendarb.a503a49e.svg\";","module.exports = __webpack_public_path__ + \"static/media/licenseb.7c356553.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinb.036b5b43.svg\";","module.exports = __webpack_public_path__ + \"static/media/plusw.3538fda8.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointw.4ed024ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/phonebookw.38f17819.svg\";","module.exports = __webpack_public_path__ + \"static/media/returnw.9a134c4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/lockb.726d79e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/userb.ea158943.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowleftw.a55b94fb.svg\";","import {GET_CUSTOMERS} from '../actions/constants'\n\nconst customerReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_CUSTOMERS:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerReducer;\n","export const GET_CUSTOMERS = \"GET_CUSTOMERS\";\nexport const GET_REAL_CUSTOMERS = \"GET_REAL_CUSTOMERS\";\nexport const UPDATE_CUSTOMER = \"REMOVE_CUSTOMER\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const GET_VEHICLES = \"GET_VEHICLES\";\nexport const GET_SERVICES = \"GET_SERVICES\";\nexport const GET_ACTIVE_SERVICES = \"GET_ACTIVE_SERVICES\";\nexport const GET_ACTIVE_TO_MESSAGES = \"GET_ACTIVE_TO_MESSAGES\";\n","import lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\n\n// Reducer\nconst initialState = {\n    showNavBar: 'none',\n    showNavToggle: barsw,\n    selectedCustomer: null,\n    selectedVehicle: null,\n    selectedService: null,\n    selectedServiceMesssage: null,\n    selectedMessageText: null,\n    showTemplateOverlay: false,\n    currentEmailId: '',\n    search: '',\n    currentFilter: 'Name'\n};\n\nexport function toggleNavBar(display) {\n    return {\n        type: TOGGLE_NAV_BAR,\n        display\n    }\n}\n\nexport function toggleNavToggle(display) {\n    return {\n        type: TOGGLE_NAV_TOGGLE,\n        display\n    }\n}\n\nexport function getSelectedCustomer(customer) {\n    return {\n        type: GET_SELECTED_CUSTOMER,\n        customer\n    }\n}\n\nexport function getSelectedVehicle(vehicle) {\n    return {\n        type: GET_SELECTED_VEHICLE,\n        vehicle\n    }\n}\n\nexport function getSelectedService(service) {\n    return {\n        type: GET_SELECTED_SERVICE,\n        service\n    }\n}\n\nexport function getSelectedServiceMessage(sm) {\n    return {\n        type: GET_SELECTED_SERVICE_MESSAGE,\n        sm\n    }\n}\n\nexport function getSelectedMessageText(text) {\n    return {\n        type: GET_SELECTED_MESSAGE_TEXT,\n        text\n    }\n}\n\nexport function toggleTemplateOverlay(status) {\n    return {\n        type: TOGGLE_TEMPLATE_OVERLAY,\n        status\n    }\n}\n\nexport function getCurrentEmailId(email) {\n    return {\n        type: GET_CURRENT_EMAIL_ID,\n        email\n    }\n}\n\nexport function updateCustomerSearch(search) {\n    return {\n        type: UPDATE_CUSTOMER_SEARCH,\n        search\n    }\n}\n\nexport function getCurrentFilter(filter) {\n    return {\n        type: GET_CURRENT_FILTER,\n        filter\n    }\n}\n\nconst TOGGLE_NAV_BAR = 'TOGGLE_NAV_BAR';\nconst TOGGLE_NAV_TOGGLE = 'TOGGLE_NAV_TOGGLE';  \nconst GET_SELECTED_CUSTOMER = 'GET_SELECTED_CUSTOMER';\nconst GET_SELECTED_VEHICLE = 'GET_SELECTED_VEHICLE';\nconst GET_SELECTED_SERVICE = 'GET_SELECTED_SERVICE';\nconst GET_SELECTED_SERVICE_MESSAGE = 'GET_SELECTED_SERVICE_MESSAGE';\nconst GET_SELECTED_MESSAGE_TEXT = 'GET_SELECTED_MESSAGE_TEXT';\nconst TOGGLE_TEMPLATE_OVERLAY = 'TOGGLE_TEMPLATE_OVERLAY';\nconst GET_CURRENT_EMAIL_ID = 'GET_CURRENT_EMAIL_ID';\nconst UPDATE_CUSTOMER_SEARCH = 'UPDATE_CUSTOMER_SEARCH';\nconst GET_CURRENT_FILTER = 'GET_CURRENT_FILTER';\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n    case TOGGLE_NAV_BAR:\n        return {\n            ...state,\n            showNavBar: action.display\n        }\n    case TOGGLE_NAV_TOGGLE:\n        return {\n            ...state,\n            showNavToggle: action.display\n        }\n    case GET_SELECTED_CUSTOMER:\n        return {\n            ...state,\n            selectedCustomer: action.customer\n        }\n    case GET_SELECTED_VEHICLE:\n        return {\n            ...state,\n            selectedVehicle: action.vehicle\n        }\n    case GET_SELECTED_SERVICE:\n        return {\n            ...state,\n            selectedService: action.service\n        }\n    case GET_SELECTED_SERVICE_MESSAGE:\n        return {\n            ...state,\n            selectedServiceMessage: action.sm\n        }\n    case GET_SELECTED_MESSAGE_TEXT:\n        return {\n            ...state,\n            selectedMessageText: action.text\n        }\n    case TOGGLE_TEMPLATE_OVERLAY:\n        return {\n            ...state,\n            showTemplateOverlay: action.status\n        }\n    case GET_CURRENT_EMAIL_ID:\n        return {\n            ...state,\n            currentEmailId: action.email\n        }\n    case UPDATE_CUSTOMER_SEARCH:\n        return {\n            ...state,\n            search: action.search\n        }\n    case GET_CURRENT_FILTER:\n        return {\n            ...state,\n            currentFilter: action.filter\n        }\n    default:\n        return state;\n    }\n}\n","import {GET_REAL_CUSTOMERS} from '../actions/constants'\n\nconst customerRealReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_REAL_CUSTOMERS:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerRealReducer;","import {GET_VEHICLES} from '../actions/constants'\n\nconst customerVehicleReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_VEHICLES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerVehicleReducer;","import {GET_SERVICES} from '../actions/constants'\n\nconst customerServiceReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_SERVICES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerServiceReducer;","import {GET_ACTIVE_TO_MESSAGES} from '../actions/constants'\n\nconst customerActiveToMessageReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_ACTIVE_TO_MESSAGES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerActiveToMessageReducer;","import {combineReducers} from 'redux';\nimport customerReducer from './customer';\nimport auth from './auth';\nimport environment from './environment';\nimport { reducer as reduxForm } from 'redux-form';\nimport customerRealReducer from './realCustomer';\nimport customerVehicleReducer from './customerVehicle';\nimport customerServiceReducer from './customerService';\nimport customerActiveServiceReducer from './customerService';\nimport customerActiveToMessageReducer from './customerToMessage';\n\nexport default combineReducers({\n  environment: environment,\n  customers: customerReducer,\n  activeToMessages: customerActiveToMessageReducer,\n  realCustomers: customerRealReducer,\n  customerVehicles: customerVehicleReducer,\n  customerServices: customerServiceReducer,\n  activeServices: customerActiveServiceReducer,\n  auth: auth,\n  form: reduxForm\n});\n","import {FETCH_USER} from '../actions/constants'\n\nexport default function(state = null, action) {\n    switch (action.type) {\n        case FETCH_USER:\n            return action.payload || false;\n        default:\n            return state;\n    }\n}","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleware = [\n  thunk\n]\nconst withDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(rootReducer, withDevTools(\n  applyMiddleware(...middleware)\n))\n","import { createBrowserHistory, createHashHistory } from 'history';\n\nexport default createBrowserHistory();","import axios from 'axios';\nimport {GET_CUSTOMERS, UPDATE_CUSTOMER, GET_REAL_CUSTOMERS, FETCH_USER, GET_VEHICLES, GET_SERVICES, GET_ACTIVE_SERVICES, GET_ACTIVE_TO_MESSAGES} from './constants';\n\nexport const getCustomers = () => dispatch => {\n  return fetch('/api/customers')\n    .then(res => res.json())\n    .then(customers => dispatch({type: GET_CUSTOMERS, payload: customers}))\n}\n\nexport const getRealCustomers = () => dispatch => {\n  return fetch('/all-customers')\n    .then(res => res.json())\n    .then(realCustomers => dispatch({type: GET_REAL_CUSTOMERS, payload: realCustomers}))\n}\n\nexport const getCustomerVehicles = () => dispatch => {\n  return fetch('/customer-vehicles')\n  .then(res => res.json())\n  .then(customerVehicles => dispatch({type: GET_VEHICLES, payload: customerVehicles}))\n}\n\nexport const getCustomerServices = () => dispatch => {\n  return fetch('/customer/vehicles-services')\n  .then(res => res.json())\n  .then(customerServices => dispatch({type: GET_SERVICES, payload: customerServices}))\n}\n\nexport const getActiveCustomerServices = () => dispatch => {\n  return fetch('/customers/chat/service')\n  .then(res => res.json())\n  .then(customerActiveServices => dispatch({type: GET_ACTIVE_SERVICES, payload: customerActiveServices}))\n}\n\nexport const getCustomerActiveToMessages = () => dispatch => {\n  return fetch('/customers/chat/service/messages')\n  .then(res => res.json())\n  .then(activeToMessages => dispatch({type: GET_ACTIVE_TO_MESSAGES, payload: activeToMessages}))\n}\n\nexport const createNewCustomer = (values) => async dispatch => {\n  const res = await axios.post('/new-customer', values);\n  console.log('Here is the new customer nfndfnsdfnskdhfkshdf')\n  dispatch({type: GET_CUSTOMERS, payload: res.data});\n  window.location.reload();\n}\n\nexport const createNewVehicle = (dataa) => async dispatch => {\n  const res = await axios.post('/new-vehicle', dataa);\n  dispatch({type: GET_CUSTOMERS, payload: res.data});\n}\n\nexport const createNewUser = (values) => async dispatch => {\n  const res = await axios.post('/register', values);\n  console.log('Here is the new user being added.')\n  dispatch({type: UPDATE_CUSTOMER, payload: res.data})\n}\n\nexport const createNewService = (dataa) => async dispatch => {\n  const res = await axios.post('/customers/service/:customerid', dataa);\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const createNewToMessage = (value) => async dispatch => {\n  console.log(value)\n  const res = await axios.post('/customers/chat/service', value);\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const userLogin = (values) => async dispatch => {\n  const res = await axios.post('/login', values);\n  window.location.reload();\n  console.log('Here is the new user being logged in.')\n  dispatch({type: UPDATE_CUSTOMER, payload: res.data})\n}\n\nexport const logoutUser = () => dispatch => {\n  return fetch('/logout')\n  .then(res => res.json())\n    .then(customers => dispatch({type: GET_CUSTOMERS, payload: customers}))\n};\n\nexport const fetchUser = () => async dispatch => {\n   const res = await axios.get('/current_user')\n    dispatch({ type: FETCH_USER, payload: res });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nclass Customers extends Component {\n\n  static propTypes = {\n    getCustomers: PropTypes.func.isRequired,\n    customers: PropTypes.array.isRequired\n  }\n\n  static defaultProps = {\n    customers: []\n  }\n\n  componentWillMount() {\n    this.props.getCustomers();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h2>Customers</h2>\n        <ul>\n        {this.props.customers.map(customer =>\n          <li key={customer.id}>{customer.firstName} {customer.lastName}</li>\n        )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getCustomers: () => dispatch(getCustomers())\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(Customers);\n","//StyledMediaQuery\n\nconst size = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '834px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px'\n}\n\n\nexport const device = {\n    mobileS: `(min-width: ${size.mobileS})`,\n    mobileM: `(min-width: ${size.mobileM})`,\n    mobileL: `(min-width: ${size.mobileL})`,\n    tablet: `(min-width: ${size.tablet})`,\n    laptop: `(min-width: ${size.laptop})`,\n    laptopL: `(min-width: ${size.laptopL})`,\n    desktop: `(min-width: ${size.desktop})`,\n    desktopL: `(min-width: ${size.desktop})`\n};","export default {\n\tfullWhite: '#ffffff',\n\tlightGray: '#A0A0A0',\n    lighterGray: '#DEDEDE',\n    lightBlue: '#008ECC',\n    darkBlue: '#004A6A',\n    black: '#000000'\n};","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\n\nexport const NewDiv = styled.div`\n\twidth: ${({ width }) => (width || 'auto')};\n\theight: ${({ height }) => (height || 'auto')};\n\tmargin: ${({ margin }) => (margin || 'auto')};\n\tpadding: ${({ padding }) => (padding || '0')};\n\tborder: ${({ border }) => (border || 'none')};\n\tborder-radius: ${({ borderRadius }) => (borderRadius || 'none')};\n\ttext-align: ${({ textAlign }) => (textAlign || 'auto')};\n\tz-index: ${({ zIndex }) => (zIndex || 'auto')};\n\tfloat: ${({ float }) => (float || 'none')};\n    display: ${({ display }) => (display || 'block')};\n    background: ${({ background }) => (background || 'none')};\n`\n\nexport const MainBG = styled.div`\n    width: 100%;\n    background: rgb(0,142,204);\n\tbackground: linear-gradient(90deg, rgba(0,142,204,1) 0%, rgba(89,200,248,1) 100%);\n\theight: 1200px;\n\n    @media ${device.tablet} {\n        \n    }\n`\n\nexport const MainHeading = styled(NewDiv)`\n\t@media ${device.tablet} {\n\t\tmax-width: 500px;\n\t\tmargin: 0 auto;\n\t}\n`","import React from 'react'\nimport styled from 'styled-components'\nimport is from 'styled-is';\n\nimport Colors from '../../constants/colors'\n\nimport { device } from './StyledMediaQuery';\n\n\nconst Button = styled.button`\n    border-radius: ${({ borderRadius }) => (borderRadius || '10px')};\n    color: ${({ color }) => (color || Colors.fullWhite)};\n    border: ${({ border }) => (border || 'none')};;\n    width: ${({ width }) => (width || '150px')};\n    height: ${({ height }) => (height || '40px')};\n    margin ${({ margin }) => (margin || '0')}; \n    padding ${({ padding }) => (padding || '0')}; \n    background-color: ${({ backgroundColor }) => (backgroundColor || 'initial')};\n    display: ${({ display }) => (display || 'flex')};\n    -webkit-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    -moz-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    transition: all ease .3s;\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    :hover{\n        box-shadow: 0 6px 12px 0 rgba(0,0,0,0.20), 0 1px 4px 0 rgba(0,0,0,0.30);\n    }\n    :active{\n        box-shadow: 0 2px 4px 0 rgba(0,0,0,0.20), 0 1px 3px 0 rgba(0,0,0,0.30);\n    }\n\n    ${is('primary')`\n\n    `}\n    ${is('secondary')`\n\n    `}\n    ${is('invalid')`\n        background-color: ${Colors.fullWhite};\n    `}\n    \n    ${is('standardBtn')`\n        width: 156px;\n        height: 40px;\n        border-radius: 20px;\n        background-color: ${Colors.darkBlue};\n    `}\n\n    ${is('largeBtn')`\n        width: 328px;\n        height: 40px;\n        border-radius: 50px;\n        background-color: ${Colors.darkBlue};\n    `}\n\n\n`\nexport default Button\n","import React from 'react'\nimport styled from 'styled-components'\nimport is from 'styled-is';\nimport PropTypes from 'prop-types';\n\nimport Colors from '../../constants/colors'\n\nimport { device } from './StyledMediaQuery';\n\nconst Text = styled.p`\n\tfont-size: 16px;\n\tline-height: ${({ lineHeight }) => (lineHeight || '16px')};\n\tcolor: ${({ color }) => (color || Colors.fullWhite)};\n\tmargin: ${props => (props.margin || '0')};\n\tpadding: ${props => (props.padding || '0')};\n    max-width: ${props => (props.maxWidth || 'none')};\n    font-weight: ${({ fontWeight }) => (fontWeight || 'normal')};\n    font-style: ${({ fontStyle }) => (fontStyle || 'normal ')};\n\tfont-family: ${({ fontFamily }) => (fontFamily || 'Helvetica')};\n\tbackground: ${({ background }) => (background || 'none')};\n\tfloat: ${({ float }) => (float || 'none')};\n\n\t${is('mainHeading')`\n\t\tfont-size: 40px;\n\t\tline-height: 44px;\n\t\tfont-weight: bold;\n\n\t\t@media ${device.mobileS} {\n\t\t\tfont-size: 40px;\n\t\t\tline-height: 44px;\n\t\t}\n    `}\n    \n    ${is('buttonText')`\n        font-size: 22px;\n    `}\n\n    ${is('navItem')`\n        line-height: 70px;\n        font-size: 22px;\n\t`}\n\t\n\t${is('inline')`\n        display: inline-block;\n\t`}\n\t\n\t${is('lblue20')`\n\t\tfont-size: 20px;\n\t\tline-height: 20px;\n\t\tcolor: ${Colors.lightBlue};\n\t`}\n\n\t${is('lblue22')`\n\t\tfont-size: 22px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.lightBlue};\n\t`}\n\t\n\t${is('dblue16')`\n\t\tfont-size: 16px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue22')`\n\t\tfont-size: 22px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue20')`\n\t\tfont-size: 20px;\n\t\tline-height: 20px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue30')`\n\t\tfont-size: 30px;\n\t\tline-height: 26px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('white20')`\n\t\tfont-size: 20px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.fullWhite};\n\t`}\n\n\t${is('white35')`\n\t\tfont-size: 35px;\n\t\tline-height: 35px;\n\t\tcolor: ${Colors.fullWhite};\n\t\tfont-style: medium;\n\t`}\n\n\t${is('gray30')`\n\t\tfont-size: 30px;\n\t\tline-height: 30px;\n\t\tcolor: ${Colors.lightGray};\n\t\tfont-style: medium;\n\t`}\n\t\n\t${is('customerIE')`\n\t\tline-height: 40px;\n\t`}\n\n\t${is('borderBottom')`\n\t\tborder-bottom: 1px solid ${Colors.darkBlue};\n\t`}\n\n\t${is('ellipsis')`\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tvertical-align: bottom;\n\t`}\n\n\t${is('acName')`\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tvertical-align: bottom;\n\n\t\t@media ${device.mobileS} {\n\t\t\tmax-width: 100px;\n\t\t\twidth: 100px;\n\t\t}\n\t`}\n\n`\n/**\n\tThis styled case was moved to WelcomeStyledComponents since it's only used in that partifulcar instance and not elsewhere\n\t${is('employeeDetail')`\n\t\tline-height: 30px;\n\t\tfont-size: 16px;\n\t`}\n\n`\n\n**/\n\nText.propTypes = {\n\t/** Color of the text displayed */\n\tcolor: PropTypes.string,\n\t/** Margins that should be added, needs to be in short hand syntax ex margin: top right bottom left; */\n\tmargin: PropTypes.string,\n\t//* Max width that a text can take */\n\tmaxWidth: PropTypes.string,\n\t//* Font weight of the text */\n\tfontWeight: PropTypes.string,\n\t//* Font style of the text; ex: italic, normal & oblique */\n\tfontStyle: PropTypes.string,\n\t//* Font family to be used */\n\tfontFamily: PropTypes.string,\n\t//* if the text should be increased to largeText size */\n\tlargeText: PropTypes.bool,\n\t//* If the text should be reduced to subtext size */\n\tsubtext: PropTypes.bool,\n\t//* If the text should be reudeced to subtitle size */\n\tsubtitle: PropTypes.bool,\n\t//* If the text is supposed to reprsent an error displayed */\n\terror: PropTypes.bool,\n\t//* If the text should be the website defualt gray color */\n\tgray: PropTypes.bool,\n\t//* If the text reprsents a action */\n\tpointer: PropTypes.bool,\n\t//* If the text reprsents a link */\n\tunderline: PropTypes.bool,\n\t//* If the text needs to be placed on same line */\n\tinline: PropTypes.bool,\n}\n\nexport default Text","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors'\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport closer from '../../../rersources/svg/closer.svg';\nimport { NewDiv } from '../Styled/StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\nimport { toggleTemplateOverlay } from '../../../store/reducers/environment';\nimport { createNewCustomer } from '../../../store/actions/customer';\n\n\nconst StyledOverlayContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background: black;\n        opacity: .8;\n        position: fixed;\n        z-index: 1000;\n    }\n`\n\nconst StyledOverlayContentBox = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 500px;\n        height: 550px;\n        background: rgb(89,200,248);\n        background: linear-gradient(180deg, rgba(89,200,248,1) 0%, rgba(255,255,255,1) 100%);\n        position: fixed\n        left: 50%;\n        margin-left: -250px;\n        margin-top: 150px;\n        z-index: 2000;\n    }\n`\n\nconst OverlayContentContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding: 50px 50px 0px 50px;\n    }\n`\n\nconst CustomerInputMessage = styled.input`\n    @media ${device.tablet} {\n        width: 200px;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst CustomerInputMessageLarge = styled.textarea`\n    @media ${device.tablet} {\n        width: 300px;\n        height: 100px !important;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst TemplateNavContainer = styled.div`\n    @media ${device.tablet} {\n        bottom: 75px;\n        position: absolute;\n        margin-left: auto;\n        margin-right: auto;\n        left: 0;\n        right: 0;\n        width: 325px;\n        display: flex\n        justify-content: space-between;\n        align-items: center;\n    }\n`\n\nconst CloseTemplateOverlay = styled.div`\n    @media ${device.tablet} {\n        width: 50px;\n        height: 50px;\n        margin-top: 25px;\n        margin-left: 25px;\n\n        svg {\n            height: 100%;\n            width: 100%;\n        }\n    }\n`\n\nclass StyledOverlay extends Component  {\n    constructor() {\n        super()\n        this.state = { \n            customText: '',\n            templateNumber: 0\n        }\n\n            this.forwardTemplate = this.forwardTemplate.bind(this);\n            this.backTemplate = this.backTemplate.bind(this);\n  //      this.handleChange = this.handleChange.bind(this)\n  //      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentDidMount() {\n    }\n\n    handleChange(event) {\n        const input = event.target.value\n        this.setState({ customText: input})\n        console.log(this.state)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n    }\n\n    handleNew = (e, value) => {\n        e.preventDefault()\n        console.log(value)\n    }\n\n    template1 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName}, thank you for bringing in your vehicle.`;\n        const text2 = 'We have now started on your vehicle. You will receive a real time update for each service.';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n    \n    template2 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName},`;\n        const text2 = 'we have completed your';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n    \n    template3 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName}, your vehicle is now ready for pickup.`;\n        const text2 = 'We are looking forward to seeing you soon, thank you.';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n\n\n    template4 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName},`;\n        const newText = `${text1} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessageLarge \n                            type=\"textarea\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n\n    closeTemplateOverlayFunc = () => {\n        const { toggleTemplateOverlay } = this.props\n        toggleTemplateOverlay(false);\n    }\n\n\n    forwardTemplate = () => {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n\n        if (this.state.templateNumber < messageTemplates.length - 1) {\n            this.setState({\n                templateNumber: this.state.templateNumber + 1\n            })\n        } else {\n            this.setState({\n                templateNumber: 0\n            })\n        }\n    }\n\n    backTemplate = () => {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n\n        if (this.state.templateNumber > 0) {\n            this.setState({\n                templateNumber: this.state.templateNumber - 1\n            })\n        } else {\n            this.setState({\n                templateNumber: messageTemplates.length - 1\n            })\n        }\n    }\n\n\n    render() {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n        var currentTemplate = messageTemplates[this.state.templateNumber]\n\n        const { getSelectedMessageText } = this.props\n\n        return (\n            <div>\n                <StyledOverlayContainer>\n                </StyledOverlayContainer>\n                <StyledOverlayContentBox>\n                    <CloseTemplateOverlay\n                        onClick={this.closeTemplateOverlayFunc}\n                    >\n                        <SVG src={closer} />\n                    </CloseTemplateOverlay>\n                    {currentTemplate()}\n                    <TemplateNavContainer\n                        \n                    >\n                        <Button\n                            onClick={this.backTemplate}\n                            backgroundColor={Colors.fullWhite}\n                            borderRadius='25px'\n                        >\n                            <Text\n                                dblue16\n                            >\n                                Go Back\n                            </Text>\n                        </Button>\n                        <Button\n                            standardBtn\n                            onClick={this.forwardTemplate}\n                        >\n                            <Text\n                                white16\n                            >\n                                Go Forward\n                            </Text>\n                        </Button>\n                    </TemplateNavContainer>\n                </StyledOverlayContentBox>\n           </div>\n          )\n    }\n   \n  }\n\n  export default StyledOverlay;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\n\nconst CustomerCellDiv = styled(NewDiv)`\n    width: 100%\n    height: 80px;\n    background: ${Colors.lighterGray};\n    border-bottom: 1px solid black;\n`\n\nconst CellID = styled(NewDiv)`\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    background: ${Colors.lightBlue};\n    display: inline-block;\n    float: left;\n    margin-left: 20px;\n    margin-top: 15px;\n`\n\nconst CellInfoLeft = styled(NewDiv)`\n    float: left;\n    display: inline-block;\n    margin-left: 100px;\n    margin-top: 10px;\n    height: 60px;\n    width: 275px;\n    text-align: left;\n`\n\nconst CellInfoRight = styled(CellInfoLeft)`\n    margin-left: 50px;\n`\n\nclass CustomerCellRow extends Component {\n\n  componentDidMount() {\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n  openCustomerProfile = () => {\n      const { realCustomers, customerid, selectedCustomer, getSelectedCustomer, history } = this.props\n      history.push(`/customers/${customerid}`);\n    const sc = this.search(customerid, realCustomers);\n    getSelectedCustomer(sc);\n    console.log(selectedCustomer);\n  }\n\n  render() {\n      const { customerid, name, phoneNumber1, email } = this.props\n      console.log(this.props)\n    return (\n      <CustomerCellDiv\n        onClick={() => {this.openCustomerProfile() }}\n      >\n          <CellID>\n          </CellID>\n          <CellInfoLeft>\n              <NewDiv\n                width=\"275px\"\n              >\n                <Text\n                    inline\n                    lblue20\n                >\n                    Customer Name:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                    acName\n                >\n                    {name}\n                </Text>\n              </NewDiv>\n\n              <NewDiv\n                padding=\"15px 0 0 0\"\n              >\n                <Text\n                    inline\n                    lblue20\n                >\n                    Phone #:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                >\n                    {phoneNumber1}\n                </Text>\n              </NewDiv>\n\n          </CellInfoLeft>\n          <CellInfoRight>\n          <NewDiv>\n                <Text\n                    inline\n                    lblue20\n                >\n                    Email:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                >\n                    {email}\n                </Text>\n              </NewDiv>\n\n              <NewDiv\n                padding=\"15px 0 0 0\"\n              >\n                <Text\n                    inline\n                    dblue16\n                    borderBottom\n                >\n                    View More\n                </Text>\n              </NewDiv>\n          </CellInfoRight>\n      </CustomerCellDiv>\n    );\n  }\n}\n\nexport default withRouter(CustomerCellRow);","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\nimport Colors from '../../constants/colors';\nimport { NewDiv } from '../Styled/StyledComponents';\n\nconst StyledBackIcon = styled(NewDiv)`\n@media ${device.tablet} {\n    position: absolute;\n    height: 35px;\n    width: 20px;\n    margin-left: 25px;\n    margin-top: 35px;\n    \n    svg {\n        width: 20px;\n        height: 35px;\n    }\n}\n`\nexport default StyledBackIcon;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {getActiveCustomerServices, getCustomerActiveToMessages} from '../../store/actions/customer'\nimport { createNewToMessage } from '../../store/actions/customer'\nimport './customers.css';\nimport StyledOverlay from '../Customer/Styled/StyledOverlay';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport { getSelectedCustomer, getSelectedServiceMessage, getSelectedMessageText, toggleTemplateOverlay } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport templatey from '../../rersources/svg/templatey.svg';\nimport senddb from '../../rersources/svg/senddb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { isContext } from 'vm';\n\nconst MessengerContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        height: 100vh;\n        position: fixed;\n        left: 0;\n        top: 0;\n        overflow-y: scroll;\n        background: ${Colors.lightBlue};\n        float: left;\n    }\n`\n\nconst MessengerContainerTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        height: 190px;\n        background: ${Colors.lightBlue};\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst MessengerTopText = styled(NewDiv)`\n    @media ${device.tablet} {\n        max-width: 175px;\n        text-align: center;\n        height: auto;\n    }\n`\n\nconst MessageCell = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 90px;\n        background: ${Colors.lightBlue};\n        float: left;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst MessageCellContentTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 90%;\n        height: 25px;\n        padding: 15px 0px 10px 0px\n    }\n`\n\nconst MessageCellContentBottom = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 90%;\n        height: 40px;\n        padding: 10px 0px\n        text-align: left;\n    }\n`\n\nconst MessengerSearchBar = styled.input`\n    @media ${device.tablet} {\n        width: ${({ width }) => (width|| '100%')};\n        height: ${props => (props.height || '40px')};\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n    } \n`\n\nconst MessengerTextBox = styled.textarea`\n    @media ${device.tablet} {\n        width: ${({ width }) => (width|| '100%')};\n        height: 90px;\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        padding-top: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n        :focus {\n            outline: none;\n          }\n    } \n`\n\nconst MessengerChatContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 511px;\n        height: 100vh;\n        background-color: ${Colors.lighterGray};\n        float: right\n    } \n`\n\nconst MessengerChatTopSec = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 511px;\n        height: 90px;\n        background-color: ${Colors.lighterGray};\n        border-bottom: 1px solid ${Colors.lightBlue};\n        position: fixed;\n        top: 0;\n        text-align: left;\n    } \n`\n\nconst MessengerFixedBottom = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 511px;\n        height: 115px;\n        position: fixed;\n        bottom: 0;\n    } \n`\n\nconst ChatMessagesContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin-top: 100px;\n        background-color: ${Colors.lighterGray};\n    } \n`\n\nconst BottomLeftButton = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        padding: 5px;\n        display: inline-block;\n        padding-top: 60px;\n        float: left;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst BottomRightButton = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        padding: 5px;\n        display: inline-block;\n        padding-top: 60px;\n        float: right;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst BottomMiddleText = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 400px;\n        height: 100px;\n        padding: 5px 0;\n        display: inline-block;\n    } \n`\n\nconst ChatToRow = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: auto;\n    } \n`\n\nconst ChatMessageToBubble = styled(NewDiv)`\n    @media ${device.tablet} {\n        max-width: 250px;\n        height: auto;\n        padding: 15px 15px;\n        float: right\n        margin-right: 10px;\n        background: ${Colors.lightBlue};\n        border-radius: 30px;\n        margin-bottom: 5px;\n        text-align: left;\n        color: ${Colors.fullWhite};\n    } \n`\n\nclass ChatMessenger extends Component {\n    constructor() {\n        super()\n        this.state = {\n            correctChats: []\n        }\n    }\n  componentDidMount() {\n    const {showNavBar, toggleNavBar, toggleNavToggle, getCustomerActiveToMessages, activeToMessages, selectedServiceMessage } = this.props\n\n    if (showNavBar === 'block') {\n        toggleNavBar('none')\n        toggleNavToggle(barsw);\n    } else {\n        console.log('Not showing....');\n    }\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].serviceid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n  openThisChat = (v) => {\n    const { customerServices, getSelectedServiceMessage, selectedServiceMessage } = this.props\n    const serviceid = v.serviceid\n    const sc = this.search(serviceid, customerServices);\n    getSelectedServiceMessage(sc);\n    console.log(selectedServiceMessage);\n}\n\n    displayOverlay = () => {\n        const { showTemplateOverlay, getSelectedMessageText, selectedMesageText, toggleTemplateOverlay, selectedServiceMessage } = this.props\n        if (showTemplateOverlay === true) {\n            return (\n                <StyledOverlay\n                    getSelectedMessageText={getSelectedMessageText} \n                    selectedMesageText={selectedMesageText}\n                    toggleTemplateOverlay={toggleTemplateOverlay}\n                    selectedServiceMessage={selectedServiceMessage}\n              />\n            )\n        } else {\n            return (\n                <div></div>\n            )\n        }\n    }\n\n  renderChatCells = () => {\n    var activeServiceArray = []\n    const { customerServices, activeToMessages } = this.props\n    console.log(customerServices);\n\n    for (var i=0; i < customerServices.length; i++) {\n        if (customerServices[i].status = true) {\n            activeServiceArray.push(customerServices[i])\n        } else {\n            console.log('Not active');\n        }\n        console.log(activeServiceArray)\n    }\n    activeServiceArray.reverse()\n\n        return activeServiceArray.map((v) => {\n            var vMessages = []\n            var lastMessage;\n\n            for (var i=0; i < activeToMessages.length; i++) {\n                if (v.serviceid == activeToMessages[i].serviceid) {\n                    vMessages.push(activeToMessages[i])\n                } else {\n                    console.log('Did not match')\n                }\n            }\n\n            if (vMessages.length > 0) {\n                lastMessage = vMessages.slice(-1)[0]\n            } else {\n                lastMessage = 'No messages sent.'\n            }\n\n            return (\n                <MessageCell\n                    onClick={() => this.openThisChat(v)}\n                >\n                    <MessageCellContentTop\n                    >\n                        <Text\n                            dblue22\n                            inline\n                            float='left'\n                            maxWidth='210px'\n                        >\n                            {v.customerName}\n                        </Text>\n                        <Text\n                            dblue16\n                            inline\n                            float='right'\n                            maxWidth='80px'\n                        >\n                            /\n                        </Text>\n                    </MessageCellContentTop>\n                    <MessageCellContentBottom>\n                        <Text\n                            dblue16\n                            ellipsis\n                            maxWidth=\"100%\"\n                        >\n                            {lastMessage.textMessage}\n                        </Text>\n                    </MessageCellContentBottom>\n                </MessageCell>\n            )\n        })\n  }\n\n  renderServiceId = () => {\n      const {selectedServiceMessage } = this.props\n      if (selectedServiceMessage) {\n            return (\n                <Text\n                    dblue30\n                    padding=\"10px 0 0 10px\"\n                >\n                    {selectedServiceMessage.customerName}\n                </Text>\n            )\n      } else {\n          return (\n              <Text\n                dblue30\n                padding=\"10px 0 0 10px\"\n              >\n                  No Service Selected\n              </Text>\n          )\n      }\n  }\n\n  checkMessageFunc = () => {\n    const { activeToMessages, selectedServiceMessage } = this.props\n\n    if (selectedServiceMessage) {\n        for (var i=0; i < activeToMessages.length; i++) {\n            if (activeToMessages[i].serviceid === selectedServiceMessage.serviceid) {\n\n   //     this.setState({ correctChats: [...this.state.correctChats, activeToMessages[i]] })\n   // this.setState(prevState => ({ correctChats: [ activeToMessages[i], ...prevState.correctChats]}))\n\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n    }\n\n  }\n\n  renderChatMessages = () => {\n    const { activeToMessages, selectedServiceMessage } = this.props\n    const displayedToMessages = []\n\n    this.checkMessageFunc()\n\n      if (selectedServiceMessage) {\n        for (var i=0; i < activeToMessages.length; i++) {\n            if (activeToMessages[i].serviceid === selectedServiceMessage.serviceid) {\n                displayedToMessages.push(activeToMessages[i]);\n\n    //this.setState(prevState => ({ correctChats: [ activeToMessages[i], ...prevState.correctChats]}))\n\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n        console.log(this.state);\n\n        return displayedToMessages.map((v) => {\n            return (\n                <ChatToRow>\n                    <ChatMessageToBubble>\n                        {v.textMessage}\n                    </ChatMessageToBubble>\n                </ChatToRow>\n            )\n        })\n      } else {\n          return (\n              <div>There are no messages to display</div>\n          )\n      }\n  }\n\n  toggleTemplateTrue = () => {\n      const { toggleTemplateOverlay, selectedServiceMessage } = this.props\n      if (selectedServiceMessage) {\n        toggleTemplateOverlay(true);\n      } else {\n          console.log('There is no selected message');\n      }\n      \n  }\n\n  sendNewMessage = (e, value) => {\n      const { selectedMessageText, createNewToMessage, selectedServiceMessage } = this.props\n        e.preventDefault();\n        console.log(value)\n        console.log(selectedMessageText)\n\n        if (selectedServiceMessage) {\n            const info =\n            {\n                textMessage: selectedMessageText,\n                phoneNumber: selectedServiceMessage.phoneNumber,\n                serviceid: selectedServiceMessage.serviceid,\n                vehicleid: selectedServiceMessage.vehicleid,\n                customerid: selectedServiceMessage.customerid,\n                user: selectedServiceMessage.user\n            }\n            createNewToMessage(info);\n            this.forceUpdate();\n        } else {\n            console.log('It cannot be done.')\n        }\n\n        window.location.reload()\n  }\n\n  handleChange = (e) => {\n      const { getSelectedMessageText } = this.props\n      const messageT = e.target.value\n      getSelectedMessageText(messageT);\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  render() {\n    const { getSelectedMessageText, selectedMessageText, createNewToMessage, selectedServiceMessage } = this.props\n    console.log(createNewToMessage);\n    const newText = \"akjshdkjashdkjahsdkhasdkj\"\n    console.log(this.props)\n\n    return (\n      <div>\n          {this.displayOverlay()}\n        <MessengerContainer>\n            <MessengerContainerTop>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n                <MessengerTopText>\n                    <Text\n                        white35\n                        padding=\"25px 0\"\n                    >\n                        Current Vehicles\n                    </Text>\n                </MessengerTopText>\n                <MessengerSearchBar \n                    width=\"85%\"\n                    placeholder=\"Search...\"\n                />\n            </MessengerContainerTop>\n            {this.renderChatCells()}\n        </MessengerContainer>\n        <MessengerChatContainer>\n            <MessengerChatTopSec>\n                {this.renderServiceId()}\n            </MessengerChatTopSec>\n            <ChatMessagesContainer>\n                {this.renderChatMessages()}\n            </ChatMessagesContainer>\n            <MessengerFixedBottom>\n                <BottomLeftButton\n                    onClick={() => this.toggleTemplateTrue()}\n                >\n                    <SVG src={templatey} />\n                </BottomLeftButton>\n                <BottomMiddleText>\n                    <form method=\"POST\" onChange={this.handleChange} onSubmit={(e) => this.sendNewMessage(e, this)}>\n                        <MessengerTextBox\n                            width=\"97%\"\n                            placeholder=\"Enter Messege...\"\n                            value={selectedMessageText}\n                            name=\"toMessage\"\n                        />\n                    </form>\n                </BottomMiddleText>\n                <BottomRightButton \n                onClick={(e) => this.sendNewMessage(e, this)}>\n                    <SVG src={senddb} />\n                </BottomRightButton>\n            </MessengerFixedBottom>\n        </MessengerChatContainer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  realCustomers: state.realCustomers,\n  selectedCustomer: state.environment.selectedCustomer,\n  activeServices: state.activeServices,\n  selectedServiceMessage: state.environment.selectedServiceMessage,\n  selectedMessageText: state.environment.selectedMessageText,\n  showTemplateOverlay: state.environment.showTemplateOverlay,\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getActiveCustomerServices: () => dispatch(getActiveCustomerServices()),\n   getSelectedServiceMessage: (sm) => dispatch(getSelectedServiceMessage(sm)),\n   getSelectedMessageText: (text) => dispatch(getSelectedMessageText(text)),\n   toggleTemplateOverlay: (status) => dispatch(toggleTemplateOverlay(status)),\n   getCustomerActiveToMessages: (status) => dispatch(getCustomerActiveToMessages)\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(ChatMessenger);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport { getSelectedCustomer, updateCustomerSearch, getCurrentFilter } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerSearchBar = styled.input`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n\n        :focus {\n          outline: none;\n        }\n    } \n`\n\nconst CustomerSearchSelectSec = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 672px;\n      margin: 0 auto;\n      margin-top: 30px;\n    } \n`\n\nconst SearchNameBox = styled(NewDiv)`\n    @media ${device.tablet} {\n      text-align: left;\n      width: 242px;\n      display: inline-block;\n    }\n`\n\nconst NameSelectDiv = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 242px;\n      height: 40px;\n      border-radius: 20px;\n      overflow: hidden;\n\n      select {\n        outline: none;\n        border: 0px;\n      }\n    } \n`\n\nconst StyledSelect = styled.select`\n    @media ${device.tablet} {\n      width: 100%;\n      height: 100%\n      font-size: 16px;\n      color: ${Colors.lightGray};\n      -webkit-border-top-right-radius: 15px;\n      -webkit-border-bottom-right-radius: 15px;\n      -moz-border-radius-topright: 15px;\n      -moz-border-radius-bottomright: 15px;\n      border-top-right-radius: 15px;\n      border-bottom-right-radius: 15px;\n    }\n`\n\nconst SearchButton = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 156px;\n      height: 40px;\n      display: inline-block;\n      float: right;\n      margin-top: 30.5px;\n    }\n`\n\nconst AllCsBG = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 100%;\n      background: rgb(0,142,204);\n      background: linear-gradient(90deg, rgba(0,142,204,1) 0%, rgba(89,200,248,1) 100%);\n      height: 300px;\n    }\n`\n\nclass AllCustomers extends Component {\n\n  static propTypes = {\n    getRealCustomers: PropTypes.func.isRequired,\n    realCustomers: PropTypes.array.isRequired\n  }\n\n  static defaultProps = {\n    realCustomers: []\n  }\n\n  componentDidMount() {\n    this.props.getRealCustomers();\n    const {showNavBar, toggleNavBar, toggleNavToggle } = this.props\n    if (showNavBar === 'block') {\n      toggleNavBar('none')\n      toggleNavToggle(barsw);\n    } else {\n      console.log('Not showing....');\n    }\n  }\n\n  searchCustomers = (event) => {\n    const { search, updateCustomerSearch } = this.props\n    var searchText = event.target.value\n    updateCustomerSearch(searchText)\n\n    var s = document.getElementById('search-select');\n    var strSelect = s.options[s.selectedIndex].value\n\n    console.log(strSelect)\n  }\n\n  updateFilter = (event) => {\n    const { getCurrentFilter } = this.props\n    var cFilter = event.target.value\n    getCurrentFilter(cFilter)\n    console.log(cFilter)\n  }\n\n  renderRows = () => {\n    const { realCustomers, selectedCustomer, getSelectedCustomer, history, search, currentFilter } = this.props\n    console.log(selectedCustomer);\n\n    const realCustomersReversed = realCustomers.reverse()\n\n    var filteredCustomers;\n\n    if (currentFilter === 'Name') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var name = item.name.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = name.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n      \n    } else if (currentFilter === 'Phone Number') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var number = item.phoneNumber1.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = number.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n    } else if (currentFilter === 'Email') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var email = item.email.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = email.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n    } else {\n      filteredCustomers = realCustomersReversed\n    }\n\n    return filteredCustomers.map((d) => {\n      console.log(filteredCustomers);\n      console.log(currentFilter)\n      return (\n        <CustomerCellRow\n          key={d.customerid}\n          realCustomers={realCustomers}\n          selectedCustomer={selectedCustomer}\n          getSelectedCustomer={getSelectedCustomer}\n          history={history}\n          {...d}\n        />\n      )\n    })\n  }\n\n  render() {\n    const { realCustomers, updateCustomerSearch, search } = this.props\n\n    return (\n      <div>\n        <AllCsBG>\n          <MainHeading>\n              <Text\n                mainHeading\n                padding=\"30px 0 50px 0\"\n              >\n                All Customers\n              </Text>\n            </MainHeading>\n        <NewDiv\n          width=\"662px\"\n          height=\"40px\"\n        >\n          <CustomerSearchBar \n            placeholder=\"Search\"\n            onChange={this.searchCustomers}\n            value={search}\n          />\n        </NewDiv>\n        <CustomerSearchSelectSec>\n          <SearchNameBox\n            float=\"left\"\n          >\n            <Text\n              padding=\"0 0 15px 0\"\n            >\n              Search By:\n            </Text>\n            <NameSelectDiv>\n              <StyledSelect \n              id=\"search-select\"\n              onChange={this.updateFilter}\n              >\n                <option>Name</option>\n                <option>Phone Number</option>\n                <option>Email</option>\n                <option>Vin Number</option>\n              </StyledSelect>\n            </NameSelectDiv>\n          </SearchNameBox>\n          <SearchNameBox>\n            <Text\n              padding=\"0 0 15px 0\"\n            >\n              Filter By:\n            </Text>\n            <NameSelectDiv>\n              <StyledSelect>\n                <option>A-Z</option>\n              </StyledSelect>\n            </NameSelectDiv>\n          </SearchNameBox>\n          <SearchButton>\n            <Button\n              width=\"100%\"\n              height=\"100%\"\n              borderRadius=\"40px\"\n              standardBtn\n            >\n              <Text\n              >\n                Search\n                </Text>\n            </Button>\n          </SearchButton>\n        </CustomerSearchSelectSec>\n      </AllCsBG>\n        <NewDiv\n          width=\"100vw\"\n        >\n            {this.renderRows()}\n        </NewDiv>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  realCustomers: state.realCustomers,\n  selectedCustomer: state.environment.selectedCustomer,\n  search: state.environment.search,\n  currentFilter: state.environment.currentFilter,\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getRealCustomers: () => dispatch(getRealCustomers()),\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   updateCustomerSearch: (search) => dispatch (updateCustomerSearch(search)),\n   getCurrentFilter: (filter) => dispatch (getCurrentFilter(filter))\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(AllCustomers);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport mailw from '../../rersources/svg/mailw.svg';\nimport carw from '../../rersources/svg/carw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n    }\n`\n\nclass CustomerInfo extends Component {\n  componentDidMount() {\n    const { selectedCustomer, getSelectedCustomer, realCustomers, customerVehicles, getRealCustomers } = this.props\n\n    getRealCustomers()\n\n    const {\n        match: { params: { customerid } }\n    } = this.props\n\n    const sc = this.search(customerid, realCustomers);\n    if (realCustomers.length > 1) {\n        console.log(getSelectedCustomer);\n        getSelectedCustomer(sc);\n        console.log(sc);\n    } else {\n        console.log('error');\n    }\n}\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n    openNewVehicle = () => {\n        const customerid = this.props.selectedCustomer.customerid\n        const history = this.props.history;\n        history.push(`/new-vehicle`);\n    }\n\n    openVehicleDetails = (v) => {\n        const { getSelectedVehicle, selectedVehicle, history } = this.props\n        const vehicleid = v.vehicleid\n        getSelectedVehicle(v)\n        console.log(selectedVehicle)\n        history.push(`/customers/vehicles/${vehicleid}`);\n   //   const sc = this.search(customerid, realCustomers);\n   //   getSelectedCustomer(sc);\n      console.log(v);\n    }\n\n    renderVehicles = () => {\n        const { customerVehicles, selectedCustomer } = this.props\n        const customerid = this.props.selectedCustomer.customerid\n        const newVehicleArray =[]\n         for (var i=0; i < customerVehicles.length; i++) {\n            if (customerVehicles[i].ownerid === customerid) {\n                newVehicleArray.push(customerVehicles[i])\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n        console.log(customerVehicles);\n        console.log(newVehicleArray);\n        const vehicles = newVehicleArray\n        console.log(vehicles);\n        return vehicles.map((v) => {\n            console.log(v);\n            return (\n                <NewDiv>\n                    <Text\n                        dblue22\n                        borderBottom\n                        padding=\"20px 0 5px 0\"\n                        color={Colors.lightBlue}\n                        onClick={() => this.openVehicleDetails(v)}\n                    >\n                        {v.vehicleMake} {v.vehicleModel}\n                    </Text>\n                </NewDiv>\n            )\n        })\n    }\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n    }\n\n  render() {\n    const { realCustomers, selectedCustomer, customerVehicles } = this.props\n    if (realCustomers.length >= 1) {\n\n        return (\n            <MainBG>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Customer Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                         CUSTOMER NAME:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.name}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.phoneNumber1}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={mailw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          EMAIL:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.email}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n              <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    height=\"auto\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                            VEHICLES:\n                      </Text>\n                      {this.renderVehicles()}\n                  </InfoEText>\n              </InfoElement>\n              <NewDiv\n                margin=\"0 auto\"\n                width=\"100%\"\n              >\n                  <Button\n                    largeBtn\n                    margin=\"0 auto\"\n                    backgroundColor={Colors.darkBlue}\n                    onClick={() => this.openNewVehicle()}\n                  >\n                    <Text\n                      white20\n                    >\n                      Add New Vehicle\n                    </Text>\n                  </Button>\n              </NewDiv>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   getRealCustomers: () => dispatch(getRealCustomers())\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer, getSelectedService } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport mailw from '../../rersources/svg/mailw.svg';\nimport carw from '../../rersources/svg/carw.svg';\nimport vinw from '../../rersources/svg/vinw.svg';\nimport licensew from '../../rersources/svg/licensew.svg';\nimport calendarw from '../../rersources/svg/calendarw.svg';\nimport historyw from '../../rersources/svg/historyw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n    }\n`\n\nclass VehicleInfo extends Component {\n  componentDidMount() {\n    const { getSelectedVehicle, customerVehicles, customerServices, selectedVehicle } = this.props\n    const {\n        match: { params: { vehicleid } }\n    } = this.props\n\n    const sc = this.search(vehicleid, customerServices);\n\n    if (customerServices.length > 1) {\n   //     getSelectedVehicle(sc);\n        console.log('selecteing customer')\n    } else {\n        console.log('error');\n    }\n}\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    openServiceScreen = () => {\n        const { getSelectedVehicle, selectedVehicle, history } = this.props\n        const customerid = selectedVehicle.ownerid\n        history.push(`/customers/service/${customerid}`);\n    }\n\n    openServiceDetails = (v) => {\n        const { history, getSelectedService } = this.props\n        const vehicleid = v.vehicleid\n        const serviceid = v.serviceid\n        history.push(`/customers/vehicles/${vehicleid}/${serviceid}`);\n        getSelectedService(v);\n      console.log(v);\n      console.log(getSelectedService);\n    }\n\n    renderServices = () => {\n        const { getSelectedVehicle, customerVehicles, customerServices, selectedVehicle } = this.props\n        const newServiceArray = []\n\n        for (var i=0; i < customerServices.length; i++) {\n            if (customerServices[i].vehicleid === selectedVehicle.vehicleid) {\n                newServiceArray.push(customerServices[i]);\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n       const services = newServiceArray\n         console.log(services.length);\n        return services.map((v) => {\n            return (\n                <NewDiv>\n                    <Text\n                        white20\n                        padding=\"20px 0 5px 0\"\n                        onClick={() => this.openServiceDetails(v)}\n                    >\n                        Service - {v.vehicleid}\n                    </Text>\n                </NewDiv>\n            )\n        })\n    }\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n      }\n\n  render() {\n    const { selectedVehicle, selectedCustomer } = this.props\n\n    if (selectedVehicle) {\n        return (\n            <MainBG>\n                <StyledBackIcon\n                onClick={() => this.goBack()}\n                >\n                <SVG src={arrowleftw} />\n            </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Vehicle Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          OWNER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.ownerid}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.phoneNumber1}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER 2:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.phoneNumber2}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={calendarw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          YEAR:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleYear}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MAKE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleMake}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MODEL:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleModel}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={licensew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          LICENSE #:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleLicenseNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={vinw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          VIN #:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleVinNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n              <InfoEIcon>\n                      <SVG src={vinw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    height=\"auto\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                            Service History\n                      </Text>\n                      {this.renderServices()}\n                  </InfoEText>\n              </InfoElement>\n              <NewDiv\n                margin=\"0 auto\"\n                width=\"100%\"\n              >\n                  <Button\n                    largeBtn\n                    margin=\"0 auto\"\n                    backgroundColor={Colors.darkBlue}\n                    onClick={() => this.openServiceScreen()}\n                  >\n                    <Text\n                      white20\n                    >\n                      Service This Vehicle\n                    </Text>\n                  </Button>\n              </NewDiv>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   getSelectedService: (service) => dispatch(getSelectedService(service))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(VehicleInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport detailsw from '../../rersources/svg/detailsw.svg';\nimport mileagew from '../../rersources/svg/mileagew.svg';\nimport pencilw from '../../rersources/svg/pencilw.svg';\nimport calendarw from '../../rersources/svg/calendarw.svg';\nimport historyw from '../../rersources/svg/historyw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n    }\n`\n\nclass ServiceInfo extends Component {\n  componentDidMount() {\n    const { getSelectedVehicle, customerVehicles, customerServices, selectedVehicle } = this.props\n    const {\n        match: { params: { vehicleid } }\n    } = this.props\n}\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n    }\n\n  render() {\n    const { selectedVehicle, selectedCustomer, selectedService } = this.props\n    console.log(this.props.state);\n    var strTime;\n    var strDate;\n\n    if (selectedService) {\n        var jsTime = selectedService.date\n        var timestamp = jsTime.substring(0, jsTime.length - 3)\n        console.log(timestamp);\n        console.log(jsTime);\n        var newDate = new Date(timestamp*1000);\n        var fHours = newDate.getHours();\n        var fMinutes = '0' + newDate.getMinutes();\n\n\n        var fDay = newDate.getDate();\n        var fMonth = newDate.getMonth();\n        var fYear = newDate.getFullYear();\n        fMonth = fMonth + 1;\n        console.log(fMonth);\n        console.log(fDay);\n        \n      \n        var ampm = fHours >= 12 ? 'pm' : 'am';\n        fHours = fHours % 12;\n        fHours = fHours ? fHours : 12;\n      //  fMinutes = fMinutes < 10 ? '0'+ fMinutes : fMinutes;\n      var formattedTime = fHours + ':' + fMinutes.substr(-2) + ampm;\n      var formattedDate = (`${fMonth}/${fDay}/${fYear}`)\n      //  strDate = (`${fMonth}/${fDay}`);\n\n\n\n        return (\n            <MainBG>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Service Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          CUSTOMER NAME\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.customerName}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={calendarw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          DATE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {formattedDate}\n                          &nbsp;\n                          - \n                          &nbsp;\n                          {formattedTime} \n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.phoneNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={mileagew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MILEAGE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.mileage}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={pencilw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          REASON FOR VISIT:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.reason}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={detailsw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          DETAILS:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.details}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(ServiceInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport checkw from '../../rersources/svg/checkw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text'; \n\nconst ConfirmContentContainer = styled.div`\n    @media ${device.tablet} {\n        padding-top: 300px;\n        width: 500px;\n        text-align: center;\n        margin: 0 auto;\n    }\n`\n\nconst ConfirmIconDiv = styled.div`\n    @media ${device.tablet} {\n        width: 200px;\n        height: 200px;\n        margin: 0 auto;  \n    }\n\n    svg {\n        width: 100%\n        height: 100%\n    }\n`\n\nconst ConfirmContentText = styled.div`\n    @media ${device.tablet} {\n        width: 500px;\n        margin: 0 auto;\n        padding-top: 50px;\n        padding-bottom: 50px;\n    }\n`\n\nconst ConfirmButtons = styled.div`\n    @media ${device.tablet} {\n\n    }\n`\n\nclass CustomerConfirmation extends Component {\n    componentDidMount() {\n    }\n\n    search = (id, myArray) => {\n        for (var i=0; i < myArray.length; i++) {\n            if (myArray[i].customerid === id) {\n                return myArray[i];\n            }\n        }\n    }\n\n    openAllVehicles = () => {\n        const { history } = this.props;\n        history.push('/all-customers')\n    }\n    openAddVehicle = () => {\n        const { realCustomers, selectedCustomer, getSelectedCustomer, history } = this.props\n        const currentCus = realCustomers.slice(-1).pop();\n        getSelectedCustomer(currentCus);\n        history.push(`/new-vehicle`);\n    }\n\n    render() {\n        const { realCustomers, getSelectedCustomer, selectedCustomer } = this.props\n\n        if (realCustomers.length > 0) {\n            console.log(realCustomers)\n            const currentCus = realCustomers.slice(-1).pop()\n            console.log(currentCus);\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                            <ConfirmIconDiv>\n                                <SVG src={checkw} />\n                            </ConfirmIconDiv>\n                            <ConfirmContentText>\n                                <Text\n                                    white20\n                                >\n                                    {currentCus.name},\n                                    &nbsp;\n                                The new customer has been added successfully. Would you like to add a vehicle for this customer now?\n                                </Text>\n                        </ConfirmContentText>\n                        <ConfirmButtons>\n                                <Button\n                                    display=\"inline-block\"\n                                    margin=\"0px 5px\"\n                                    width=\"156px\"\n                                    height=\"40px\"\n                                    borderRadius=\"25px\"\n                                    backgroundColor={Colors.fullWhite}\n                                    onClick={() => this.openAllVehicles()}\n                                >\n                                    <Text\n                                        dblue20\n                                    >\n                                        Not Now\n                                    </Text>\n                                </Button>\n                                <Button\n                                    display=\"inline-block\"\n                                    standardBtn\n                                    margin=\"0px 5px\"\n                                    onClick={() => this.openAddVehicle()}\n                                >\n                                    <Text\n                                        white20\n                                    >\n                                        Yes\n                                    </Text>\n                                </Button>\n                            </ConfirmButtons>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                           <p>Loading...</p>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    state: state\n  })\n  \n  const dispatchToProps = (dispatch) => ({\n     \n  })\n  \n  export default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerConfirmation));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport checkw from '../../rersources/svg/checkw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text'; \n\nconst ConfirmContentContainer = styled.div`\n    @media ${device.tablet} {\n        padding-top: 300px;\n        width: 500px;\n        text-align: center;\n        margin: 0 auto;\n    }\n`\n\nconst ConfirmIconDiv = styled.div`\n    @media ${device.tablet} {\n        width: 200px;\n        height: 200px;\n        margin: 0 auto;  \n    }\n\n    svg {\n        width: 100%\n        height: 100%\n    }\n`\n\nconst ConfirmContentText = styled.div`\n    @media ${device.tablet} {\n        width: 500px;\n        margin: 0 auto;\n        padding-top: 50px;\n        padding-bottom: 50px;\n    }\n`\n\nconst ConfirmButtons = styled.div`\n    @media ${device.tablet} {\n\n    }\n`\n\nclass VehicleConfirmation extends Component {\n    componentDidMount() {\n    }\n\n    search = (id, myArray) => {\n        for (var i=0; i < myArray.length; i++) {\n            if (myArray[i].customerid === id) {\n                return myArray[i];\n            }\n        }\n    }\n\n    openAllVehicles = () => {\n        const { history, selectedVehicle, getSelectedVehicle, customerVehicles, selectedCustomer } = this.props\n        history.push('/all-customers');\n    }\n    openAddService = () => {\n        const { realCustomers, selectedCustomer, getSelectedVehicle, history, customerVehicles, selectedVehicle } = this.props\n        const currentCus = customerVehicles.slice(-1).pop();\n        getSelectedVehicle(currentCus);\n        history.push('/new-service');\n    }\n\n    render() {\n        const { realCustomers, getSelectedCustomer, selectedCustomer } = this.props\n\n        if (realCustomers.length > 0) {\n            console.log(realCustomers)\n            const currentCus = realCustomers.slice(-1).pop()\n            console.log(currentCus);\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                            <ConfirmIconDiv>\n                                <SVG src={checkw} />\n                            </ConfirmIconDiv>\n                            <ConfirmContentText>\n                                <Text\n                                    white20\n                                >\n                                The new vehicle has been added successfully. Would you like to service this customer now?\n                                </Text>\n                        </ConfirmContentText>\n                        <ConfirmButtons>\n                                <Button\n                                    display=\"inline-block\"\n                                    margin=\"0px 5px\"\n                                    width=\"156px\"\n                                    height=\"40px\"\n                                    borderRadius=\"25px\"\n                                    backgroundColor={Colors.fullWhite}\n                                    onClick={() => this.openAllVehicles()}\n                                >\n                                    <Text\n                                        dblue20\n                                    >\n                                        Not Now\n                                    </Text>\n                                </Button>\n                                <Button\n                                    display=\"inline-block\"\n                                    standardBtn\n                                    margin=\"0px 5px\"\n                                    onClick={() => this.openAddService()}\n                                >\n                                    <Text\n                                        white20\n                                    >\n                                        Yes\n                                    </Text>\n                                </Button>\n                            </ConfirmButtons>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                           <p>Loading...</p>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    state: state\n  })\n  \n  const dispatchToProps = (dispatch) => ({\n     \n  })\n  \n  export default withRouter(connect(mapStateToProps, dispatchToProps)(VehicleConfirmation));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {userLogin} from '../../store/actions/customer'\nimport './customers.css';\n\nclass UserLogin extends Component {\n\n  static propTypes = {\n    userLogin: PropTypes.func.isRequired,\n    resSend: PropTypes.string.isRequired\n  }\n\n  static defaultProps = {\n    resSend: ''\n  }\n\n  componentWillMount() {\n    this.props.userLogin();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h2>Res Send User Login</h2>\n        <p>{this.props.resSend}</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  resSend: state.resSend\n})\n\nconst dispatchToProps = (dispatch) => ({\n   userLogin: () => dispatch(userLogin())\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(UserLogin);","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Colors from '../constants/colors';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\n//import ReactSVG from 'react-svg';\nimport SVG from 'react-inlinesvg';\n\nconst FormField = styled.input`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 0px 10px 10px 0px;\n    padding: 0;\n    padding-left: 10px;\n    font-size: 16px;\n\n    @media ${device.tablet} {\n        width: ${({ width }) => (width || '345px')};\n        height: 50px;\n        float: right;\n        margin: 0 auto;\n    }\n`\n\nconst FormFieldContainer = styled.div`\n\n    @media ${device.tablet} {\n        width: ${({ width }) => (width || '417px')};\n        height: 50px;\n        margin-bottom: 50px;\n    }\n\n    border-radius: 10px;\n    -webkit-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    -moz-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n`\n\nconst FormFieldLeft = styled.div`\n    border-radius: 10px 0px 0px 10px;\n    width: 61px;\n    height: 50px;\n    background-color: ${Colors.fullWhite};\n    float: left;\n`\n\nconst FormFieldSplit = styled.div`\n    width: 1px;\n    height: 50px;\n    background: ${Colors.lightBlue};\n    float: left;\n`\n\nconst FormIconContainer = styled(NewDiv)`\n    width: 33px;\n    height: 33px;\n    margin: 0 auto;\n    margin-top: 8px;\n\n    svg {\n        width: 33px;\n        height: 33px;\n    }\n`\n\nexport default ({ input, label, svg, placeholder, defaultValue, fieldWidth, containerWidth, meta: { error, touched } }) => {\n    console.log(defaultValue);\n    return (\n        <FormFieldContainer\n            width={containerWidth}\n        >\n                <FormFieldLeft>\n                    <FormIconContainer\n                    >\n                        <SVG src={svg} />\n                    </FormIconContainer>\n                </FormFieldLeft>\n                <FormFieldSplit />\n                <FormField {...input} placeholder={placeholder} defaultValue={defaultValue} width={fieldWidth} /> <br/>\n                {touched && error}\n        </FormFieldContainer>\n    )\n}\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport emailb from '../../rersources/svg/emailb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport SVG from 'react-inlinesvg';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport StyledBackIcon from './Styled/StyledBackIcon';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst FIELDS = [\n  {\n    label: 'Customer Name', name: 'cname', svg: userb, placeholder: 'Enter Customer Name...', noValueError: 'You must provide a customer name'\n  },\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter Phone Number...', noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Secondary Phone Number', name: 'pnumber2', svg: phoneb, placeholder: 'Enter Secondary Phone Number', noValueError: 'You must provide a secondary phone number'\n  },\n  {\n    label: 'Customer Email', name: 'email', svg: emailb, placeholder: 'Enter Email...', noValueError: 'You must provide a email address'\n  },\n]\n\nclass AddCustomer extends Component {\n  componentDidMount() {\n    const {showNavBar, toggleNavBar, toggleNavToggle } = this.props\n    if (showNavBar === 'block') {\n      toggleNavBar('none')\n      toggleNavToggle(barsw);\n    } else {\n      console.log('Not showing....');\n    }\n  }\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          type=\"text\" \n          name={field.name} \n          placeholder={field.placeholder}\n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  addNewCustomer = (values) => {\n      const { createNewCustomer, history, realCustomers } = this.props\n      console.log(realCustomers);\n      createNewCustomer(values);\n      history.push('/new-customer/confirmation');\n      window.location.reload();\n  }\n\n  render() {\n    const { createNewCustomer } = this.props\n    console.log(createNewCustomer);\n    return (\n      <div>\n          <MainBG>\n            <StyledBackIcon\n                onClick={() => this.goBack()}\n            >\n                <SVG src={arrowleftw} />\n            </StyledBackIcon>\n              <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Enter The Fields Below\n                </Text>\n              </MainHeading>\n            <FormContainer\n            >\n                <form onSubmit={this.props.handleSubmit(values => this.addNewCustomer(values))}>\n                  {this.renderFields()}\n                  <Button\n                    standardBtn\n                    margin=\"0 auto\"\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Submit\n                    </Text>\n                  </Button>\n                </form>\n            </FormContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values, props) => {\n  //const { realCustomers } = this.props\n  const errors = {};\n\n  console.log(values);\n  console.log(props);\n  console.log(values.email);\n  console.log(props.realCustomers);\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n  });\n\n  for (var i=0; i < props.realCustomers.length; i++) {\n    if (values.email == props.realCustomers[i].email) {\n      errors.email = 'This email is already in use'\n      console.log('ERROR');\n    } else {\n      console.log('SUCCESS');\n    }\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newCustomerForm'\n})(AddCustomer)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport hashb from '../../rersources/svg/hashb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst FIELDS = [\n  {\n    label: 'Name', name: 'name', svg: userb, placeholder: 'Enter name...', noValueError: 'You must provide a name'\n  },\n  {\n    label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter vehicle mileage...', noValueError: 'You must provide a value for mileage'\n  },\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...',  noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Reason For Visit', name: 'reason', svg: pencilb, placeholder: 'Enter reason...', noValueError: 'You must provide a reason for visit'\n  },\n  {\n    label: 'Tag Number', name: 'tnumber', svg: hashb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number'\n  }\n]\n\nclass AddService extends Component {\n\n  renderFields = () => {\n    const selectedCustomer = this.props.selectedCustomer\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          type=\"text\" \n          name={field.name} \n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n          placeholder={field.placeholder}\n          svg={field.svg}\n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  render() {\n    const { createNewService, selectedCustomer, selectedVehicle } = this.props\n    console.log(this.props);\n    console.log(selectedCustomer);\n    console.log(selectedVehicle);\n    const props = this.props\n\n    const createBody = (values, props) => {\n      const history = this.props.history;\n        let dataa = {\n          values: values,\n          props: props\n        }\n        createNewService(dataa);\n        history.push('/customers/chat/service')\n        window.location.reload();\n    }\n\n    return (\n      <div>\n      <MainBG>\n        <StyledBackIcon\n            onClick={() => this.goBack()}\n        >\n           <SVG src={arrowleftw} />\n        </StyledBackIcon>\n          <MainHeading>\n            <Text\n              mainHeading\n              padding=\"30px 0 50px 0\"\n            >\n              Enter The Fields Below\n            </Text>\n          </MainHeading>\n        <FormContainer\n        >\n            <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n              {this.renderFields()}\n              <Button\n                standardBtn\n                margin=\"0 auto\"\n                type=\"submit\"\n              >\n                <Text\n                  buttonText\n                >\n                  Submit\n                </Text>\n              </Button>\n            </form>\n        </FormContainer>\n      </MainBG>\n  </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newServiceForm'\n})(AddService)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport calendarb from '../../rersources/svg/calendarb.svg';\nimport carb from '../../rersources/svg/carb.svg';\nimport licenseb from '../../rersources/svg/licenseb.svg';\nimport vinb from '../../rersources/svg/vinb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport hashb from '../../rersources/svg/hashb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst FIELDS = [\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...', noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Secondary Phone Number', name: 'pnumber2', svg: phoneb, placeholder: 'Enter secondary phone number...',  noValueError: 'You must provide a secondary phone number'\n  },\n  {\n    label: 'Vehicle Year', name: 'vyear', svg: calendarb, placeholder: 'Enter vehicle year...', noValueError: 'You must provide a vehicle year'\n  },\n  {\n    label: 'Vehicle Make', name: 'vmake', svg: carb, placeholder: 'Enter vehicle make...', noValueError: 'You must provide a vehicle make'\n  },\n  {\n    label: 'Vehicle Model', name: 'vmodel', svg: carb, placeholder: 'Enter vehicle model..', noValueError: 'You must provide a vehicle model'\n  },\n  {\n    label: 'License Plate Number', name: 'lpnumber', svg: licenseb, placeholder: 'Enter license plate number...', noValueError: 'You must provide a license plate number'\n  },\n  {\n    label: 'Vehicle Vin Number', name: 'vnumber', svg: vinb, placeholder: 'Enter vehicle vin number...', noValueError: 'You must provide a vin number'\n  },\n  {\n    label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter mileage...', noValueError: 'You must provide the mileage'\n  },\n  {\n    label: 'Tag Number', name: 'tnumber', svg: hashb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number'\n  },\n]\n\nclass AddVehicle extends Component {\n  componentDidMount() {\n    const { getSelectedCustomer, realCustomers } = this.props\n\n  }\n\n  renderFields = () => {\n    const selectedCustomer = this.props.selectedCustomer\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          type=\"text\" \n          name={field.name} \n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n          placeholder={field.placeholder}\n          svg={field.svg}\n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history, selectedCustomer } = this.props\n    console.log(this.props)\n    console.log(`Here is the selected customer ${selectedCustomer}`);\n    history.go(-1)\n  }\n\n  render() {\n    const { createNewVehicle, selectedCustomer } = this.props\n    console.log(this.props);\n    console.log(selectedCustomer);\n    const props = this.props\n\n    const createBody = (values, props) => {\n      const history = props.history\n        let dataa = {\n          values: values,\n          props: props\n        }\n        createNewVehicle(dataa);\n        console.log(history)\n        history.push('/new-vehicle/confirmation');\n        window.location.reload();\n    }\n\n    return (\n      <div>\n      <MainBG>\n        <StyledBackIcon\n            onClick={() => this.goBack()}\n        >\n           <SVG src={arrowleftw} />\n        </StyledBackIcon>\n          <MainHeading>\n            <Text\n              mainHeading\n              padding=\"30px 0 50px 0\"\n            >\n              Enter The Fields Below\n            </Text>\n          </MainHeading>\n        <FormContainer\n        >\n            <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n              {this.renderFields()}\n              <Button\n                standardBtn\n                margin=\"0 auto\"\n                type=\"submit\"\n              >\n                <Text\n                  buttonText\n                >\n                  Submit\n                </Text>\n              </Button>\n            </form>\n        </FormContainer>\n      </MainBG>\n  </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newVehicleForm'\n})(AddVehicle)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewUser } from '../../store/actions/customer';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport Colors from '../constants/colors';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport { MainBG, NewDiv } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst RegisterContainer = styled(NewDiv)`\n  @media ${device.tablet} {\n    width: 418px;\n    height: 700px;\n    margin: 0 auto;\n  } \n\n`\n\n\nconst FIELDS = [\n  {\n    label: 'Email', name: 'email', svg: userb, placeholder: 'Enter Email....', noValueError: 'You must provide a email address'\n  },\n  {\n    label: 'Password', name: 'password', svg: lockb, placeholder: 'Enter Password....', noValueError: 'You must provide a password'\n  },\n  {\n    label: 'Confirm Password', name: 'password2', svg: lockb, placeholder: 'Confirm Password....', noValueError: 'Please confirm your password'\n  },\n  {\n    label: 'Company Name', name: 'companyName', svg: lockb, placeholder: 'Enter Company Name....', noValueError: 'Please enter a name for your company'\n  }\n]\n\nclass RegisterUser extends Component {\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          placeholder={field.placeholder}\n          type=\"text\" \n          name={field.name} \n          component={TextField}\n          fieldWidth=\"345px\"\n          containerWidth=\"417px\" \n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  handleNewUser = (values) => {\n    const { createNewUser, history } = this.props\n    createNewUser(values);\n  //  history.push('/login')\n  }\n\n  render() {\n    const { createNewUser } = this.props\n    return (\n      <div>\n          <MainBG>\n            <RegisterContainer\n            >\n              <NewDiv\n                padding=\"200px 0 56px 0\"\n              >\n                  <img src = { mainLogo } />\n                </NewDiv>\n                <form onSubmit={this.props.handleSubmit(values => this.handleNewUser(values))}>\n                  {this.renderFields()}\n                  <Button\n                    width=\"416px\"\n                    height=\"50px\"\n                    backgroundColor={Colors.darkBlue}\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Sign Up\n                    </Text>\n                  </Button>\n                </form>\n            </RegisterContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n    console.log(values);\n     if (values.password != values.password2) {\n         errors.password2 = 'Passwords do not match'\n    };\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newUserForm'\n})(RegisterUser)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewUser } from '../../store/actions/customer';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport { MainBG, NewDiv } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport colors from '../constants/colors';\n\nconst LoginContainer = styled(NewDiv)`\n  @media ${device.tablet} {\n    width: 418px;\n    height: 700px;\n    margin: 0 auto;\n  } \n\n`\n\nconst FIELDS = [\n  {\n    label: 'Email', name: 'email', placeholder: 'Enter Email....', svg: userb, noValueError: 'You must provide a email address'\n  },\n  {\n    label: 'Password', name: 'password', placeholder: 'Enter Password....', svg: lockb, noValueError: 'You must provide a password'\n  }\n]\n\nclass LoginUser extends Component {\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          type=\"text\" \n          name={field.name} \n          placeholder={field.placeholder}\n          component={TextField} \n      />\n      )  \n    });\n  }\n\n  handleLoginSubmit = (values) => {\n    const { userLogin, history } = this.props\n    userLogin(values);\n   // window.location.reload()\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  render() {\n    const { userLogin, logoutUser } = this.props\n    return (\n      <div>\n          <MainBG>\n            <LoginContainer\n            >\n              <NewDiv\n                padding=\"200px 0 56px 0\"\n              >\n                  <img src = { mainLogo } />\n                </NewDiv>\n                <form onSubmit={this.props.handleSubmit(values => this.handleLoginSubmit(values))}>\n                  {this.renderFields()}\n                  <Button\n                    width=\"416px\"\n                    height=\"50px\"\n                    backgroundColor={colors.darkBlue}\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Sign In\n                    </Text>\n                  </Button>\n                </form>\n            </LoginContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n    console.log(values);\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'userLoginForm'\n})(LoginUser)","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors';\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport plusw from '../../../rersources/svg/plusw.svg';\nimport pointw from '../../../rersources/svg/pointw.svg';\nimport phonebookw from '../../../rersources/svg/phonebookw.svg';\nimport settingsw from '../../../rersources/svg/settingsw.svg';\nimport returnw from '../../../rersources/svg/returnw.svg';\nimport barsw from '../../../rersources/svg/barsw.svg';\nimport { NewDiv } from '../Styled/StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\n\nexport const MainNavContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        background-color: ${Colors.black};\n        width: 100%;\n        opacity: .8;\n        z-index: 90;\n        display: ${({ display }) => (display || 'none')};\n        position: fixed;\n        top: 0;\n        bottom: 0;\n    }\n`\n\n\nexport const HeaderContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        background-color: ${Colors.lightBlue};\n        float: left;\n        position: fixed;\n        height: 100vh;\n        z-index: 100;\n        display: ${({ display }) => (display || 'none')};\n        border-bottom-right-radius: 20px;\n        border-top-right-radius: 20px;\n    } \n`\n\nexport const HeaderTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        height: 207px;\n        padding-top: 15px;\n        background-color: ${Colors.fullWhite};\n        border-top-right-radius: 20px;\n    } \n`\n\nexport const HeaderTopImg = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100px;\n        height: 100px;\n        border-radius: 50px;\n        margin: 0 auto;\n        background: ${Colors.darkBlue};\n    }\n`\n\nexport const HeaderTopText = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 92%;\n        margin: 0 auto;\n        margin-top: 15px;\n    }\n`\n\nexport const HeaderLIContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        height: 70px;\n        width: 100%\n        border-bottom: 1px solid white;\n        background: ${Colors.lightBlue};\n    }\n`\n\nexport const LILeft = styled(NewDiv)`\n    @media ${device.tablet} {\n        float: left;\n        width: 80px;\n        height: 70px;\n    }\n`\n\nexport const LIRight = styled(NewDiv)`\n    @media ${device.tablet} {\n        float: right;\n        width: 243px;\n        height: 70px;\n        text-align: left;\n        line-height: 70px;\n    }\n`\n\nexport const NavLIIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding-top: 20px;\n        width: 30px;\n        height: 30px;\n        margin: 0 auto;\n\n       svg {\n           width: 30px;\n           height: 30px;\n       } \n    }\n`\n\nexport const NavToggleIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        height: 50px;\n        width: 50px;\n        position: fixed;\n        bottom: 35px;\n        left: 25px;\n        display: ${({ display }) => (display || 'none')};\n        z-index: 999;\n\n        svg {\n            height: 50px;\n            width: 50px;\n        }\n    }\n`\n\nclass StyledNavBar extends Component  {\n\n    handleLogout = () => {\n        const { logoutUser, history } = this.props\n        console.log('Handling logout....')\n        logoutUser();\n        history.push('/')\n        window.location.reload()\n    }\n\n    render() {\n        const { renderContent, toggleNavBar, toggleNavToggle, fetchUser, showNavBar, showNavToggle, auth } = this.props\n        const data = this.props && this.props.auth ? this.props.auth.data: null\n        var companyName;\n        if (data) {\n            companyName = data.email\n        } else {\n            companyName = 'No Company Name'\n        }\n        console.log(showNavToggle);\n        console.log(showNavBar);\n        const toggleNav = () => {\n            if (showNavBar === 'block') {\n                toggleNavBar('none')\n                toggleNavToggle(barsw);\n            } else {\n                toggleNavBar('block');\n                toggleNavToggle(returnw);\n            }\n        }\n        return (\n          <div>\n              <MainNavContainer \n                display={showNavBar}\n              />\n            <HeaderContainer\n                display={showNavBar}\n            >\n                <HeaderTop>\n                      <HeaderTopImg />\n                      <HeaderTopText>\n                          <Text\n                            lblue22\n                            padding=\"10px 0 0 0\"\n                            maxWidth=\"300px\"\n                          >\n                              {companyName}\n                          </Text>\n                          <Text\n                            gray30\n                            padding=\"10px 0 0 0\"\n                          >\n                              Welcome\n                          </Text>\n                      </HeaderTopText>\n                </HeaderTop>\n                <Link to ='/new-customer'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={plusw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              New Customer\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/customers/chat/service'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={pointw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              Current Vehicles\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/all-customers'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={phonebookw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              All Customers\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/settings'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={settingsw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              Settings\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                  <HeaderLIContainer\n                    onClick={this.handleLogout}\n                  >\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={settingsw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              {renderContent()}\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n            </HeaderContainer>\n             <NavToggleIcon\n             onClick={toggleNav}\n             display='block'\n           >\n               <SVG src={showNavToggle} />\n           </NavToggleIcon>\n           </div>\n          )\n    }\n   \n  }\n\n  export default withRouter(StyledNavBar);\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\n\nclass CustomerService extends Component {\n\n  componentDidMount() {\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    openServiceCustomer = () => {\n        const { history } = this.props\n        history.push(`/new-vehicle`);\n    }\n\n  render() {\n    const realCustomers = this.props.state.realCustomers\n    const selectedCustomer = this.props.selectedCustomer\n\n    console.log(realCustomers.length)\n    console.log(selectedCustomer);\n    console.log(this.props);\n\n    if (realCustomers.length >= 1) {\n        return (\n            <div>\n              <h2>Customer Service</h2>\n              <Button onClick={() => this.openServiceCustomer()}>\n                  Add Vehicle\n              </Button>\n            </div>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerService));","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Provider } from 'react-redux'\nimport logo from './logo.svg'\nimport mainLogo from './rersources/mainLogo.png';\nimport './App.css';\nimport store from './store';\nimport history from './history';\nimport Customers from './components/Customer/customers';\nimport ChatMessenger from './components/Customer/ChatMessenger';\nimport AllCustomers from './components/Customer/AllCustomers';\nimport CustomerInfo from './components/Customer/CustomerInfo';\nimport VehicleInfo from './components/Customer/VehicleInfo';\nimport ServiceInfo from './components/Customer/ServiceInfo';\nimport CustomerConfirmation from './components/Customer/CustomerConfirmation';\nimport VehicleConfirmation from './components/Customer/VehicleConfirmation';\nimport UserLogin from './components/Customer/userLogin';\nimport AddCustomer from './components/Customer/AddCustomer';\nimport AddService from './components/Customer/AddService';\nimport AddVehicle from './components/Customer/AddVehicle';\nimport RegisterUser from './components/Customer/RegisterUser';\nimport LoginUser from './components/Customer/LoginUser';\nimport StyledNavBar from './components/Customer/Styled/StyledNavBar';\nimport CustomerService from './components/Customer/CustomerService';\nimport { connect } from 'react-redux';\n\nimport { createNewCustomer, createNewUser, createNewVehicle, userLogin, logoutUser, fetchUser, getRealCustomers, getCustomerVehicles, createNewService, getCustomerServices, createNewToMessage, getCustomerActiveToMessages } from './store/actions/customer';\nimport { toggleNavBar, toggleNavToggle, getSelectedCustomer, getSelectedVehicle, getCurrentEmailId } from './store/reducers/environment';\n\nimport styled from 'styled-components';\n\nimport { BrowserRouter as Router, Route, Link, withRouter, Switch } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\n\nconst Code = () => {\n  return (\n    <div>\n      Code Code Code\n    </div>\n  )\n}\n\nclass App extends Component {\n\n  componentDidMount() {\n    const { fetchUser, getRealCustomers, getCustomerVehicles, getCustomerServices, getCustomerActiveToMessages } = this.props;\n    getRealCustomers();\n    getCustomerVehicles();\n    getCustomerServices();\n    fetchUser();\n    getCustomerActiveToMessages();\n  }\n\n  renderContent = () => {\n    const props = this.props\n    const auth = this.props.auth\n    const data = props && props.auth ? props.auth.data : null;\n    switch (data) {\n      case null:\n        return 'Still deciding';\n      case false:\n        return 'Login';\n      case '':\n        return 'Login';\n      default:\n        return 'Logout';\n    }\n  }\n\n  renderCorrectPage = () => {\n    const props = this.props\n    const auth = this.props.auth\n    const data = props && props.auth ? props.auth.data: null\n\n    const userLogin = this.props.userLogin;\n    const logoutUser = this.props.logoutUser;\n    const getSelectedCustomer = this.props.getSelectedCustomer;\n    const environment = this.props.environment;\n\n    switch (data) {\n      case null:\n        console.log('null');\n        return (\n          <LoginUser\n           userLogin={userLogin}\n            logoutUser={logoutUser}\n          />\n        )\n      case false:\n          console.log('false');\n          return (\n            <LoginUser\n              userLogin={userLogin}\n              logoutUser={logoutUser}\n              history={history}\n           />\n        )\n      case '':\n          console.log('empty');\n          return (\n            <LoginUser\n              userLogin={userLogin}\n              logoutUser={logoutUser}\n              history={history}\n           />\n        )\n      default:\n          console.log('default');\n        return (\n            <AllCustomers\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              history={history}\n             />\n        )\n\n    }\n  }\n\n  render () {\n    const createNewCustomer = this.props.createNewCustomer;\n    const createNewUser = this.props.createNewUser;\n    const createNewVehicle = this.props.createNewVehicle;\n    const createNewService = this.props.createNewService;\n    const createNewToMessage = this.props.createNewToMessage;\n    const userLogin = this.props.userLogin;\n    const logoutUser = this.props.logoutUser;\n    const toggleNavBar = this.props.toggleNavBar;\n    const toggleNavToggle = this.props.toggleNavToggle;\n    const getSelectedCustomer = this.props.getSelectedCustomer;\n    const getSelectedVehicle = this.props.getSelectedVehicle;\n    const getCurrentEmailId = this.props.getCurrentEmailId\n    const environment = this.props.environment;\n    const realCustomers = this.props.state.realCustomers;\n    const customerVehicles = this.props.state.customerVehicles;\n    const customerServices = this.props.state.customerServices;\n    const activeToMessages = this.props.state.activeToMessages;\n    const auth = this.props.auth;\n;\n    console.log(this.props);\n    console.log(this.props.environment);\n    console.log(realCustomers);\n    console.log(customerVehicles);\n    console.log(customerServices);\n    console.log(activeToMessages)\n\n    return (\n          <div className=\"App\">\n            <StyledNavBar\n              renderContent={this.renderContent} \n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              fetchUser={fetchUser}\n              showNavBar={environment.showNavBar}\n              showNavToggle={environment.showNavToggle}\n              logoutUser={logoutUser}\n              history={history}\n              auth={auth}\n            />\n            <Switch>\n            <Route exact path=\"/\" \n            render={(props) => \n            <div>\n                {this.renderCorrectPage()}\n              </div>\n                }\n             />\n            <Route exact path=\"/login\" \n            render={(props) => <div>\n              {this.renderCorrectPage()}\n            </div> }\n            history={history}\n             />\n            <Route exact path=\"/register\" \n            render={(props) => <RegisterUser\n            createNewUser={createNewUser}\n            history={history}\n             />  }\n             />\n            <Route exact path=\"/new-customer\" \n            render={(props) => <AddCustomer\n            createNewCustomer={createNewCustomer}\n            toggleNavBar={toggleNavBar}\n            toggleNavToggle={toggleNavToggle}\n            showNavBar={environment.showNavBar}\n            history={history}\n            realCustomers={realCustomers}\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            getCurrentEmailId={getCurrentEmailId}\n             />  }\n             />\n             <Route exact path=\"/new-vehicle\" \n            render={(props) => <AddVehicle\n            createNewVehicle={createNewVehicle}\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            history={history}\n             />  }\n             />\n             <Route exact path=\"/new-service\" \n            render={(props) => <AddService\n            createNewService={createNewService}\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            history={history}\n             />  }\n             />\n             <Route exact path=\"/new-customer/confirmation\" \n            render={(props) => <CustomerConfirmation\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            realCustomers={realCustomers}\n            history={history}\n             />  }\n             />\n\n            <Route exact path=\"/new-vehicle/confirmation\" \n            render={(props) => <VehicleConfirmation\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            getSelectedCustomer={getSelectedCustomer}\n            realCustomers={realCustomers}\n            customerVehicles={customerVehicles}\n            getSelectedVehicle={getSelectedVehicle}\n            history={history}\n             />  }\n             />\n\n            <Route exact path=\"/all-customers\" \n            render={(props) => <AllCustomers\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              history={history}\n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              showNavBar={environment.showNavBar}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/:customerid\" \n              render={(props) => <CustomerInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/vehicles/:vehicle\" \n              render={(props) => <VehicleInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n              customerServices={customerServices}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/vehicles/:vehicleid/:serviceid\" \n              render={(props) => <ServiceInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n              customerServices={customerServices}\n              selectedService={environment.selectedService}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/service/:customerid\" \n              render={(props) => <AddService\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              selectedVehicle={environment.selectedVehicle}\n              realCustomers={realCustomers}\n              history={history}\n              createNewService={createNewService}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/chat/service\" \n              render={(props) => <ChatMessenger\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              selectedVehicle={environment.selectedVehicle}\n              realCustomers={realCustomers}\n              history={history}\n              customerServices={customerServices}\n              createNewToMessage={createNewToMessage}\n              activeToMessages={activeToMessages}\n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              showNavBar={environment.showNavBar}\n    \n             />  }\n             />\n            <Route exact path=\"/settings\" component={Code} />\n            <Route exact path=\"/logout\" component={Code} logoutUser={logoutUser} />\n            </Switch>\n          </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { \n        auth: state.auth,\n        environment: state.environment,\n        state: state\n      }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createNewCustomer: (values) => dispatch(createNewCustomer(values)),\n    createNewUser: (values) => dispatch(createNewUser(values)),\n    createNewVehicle: (values) => dispatch(createNewVehicle(values)),\n    createNewService: (values) => dispatch(createNewService(values)),\n    createNewToMessage: (value) => dispatch(createNewToMessage(value)),\n    userLogin: (values) => dispatch(userLogin(values)),\n    logoutUser: (values) => dispatch(logoutUser(values)),\n    fetchUser: (values) => dispatch(fetchUser(values)),\n    toggleNavBar: (display) => dispatch(toggleNavBar(display)),\n    toggleNavToggle: (display) => dispatch(toggleNavToggle(display)),\n    getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n    getSelectedVehicle: (vehicle) => dispatch(getSelectedVehicle(vehicle)),\n    getCurrentEmailId: (email) => dispatch(getCurrentEmailId(email)),\n    getRealCustomers: () => dispatch(getRealCustomers()),\n    getCustomerVehicles: () => dispatch(getCustomerVehicles()),\n    getCustomerServices: () => dispatch(getCustomerServices()),\n    getCustomerActiveToMessages: () => dispatch(getCustomerActiveToMessages())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport history from './history';\n\nimport { Provider } from 'react-redux';\n//import reducers from './reducers';\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter\n            history={history}\n        >\n            <App \n                history={history}\n            />\n        </BrowserRouter>\n    </Provider>, \n    document.querySelector('#root')\n);\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/barsw.03d3330b.svg\";","module.exports = __webpack_public_path__ + \"static/media/mainLogo.546207c0.png\";","module.exports = __webpack_public_path__ + \"static/media/userw.60f972be.svg\";","module.exports = __webpack_public_path__ + \"static/media/phoneb.cbe528a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/phonew.1d986067.svg\";","module.exports = __webpack_public_path__ + \"static/media/carw.8e8e5ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendarw.702919de.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkw.ed1b0bd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/mileageb.096767ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/hashb.d38b84d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/mailw.1bafb9c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencilb.fc4dabf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinw.d6f95123.svg\";"],"sourceRoot":""}