{"version":3,"sources":["rersources/svg/historyw.svg","rersources/svg/userb.svg","rersources/svg/templatey.svg","rersources/svg/senddb.svg","rersources/landing.png","rersources/svg/servicew.svg","rersources/svg/vinw.svg","rersources/svg/licensew.svg","rersources/svg/lockb.svg","rersources/svg/detailsw.svg","rersources/svg/pencilw.svg","rersources/svg/emailb.svg","rersources/svg/plusw.svg","rersources/svg/pointw.svg","rersources/svg/phonebookw.svg","rersources/svg/settingsw.svg","rersources/svg/returnw.svg","logo.svg","rersources/svg/arrowleftw.svg","rersources/svg/phoneb.svg","store/reducers/customer.js","store/actions/constants.js","store/reducers/environment.js","store/reducers/realCustomer.js","store/reducers/customerVehicle.js","store/reducers/customerService.js","store/reducers/customerToMessage.js","store/reducers/index.js","store/reducers/auth.js","store/index.js","history.js","store/actions/customer.js","components/Customer/customers.js","components/Customer/Styled/StyledMediaQuery.jsx","components/constants/colors.js","components/Customer/Styled/StyledComponents.jsx","components/Customer/Styled/Button.jsx","components/Customer/Styled/Text.jsx","components/Customer/Styled/StyledOverlayTemplate.jsx","components/Customer/Styled/StyledOverlayEndService.jsx","components/Customer/CustomerCellRow.js","components/Customer/Styled/StyledBackIcon.jsx","components/Customer/ChatMessenger.js","components/Customer/LandingPage.js","components/Customer/AllCustomers.js","components/Customer/CustomerInfo.js","components/Customer/VehicleInfo.js","components/Customer/ServiceInfo.js","components/Customer/CustomerConfirmation.js","components/Customer/VehicleConfirmation.js","components/Customer/userLogin.js","components/Customer/TextField.js","components/Customer/AddCustomer.js","components/Customer/AddService.js","components/Customer/AddService2.js","components/Customer/AddVehicle.js","components/Customer/AddVehicle2.js","components/Customer/RegisterUser.js","components/Customer/LoginUser.js","components/Customer/EndService.js","components/Customer/Styled/StyledNavBar.jsx","components/Customer/CustomerService.js","App.js","registerServiceWorker.js","index.js","rersources/svg/barsw.svg","rersources/svg/mileageb.svg","rersources/mainLogo.png","rersources/svg/userw.svg","rersources/svg/pencilb.svg","rersources/svg/phonew.svg","rersources/logoSvg.svg","rersources/svg/numberb.svg","rersources/svg/carb.svg","rersources/svg/carw.svg","rersources/svg/closer.svg","rersources/svg/mileagew.svg","rersources/svg/calendarw.svg","rersources/svg/checkw.svg","rersources/svg/calendarb.svg","rersources/svg/licenseb.svg","rersources/svg/vinb.svg","rersources/svg/mailw.svg"],"names":["module","exports","__webpack_require__","p","customerReducer","state","arguments","length","undefined","_ref","type","payload","initialState","showNavBar","showNavToggle","barsw","navIconDisplay","selectedCustomer","selectedVehicle","selectedService","selectedServiceMesssage","selectedMessageText","showTemplateOverlay","showEndServiceOverlay","currentEmailId","search","currentFilter","getSelectedCustomer","customer","GET_SELECTED_CUSTOMER","getSelectedService","service","GET_SELECTED_SERVICE","updateCustomerSearch","UPDATE_CUSTOMER_SEARCH","getCurrentFilter","filter","GET_CURRENT_FILTER","TOGGLE_NAV_ICON_DISPLAY","TOGGLE_NAV_BAR","TOGGLE_NAV_TOGGLE","GET_SELECTED_VEHICLE","GET_SELECTED_SERVICE_MESSAGE","GET_SELECTED_MESSAGE_TEXT","TOGGLE_TEMPLATE_OVERLAY","TOGGLE_END_SERVICE_OVERLAY","GET_CURRENT_EMAIL_ID","customerRealReducer","customerVehicleReducer","customerServiceReducer","customerActiveToMessageReducer","combineReducers","environment","action","Object","objectSpread","display","vehicle","selectedServiceMessage","sm","text","status","email","customers","activeToMessages","realCustomers","customerVehicles","customerServices","activeServices","customerActiveServiceReducer","auth","form","reduxForm","middleware","thunk","withDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","apply","createBrowserHistory","getRealCustomers","dispatch","fetch","then","res","json","getCustomerActiveToMessages","userLogin","values","_ref7","asyncToGenerator","regenerator_default","a","mark","_callee7","wrap","_context7","prev","next","setTimeout","location","reload","axios","post","sent","console","log","data","stop","_x7","this","fetchUser","_ref8","_callee8","_context8","get","_x8","Customers","props","getCustomers","react_default","createElement","map","key","id","firstName","lastName","Component","defaultProps","connect","size","device","mobileS","concat","mobileM","mobileL","tablet","tabletL","laptop","laptopL","desktop","desktopL","colors","fullWhite","lightGray","lighterGray","lightBlue","darkBlue","black","brightRed","NewDiv","styled","div","_templateObject","width","_ref2","height","_ref3","margin","_ref4","padding","_ref5","border","_ref6","borderRadius","textAlign","zIndex","_ref9","float","_ref10","_ref11","background","MainBG","_templateObject2","MainHeading","_templateObject3","Button","button","Button_templateObject","color","Colors","marginBottom","backgroundColor","is","Button_templateObject2","Button_templateObject3","_templateObject4","_templateObject5","_templateObject6","Text","Text_templateObject","fontSize","lineHeight","maxWidth","fontWeight","fontStyle","fontFamily","Text_templateObject2","Text_templateObject3","Text_templateObject4","Text_templateObject5","Text_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","propTypes","PropTypes","string","largeText","bool","subtext","subtitle","error","gray","pointer","underline","inline","StyledOverlayContainer","StyledOverlayTemplate_templateObject","StyledOverlayContentBox","StyledOverlayTemplate_templateObject2","OverlayContentContainer","StyledOverlayTemplate_templateObject3","CustomerInputMessage","input","StyledOverlayTemplate_templateObject4","CustomerInputMessageLarge","textarea","StyledOverlayTemplate_templateObject5","TemplateNavContainer","StyledOverlayTemplate_templateObject6","CloseTemplateOverlay","StyledOverlayTemplate_templateObject7","StyledOverlayTemplate","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleNew","e","value","preventDefault","template1","text1","customerName","text2","newText","customText","onSubmit","assertThisInitialized","Styled_Text","white20","onChange","handleChange","bind","name","Styled_Button","standardBtn","onClick","_this$props","getSelectedMessageText","toggleTemplateOverlay","template2","_this$props2","template3","_this$props3","template4","_this$props4","closeTemplateOverlayFunc","forwardTemplate","messageTemplates","templateNumber","setState","backTemplate","event","target","currentTemplate","lib_default","src","closer","dblue16","white16","StyledOverlayEndService_templateObject","StyledOverlayEndService_templateObject2","StyledOverlayEndService_templateObject3","StyledOverlayEndService_templateObject4","StyledOverlayEndService_templateObject5","StyledOverlayEndService_templateObject6","StyledOverlayEndService_templateObject7","StyledOverlayEndService","handleEnd","history","toggleEndServiceOverlay","push","closeEndServiceOverlayFunc","StyledOverlayEndService_StyledOverlayContainer","StyledOverlayEndService_StyledOverlayContentBox","StyledOverlayEndService_CloseTemplateOverlay","dblue22","StyledOverlayEndService_TemplateNavContainer","CustomerCellDiv","CustomerCellRow_templateObject","CellID","CustomerCellRow_templateObject2","CellInfoLeft","CustomerCellRow_templateObject3","CellInfoRight","CustomerCellRow_templateObject4","CustomerCellRow","myArray","i","customerid","openCustomerProfile","_this2","phoneNumber1","userb","lblue20","acName","acEmail","borderBottom","withRouter","StyledBackIcon","StyledBackIcon_templateObject","MessengerContainer","ChatMessenger_templateObject","MessengerContainerTop","ChatMessenger_templateObject2","MessengerTopText","ChatMessenger_templateObject3","MessageCell","ChatMessenger_templateObject4","MessageCellContentTop","ChatMessenger_templateObject5","MessageCellContentBottom","ChatMessenger_templateObject6","MessengerSearchBar","ChatMessenger_templateObject7","MessengerTextBox","ChatMessenger_templateObject8","MessengerChatContainer","ChatMessenger_templateObject9","MessengerChatTopSec","ChatMessenger_templateObject10","MessengerFixedBottom","ChatMessenger_templateObject11","ChatMessagesContainer","ChatMessenger_templateObject12","BottomLeftButton","ChatMessenger_templateObject13","BottomRightButton","ChatMessenger_templateObject14","BottomMiddleText","ChatMessenger_templateObject15","ChatToRow","ChatMessenger_templateObject16","ChatMessageToBubble","ChatMessenger_templateObject17","ChatMessenger","serviceid","openThisChat","v","getSelectedServiceMessage","displayOverlay","selectedMesageText","Styled_StyledOverlayTemplate","displayOverlayEnd","Styled_StyledOverlayEndService","endService","renderChatCells","activeServiceArray","reversedActiveServiceArray","reverse","item","toLowerCase","filterVal","match","lastMessage","formattedTime","displayedMessage","vMessages","slice","textMessage","jsTime","date","timestamp","substring","newDate","Date","fHours","getHours","ampm","getMinutes","substr","ellipsis","renderServiceId","dblue30","checkMessageFunc","_this$props5","renderChatMessages","_this$props6","displayedToMessages","toggleTemplateTrue","_this$props7","sendNewMessage","_this$props8","createNewToMessage","phoneNumber","vehicleid","user","searchMessageCells","_this$props9","historyAndReload","renderNotLoggedIn","white35","buttonText","correctChats","correctDisplayedMessages","_this$props10","toggleNavBar","toggleNavToggle","go","_this$props11","placeholder","templatey","method","senddb","getActiveCustomerServices","customerActiveServices","LHeader","LandingPage_templateObject","LogoImg","img","LandingPage_templateObject2","RightBtns","LandingPage_templateObject3","ContactEmail","LandingPage_templateObject4","ActionBtn","LandingPage_templateObject5","bgColor","MainContainer","LandingPage_templateObject6","landingImg","ContentContainer","LandingPage_templateObject7","LandingList","ul","LandingPage_templateObject8","Parent","LandingPage_templateObject9","LandingPage","toggleShowContact","showContact","openSignIn","mainL","CustomerSearchBar","AllCustomers_templateObject","CustomerSearchSelectSec","AllCustomers_templateObject2","SearchNameBox","AllCustomers_templateObject3","NameSelectDiv","AllCustomers_templateObject4","StyledSelect","select","AllCustomers_templateObject5","SearchButton","AllCustomers_templateObject6","AllCsBG","AllCustomers_templateObject7","AllCustomers","searchCustomers","s","document","getElementById","strSelect","options","selectedIndex","updateFilter","cFilter","renderRows","filteredCustomers","realCustomersReversed","number","d","Customer_CustomerCellRow","assign","mainHeading","CustomerInfo_templateObject","InfoElement","CustomerInfo_templateObject2","InfoEIcon","CustomerInfo_templateObject3","InfoEText","CustomerInfo_templateObject4","marginLeft","CustomerInfo","getCustomerFromParams","params","sc","consoleLog","openNewVehicle","openVehicleDetails","getSelectedVehicle","renderVehicles","newVehicleArray","ownerid","vehicles","vehicleMake","vehicleModel","twonum","phoneNumber2","Styled_StyledBackIcon","goBack","arrowleftw","userw","customerIE","phonew","mailw","carw","largeBtn","VehicleInfo_templateObject","VehicleInfo_templateObject2","VehicleInfo_templateObject3","VehicleInfo_templateObject4","VehicleInfo","sv","searchV","searchC","openServiceScreen","openServiceDetails","renderServices","newServiceArray","services","fMinutes","fDay","getDate","fMonth","getMonth","fYear","getFullYear","formattedDate","VehicleInfo_InfoElement","VehicleInfo_InfoEIcon","VehicleInfo_InfoEText","calendarw","vehicleYear","mileagew","vehicleMileage","licensew","vehicleLicenseNumber","vinw","vehicleVinNumber","servicew","ServiceInfo_templateObject","ServiceInfo_templateObject2","ServiceInfo_templateObject3","ServiceInfo_templateObject4","ServiceInfo","ss","searchS","ServiceInfo_InfoElement","ServiceInfo_InfoEIcon","ServiceInfo_InfoEText","mileage","pencilw","reason","detailsw","details","ConfirmContentContainer","CustomerConfirmation_templateObject","ConfirmIconDiv","CustomerConfirmation_templateObject2","ConfirmContentText","CustomerConfirmation_templateObject3","ConfirmButtons","CustomerConfirmation_templateObject4","CustomerConfirmation","openAllVehicles","openAddVehicle","currentCus","pop","checkw","dblue20","VehicleConfirmation_templateObject","VehicleConfirmation_templateObject2","VehicleConfirmation_templateObject3","VehicleConfirmation_templateObject4","VehicleConfirmation","openAddService","currentV","currentCustomer","VehicleConfirmation_ConfirmContentContainer","VehicleConfirmation_ConfirmIconDiv","VehicleConfirmation_ConfirmContentText","VehicleConfirmation_ConfirmButtons","UserLogin","resSend","FormField","TextField_templateObject","FormFieldContainer","TextField_templateObject2","FormFieldLeft","TextField_templateObject3","FormFieldSplit","TextField_templateObject4","FormIconContainer","TextField_templateObject5","TextField","svg","label","defaultValue","fieldWidth","containerWidth","_ref3$meta","meta","touched","FormContainer","AddCustomer_templateObject","FIELDS","noValueError","phoneb","emailb","AddCustomer","renderFields","field","Field","component","handleInputChange","refreshWindow","addNewCustomer","createNewCustomer","handleSubmit","validate","errors","cname","pnumber","pnumber2","AddService_templateObject","DetailsTextarea","AddService_templateObject2","AddService","searchc","searchv","vMileage","mileageb","pencilb","tNumber","numberb","renderDetailsField","updateTextarea","newDetailsText","currentDetailsText","createNewService","AddService_FormContainer","dataa","detailsText","myJSON","JSON","stringify","createBody","tnumber","AddService2_templateObject","AddService2_templateObject2","AddService2_FormContainer","AddService2_DetailsTextarea","AddVehicle_templateObject","AddVehicle","number2","vYear","calendarb","vMake","carb","vModel","licenseP","licenseb","vVin","vinb","createNewVehicle","AddVehicle_FormContainer","vyear","vmake","vmodel","lpnumber","vnumber","AddVehicle2_templateObject","AddVehicle2_FormContainer","LogoContainer","RegisterUser_templateObject","RegisterContainer","RegisterUser_templateObject2","RegisterUser_templateObject3","lockb","RegisterUser","handleNewUser","createNewUser","logoSvg","forEach","password","password2","LoginUser_templateObject","LoginContainer","LoginUser_templateObject2","LoginUser","handleLoginSubmit","logoutUser","LoginUser_LogoContainer","EndService_templateObject","EndService_templateObject2","EndService","tagNumber","selectedServiceText","updateService","EndService_FormContainer","EndService_DetailsTextarea","MainNavContainer","StyledNavBar_templateObject","HeaderContainer","StyledNavBar_templateObject2","HeaderTop","StyledNavBar_templateObject3","HeaderTopImg","StyledNavBar_templateObject4","bgImg","HeaderTopText","StyledNavBar_templateObject5","HeaderLIContainer","StyledNavBar_templateObject6","LILeft","StyledNavBar_templateObject7","LIRight","StyledNavBar_templateObject8","NavLIIcon","StyledNavBar_templateObject9","NavToggleIcon","StyledNavBar_templateObject10","StyledNavBar","navIconCheck","toggleNavIconDisplay","handleLogout","companyName","companyImg","renderContent","image","lblue22","gray30","react_router_dom","to","plusw","navItem","pointw","phonebookw","settingsw","returnw","CustomerService","openServiceCustomer","Code","App","renderCorrectPage2","Customer_LoginUser","Customer_AllCustomers","renderCorrectPage","Customer_LandingPage","getCustomerVehicles","getCustomerServices","getCurrentEmailId","className","Styled_StyledNavBar","react_router","exact","path","render","Customer_RegisterUser","Customer_AddCustomer","Customer_AddVehicle","AddVehicle2","Customer_AddService","Customer_EndService","Customer_CustomerConfirmation","Customer_VehicleConfirmation","Customer_CustomerInfo","Customer_VehicleInfo","Customer_ServiceInfo","AddService2","Customer_ChatMessenger","_callee","_context","_x","_callee3","_context3","_x3","_callee2","_context2","_x2","_callee4","_context4","_x4","_callee5","_context5","_x5","_callee6","_context6","_x6","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","es","store","src_App_0","querySelector","URL","process","origin","addEventListener","response","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.227cc427.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/historyw.ee726142.svg\";","module.exports = __webpack_public_path__ + \"static/media/userb.ea158943.svg\";","module.exports = __webpack_public_path__ + \"static/media/templatey.be1a3992.svg\";","module.exports = __webpack_public_path__ + \"static/media/senddb.0cb7205c.svg\";","module.exports = __webpack_public_path__ + \"static/media/landing.f494e605.png\";","module.exports = __webpack_public_path__ + \"static/media/servicew.bda629b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinw.d6f95123.svg\";","module.exports = __webpack_public_path__ + \"static/media/licensew.ec0917c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/lockb.726d79e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/detailsw.1a5681fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencilw.9c7b621e.svg\";","module.exports = __webpack_public_path__ + \"static/media/emailb.49db445e.svg\";","module.exports = __webpack_public_path__ + \"static/media/plusw.3538fda8.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointw.4ed024ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/phonebookw.38f17819.svg\";","module.exports = __webpack_public_path__ + \"static/media/settingsw.923e5774.svg\";","module.exports = __webpack_public_path__ + \"static/media/returnw.9a134c4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowleftw.a55b94fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/phoneb.cbe528a1.svg\";","import {GET_CUSTOMERS} from '../actions/constants'\n\nconst customerReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_CUSTOMERS:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerReducer;\n","export const GET_CUSTOMERS = \"GET_CUSTOMERS\";\nexport const GET_REAL_CUSTOMERS = \"GET_REAL_CUSTOMERS\";\nexport const UPDATE_CUSTOMER = \"REMOVE_CUSTOMER\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const GET_VEHICLES = \"GET_VEHICLES\";\nexport const GET_SERVICES = \"GET_SERVICES\";\nexport const GET_ACTIVE_SERVICES = \"GET_ACTIVE_SERVICES\";\nexport const GET_ACTIVE_TO_MESSAGES = \"GET_ACTIVE_TO_MESSAGES\";\n","import lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\n\n// Reducer\nconst initialState = {\n    showNavBar: 'none',\n    showNavToggle: barsw,\n    navIconDisplay: 'none',\n    selectedCustomer: null,\n    selectedVehicle: null,\n    selectedService: null,\n    selectedServiceMesssage: null,\n    selectedMessageText: null,\n    showTemplateOverlay: false,\n    showEndServiceOverlay: false,\n    currentEmailId: '',\n    search: '',\n    currentFilter: 'Name'\n};\n\nexport function toggleNavIconDisplay(display) {\n    return {\n        type: TOGGLE_NAV_ICON_DISPLAY,\n        display\n    }\n}\n\nexport function toggleNavBar(display) {\n    return {\n        type: TOGGLE_NAV_BAR,\n        display\n    }\n}\n\nexport function toggleNavToggle(display) {\n    return {\n        type: TOGGLE_NAV_TOGGLE,\n        display\n    }\n}\n\nexport function getSelectedCustomer(customer) {\n    return {\n        type: GET_SELECTED_CUSTOMER,\n        customer\n    }\n}\n\nexport function getSelectedVehicle(vehicle) {\n    return {\n        type: GET_SELECTED_VEHICLE,\n        vehicle\n    }\n}\n\nexport function getSelectedService(service) {\n    return {\n        type: GET_SELECTED_SERVICE,\n        service\n    }\n}\n\nexport function getSelectedServiceMessage(sm) {\n    return {\n        type: GET_SELECTED_SERVICE_MESSAGE,\n        sm\n    }\n}\n\nexport function getSelectedMessageText(text) {\n    return {\n        type: GET_SELECTED_MESSAGE_TEXT,\n        text\n    }\n}\n\nexport function toggleTemplateOverlay(status) {\n    return {\n        type: TOGGLE_TEMPLATE_OVERLAY,\n        status\n    }\n}\n\nexport function toggleEndServiceOverlay(status) {\n    return {\n        type: TOGGLE_END_SERVICE_OVERLAY,\n        status\n    }\n}\n\nexport function getCurrentEmailId(email) {\n    return {\n        type: GET_CURRENT_EMAIL_ID,\n        email\n    }\n}\n\nexport function updateCustomerSearch(search) {\n    return {\n        type: UPDATE_CUSTOMER_SEARCH,\n        search\n    }\n}\n\nexport function getCurrentFilter(filter) {\n    return {\n        type: GET_CURRENT_FILTER,\n        filter\n    }\n}\n\nconst TOGGLE_NAV_ICON_DISPLAY = 'TOGGLE_NAV_ICON_DISPLAY';\nconst TOGGLE_NAV_BAR = 'TOGGLE_NAV_BAR';\nconst TOGGLE_NAV_TOGGLE = 'TOGGLE_NAV_TOGGLE';  \nconst GET_SELECTED_CUSTOMER = 'GET_SELECTED_CUSTOMER';\nconst GET_SELECTED_VEHICLE = 'GET_SELECTED_VEHICLE';\nconst GET_SELECTED_SERVICE = 'GET_SELECTED_SERVICE';\nconst GET_SELECTED_SERVICE_MESSAGE = 'GET_SELECTED_SERVICE_MESSAGE';\nconst GET_SELECTED_MESSAGE_TEXT = 'GET_SELECTED_MESSAGE_TEXT';\nconst TOGGLE_TEMPLATE_OVERLAY = 'TOGGLE_TEMPLATE_OVERLAY';\nconst TOGGLE_END_SERVICE_OVERLAY = 'TOGGLE_END_SERVICE_OVERLAY';\nconst GET_CURRENT_EMAIL_ID = 'GET_CURRENT_EMAIL_ID';\nconst UPDATE_CUSTOMER_SEARCH = 'UPDATE_CUSTOMER_SEARCH';\nconst GET_CURRENT_FILTER = 'GET_CURRENT_FILTER';\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n    case TOGGLE_NAV_BAR:\n        return {\n            ...state,\n            showNavBar: action.display\n        }\n    case TOGGLE_NAV_TOGGLE:\n        return {\n            ...state,\n            showNavToggle: action.display\n        }\n    case TOGGLE_NAV_ICON_DISPLAY:\n        return {\n            ...state,\n            navIconDisplay: action.display\n        }\n    case GET_SELECTED_CUSTOMER:\n        return {\n            ...state,\n            selectedCustomer: action.customer\n        }\n    case GET_SELECTED_VEHICLE:\n        return {\n            ...state,\n            selectedVehicle: action.vehicle\n        }\n    case GET_SELECTED_SERVICE:\n        return {\n            ...state,\n            selectedService: action.service\n        }\n    case GET_SELECTED_SERVICE_MESSAGE:\n        return {\n            ...state,\n            selectedServiceMessage: action.sm\n        }\n    case GET_SELECTED_MESSAGE_TEXT:\n        return {\n            ...state,\n            selectedMessageText: action.text\n        }\n    case TOGGLE_TEMPLATE_OVERLAY:\n        return {\n            ...state,\n            showTemplateOverlay: action.status\n        }\n    case TOGGLE_END_SERVICE_OVERLAY:\n        return {\n            ...state,\n            showEndServiceOverlay: action.status\n        }\n    case GET_CURRENT_EMAIL_ID:\n        return {\n            ...state,\n            currentEmailId: action.email\n        }\n    case UPDATE_CUSTOMER_SEARCH:\n        return {\n            ...state,\n            search: action.search\n        }\n    case GET_CURRENT_FILTER:\n        return {\n            ...state,\n            currentFilter: action.filter\n        }\n    default:\n        return state;\n    }\n}\n","import {GET_REAL_CUSTOMERS} from '../actions/constants'\n\nconst customerRealReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_REAL_CUSTOMERS:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerRealReducer;","import {GET_VEHICLES} from '../actions/constants'\n\nconst customerVehicleReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_VEHICLES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerVehicleReducer;","import {GET_SERVICES} from '../actions/constants'\n\nconst customerServiceReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_SERVICES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerServiceReducer;","import {GET_ACTIVE_TO_MESSAGES} from '../actions/constants'\n\nconst customerActiveToMessageReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_ACTIVE_TO_MESSAGES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerActiveToMessageReducer;","import {combineReducers} from 'redux';\nimport customerReducer from './customer';\nimport auth from './auth';\nimport environment from './environment';\nimport { reducer as reduxForm } from 'redux-form';\nimport customerRealReducer from './realCustomer';\nimport customerVehicleReducer from './customerVehicle';\nimport customerServiceReducer from './customerService';\nimport customerActiveServiceReducer from './customerService';\nimport customerActiveToMessageReducer from './customerToMessage';\n\nexport default combineReducers({\n  environment: environment,\n  customers: customerReducer,\n  activeToMessages: customerActiveToMessageReducer,\n  realCustomers: customerRealReducer,\n  customerVehicles: customerVehicleReducer,\n  customerServices: customerServiceReducer,\n  activeServices: customerActiveServiceReducer,\n  auth: auth,\n  form: reduxForm\n});\n","import {FETCH_USER} from '../actions/constants'\n\nexport default function(state = null, action) {\n    switch (action.type) {\n        case FETCH_USER:\n            return action.payload || false;\n        default:\n            return state;\n    }\n}","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleware = [\n  thunk\n]\nconst withDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(rootReducer, withDevTools(\n  applyMiddleware(...middleware)\n))\n","import { createBrowserHistory, createHashHistory } from 'history';\n\nexport default createBrowserHistory();","import axios from 'axios';\nimport {GET_CUSTOMERS, UPDATE_CUSTOMER, GET_REAL_CUSTOMERS, FETCH_USER, GET_VEHICLES, GET_SERVICES, GET_ACTIVE_SERVICES, GET_ACTIVE_TO_MESSAGES} from './constants';\n\nexport const getCustomers = () => dispatch => {\n  return fetch('/api/customers')\n    .then(res => res.json())\n    .then(customers => dispatch({type: GET_CUSTOMERS, payload: customers}))\n}\n\nexport const getRealCustomers = () => dispatch => {\n  return fetch('/all-customers/customers')\n    .then(res => res.json())\n    .then(realCustomers => dispatch({type: GET_REAL_CUSTOMERS, payload: realCustomers}))\n}\n\nexport const getCustomerVehicles = () => dispatch => {\n  return fetch('/customer-vehicles')\n  .then(res => res.json())\n  .then(customerVehicles => dispatch({type: GET_VEHICLES, payload: customerVehicles}))\n}\n\nexport const getCustomerServices = () => dispatch => {\n  return fetch('/customer/vehicles-services')\n  .then(res => res.json())\n  .then(customerServices => dispatch({type: GET_SERVICES, payload: customerServices}))\n}\n\nexport const getActiveCustomerServices = () => dispatch => {\n  return fetch('/customers/chat/service/get')\n  .then(res => res.json())\n  .then(customerActiveServices => dispatch({type: GET_ACTIVE_SERVICES, payload: customerActiveServices}))\n}\n\nexport const getCustomerActiveToMessages = () => dispatch => {\n  return fetch('/customers/chat/service/messages')\n  .then(res => res.json())\n  .then(activeToMessages => dispatch({type: GET_ACTIVE_TO_MESSAGES, payload: activeToMessages}))\n}\n\nexport const createNewCustomer = (values) => async dispatch => {\n  const res = await axios.post('/new-customer', values);\n  console.log('Here is the new customer nfndfnsdfnskdhfkshdf')\n  dispatch({type: GET_CUSTOMERS, payload: res.data});\n    window.location.reload();\n}\n\nexport const createNewVehicle = (dataa) => async dispatch => {\n  console.log('sending new vehicle to database......')\n  const res = await axios.post('/new-vehicle/:customerid', dataa);\n  dispatch({type: GET_CUSTOMERS, payload: res.data});\n}\n\nexport const createNewUser = (values) => async dispatch => {\n  const res = await axios.post('/register', values);\n  console.log('Here is the new user being added.')\n  dispatch({type: UPDATE_CUSTOMER, payload: res.data})\n}\n\nexport const createNewService = (dataa) => async dispatch => {\n  const res = await axios.post('/customers/service/:customerid/:serviceid', dataa);\n  window.location.reload();\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const updateService = (dataa) => async dispatch => {\n  const res = await axios.post('/end-service', dataa);\n  console.log('Updating the service!')\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const createNewToMessage = (value) => async dispatch => {\n  console.log(value)\n  const res = await axios.post('/customers/chat/service/post', value);\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const userLogin = (values) => async dispatch => {\n  const reload = () => {\n    window.location.reload()\n  }\n  setTimeout(reload, 5000)\n  const res = await axios.post('/login', values);\n  console.log('Here is the new user being logged in.')\n  dispatch({type: UPDATE_CUSTOMER, payload: res.data})\n}\n\nexport const logoutUser = () => dispatch => {\n  return fetch('/logout')\n  .then(res => res.json())\n    .then(customers => dispatch({type: GET_CUSTOMERS, payload: customers}))\n};\n\nexport const fetchUser = () => async dispatch => {\n   const res = await axios.get('/current_user')\n    dispatch({ type: FETCH_USER, payload: res });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nclass Customers extends Component {\n\n  static propTypes = {\n    getCustomers: PropTypes.func.isRequired,\n    customers: PropTypes.array.isRequired\n  }\n\n  static defaultProps = {\n    customers: []\n  }\n\n  componentWillMount() {\n    this.props.getCustomers();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h2>Customers</h2>\n        <ul>\n        {this.props.customers.map(customer =>\n          <li key={customer.id}>{customer.firstName} {customer.lastName}</li>\n        )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getCustomers: () => dispatch(getCustomers())\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(Customers);\n","//StyledMediaQuery\n\nconst size = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '750px',\n    tabletL: '834px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px'\n}\n\n\nexport const device = {\n    mobileS: `(min-width: ${size.mobileS})`,\n    mobileM: `(min-width: ${size.mobileM})`,\n    mobileL: `(min-width: ${size.mobileL})`,\n    tablet: `(min-width: ${size.tablet})`,\n    tabletL: `(min-width: ${size.tabletL})`,\n    laptop: `(min-width: ${size.laptop})`,\n    laptopL: `(min-width: ${size.laptopL})`,\n    desktop: `(min-width: ${size.desktop})`,\n    desktopL: `(min-width: ${size.desktop})`\n};","export default {\n\tfullWhite: '#ffffff',\n\tlightGray: '#A0A0A0',\n    lighterGray: '#DEDEDE',\n    lightBlue: '#008ECC',\n    darkBlue: '#004A6A',\n    black: '#000000',\n    brightRed: '#F20B37'\n};","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\n\nexport const NewDiv = styled.div`\n\twidth: ${({ width }) => (width || 'auto')};\n\theight: ${({ height }) => (height || 'auto')};\n\tmargin: ${({ margin }) => (margin || 'auto')};\n\tpadding: ${({ padding }) => (padding || '0')};\n\tborder: ${({ border }) => (border || 'none')};\n\tborder-radius: ${({ borderRadius }) => (borderRadius || 'none')};\n\ttext-align: ${({ textAlign }) => (textAlign || 'auto')};\n\tz-index: ${({ zIndex }) => (zIndex || 'auto')};\n\tfloat: ${({ float }) => (float || 'none')};\n    display: ${({ display }) => (display || 'block')};\n    background: ${({ background }) => (background || 'none')};\n`\n\nexport const MainBG = styled.div`\n    width: 100%;\n    background: rgb(0,142,204);\n\tbackground: linear-gradient(90deg, rgba(0,142,204,1) 0%, rgba(89,200,248,1) 100%);\n\tmin-height: 1200px;\n\tpadding-bottom: 75px;\n\n\t-webkit-background-size: cover;\n  \t-moz-background-size: cover;\n  \t-o-background-size: cover;\n  \tbackground-size: cover;\n\n  overflow: auto;\n\n    @media ${device.tablet} {\n        min-height: 1200px;\n\t}\n\t\n\t@media ${device.laptop} {\n        min-height: 800px;\n    }\n`\n\nexport const MainHeading = styled(NewDiv)`\n\t@media ${device.tablet} {\n\t\tmax-width: 500px;\n\t\tmargin: 0 auto;\n\t}\n`","import React from 'react'\nimport styled from 'styled-components'\nimport is from 'styled-is';\n\nimport Colors from '../../constants/colors'\n\nimport { device } from './StyledMediaQuery';\n\n\nconst Button = styled.button`\n    border-radius: ${({ borderRadius }) => (borderRadius || '10px')};\n    color: ${({ color }) => (color || Colors.fullWhite)};\n    border: ${({ border }) => (border || 'none')};;\n    width: ${({ width }) => (width || '150px')};\n    height: ${({ height }) => (height || '40px')};\n    margin ${({ margin }) => (margin || '0')}; \n    margin-bottom ${({ marginBottom }) => (marginBottom || '0')}; \n    padding ${({ padding }) => (padding || '0')}; \n    background-color: ${({ backgroundColor }) => (backgroundColor || 'initial')};\n    display: ${({ display }) => (display || 'flex')};\n    -webkit-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    -moz-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    transition: all ease .3s;\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    :hover{\n        box-shadow: 0 6px 12px 0 rgba(0,0,0,0.20), 0 1px 4px 0 rgba(0,0,0,0.30);\n    }\n    :active{\n        box-shadow: 0 2px 4px 0 rgba(0,0,0,0.20), 0 1px 3px 0 rgba(0,0,0,0.30);\n    }\n    :focus{\n        outline: 0;\n    }\n    ${is('primary')`\n\n    `}\n    ${is('secondary')`\n\n    `}\n    ${is('invalid')`\n        background-color: ${Colors.fullWhite};\n    `}\n    \n    ${is('standardBtn')`\n        width: 156px;\n        height: 40px;\n        border-radius: 20px;\n        background-color: ${Colors.darkBlue};\n    `}\n\n    ${is('largeBtn')`\n        width: 328px;\n        height: 40px;\n        border-radius: 50px;\n        background-color: ${Colors.darkBlue};\n    `}\n\n\n`\nexport default Button\n","import React from 'react'\nimport styled from 'styled-components'\nimport is from 'styled-is';\nimport PropTypes from 'prop-types';\n\nimport Colors from '../../constants/colors'\n\nimport { device } from './StyledMediaQuery';\n\nconst Text = styled.p`\n\tfont-size: ${({ fontSize }) => (fontSize || '16px')};\n\tline-height: ${({ lineHeight }) => (lineHeight || '16px')};\n\tcolor: ${({ color }) => (color || Colors.fullWhite)};\n\tmargin: ${props => (props.margin || '0')};\n\tpadding: ${props => (props.padding || '0')};\n    max-width: ${props => (props.maxWidth || 'none')};\n    font-weight: ${({ fontWeight }) => (fontWeight || 'normal')};\n    font-style: ${({ fontStyle }) => (fontStyle || 'normal ')};\n\tfont-family: ${({ fontFamily }) => (fontFamily || 'Helvetica Neue')};\n\tbackground: ${({ background }) => (background || 'none')};\n\tfloat: ${({ float }) => (float || 'none')};\n\n\t${is('mainHeading')`\n\t\tfont-size: 40px;\n\t\tline-height: 44px;\n\t\tfont-weight: bold;\n\n\t\t@media ${device.mobileS} {\n\t\t\tfont-size: 40px;\n\t\t\tline-height: 44px;\n\t\t}\n    `}\n    \n    ${is('buttonText')`\n        font-size: 22px;\n    `}\n\n    ${is('navItem')`\n        line-height: 70px;\n        font-size: 22px;\n\t`}\n\t\n\t${is('inline')`\n        display: inline-block;\n\t`}\n\t\n\t${is('lblue20')`\n\t\tfont-size: 20px;\n\t\tline-height: 20px;\n\t\tcolor: ${Colors.lightBlue};\n\t`}\n\n\t${is('lblue22')`\n\t\tfont-size: 22px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.lightBlue};\n\t`}\n\t\n\t${is('dblue16')`\n\t\tfont-size: 16px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue22')`\n\t\tfont-size: 22px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue20')`\n\t\tfont-size: 20px;\n\t\tline-height: 20px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue30')`\n\t\tfont-size: 30px;\n\t\tline-height: 26px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('white20')`\n\t\tfont-size: 20px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.fullWhite};\n\t`}\n\n\t${is('white35')`\n\t\tfont-size: 35px;\n\t\tline-height: 45px;\n\t\tcolor: ${Colors.fullWhite};\n\t\tfont-style: medium;\n\t`}\n\n\t${is('gray30')`\n\t\tfont-size: 30px;\n\t\tline-height: 30px;\n\t\tcolor: ${Colors.lightGray};\n\t\tfont-style: medium;\n\t`}\n\t\n\t${is('customerIE')`\n\t\tline-height: 40px;\n\t`}\n\n\t${is('borderBottom')`\n\t\tborder-bottom: 1px solid ${Colors.darkBlue};\n\t`}\n\n\t${is('ellipsis')`\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tvertical-align: bottom;\n\t`}\n\n\t${is('acName')`\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tvertical-align: bottom;\n\n\t\t@media ${device.mobileS} {\n\t\t\tmax-width: 40px;\n\t\t\twidth: 40px;\n\t\t}\n\n\t\t@media ${device.tablet} {\n\t\t\tmax-width: 130px;\n\t\t\twidth: 130px;\n\t\t}\n\n\t\t@media ${device.tabletL} {\n\t\t\tmax-width: 150px;\n\t\t\twidth: 150px;\n\t\t}\n\n\t\t@media ${device.laptopL} {\n\t\t\tmax-width: 165px;\n\t\t\twidth: 165px;\n\t\t}\n\t`}\n\n\t${is('acEmail')`\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tvertical-align: bottom;\n\n\t\t@media ${device.mobileS} {\n\t\t\tmax-width: 70px;\n\t\t\twidth: 70px;\n\t\t}\n\n\t\t@media ${device.tablet} {\n\t\t\tmax-width: 215px;\n\t\t\twidth: 215px;\n\t\t}\n\n\t\t@media ${device.tabletL} {\n\t\t\tmax-width: 235px;\n\t\t\twidth: 235px;\n\t\t}\n\n\t\t@media ${device.laptopL} {\n\t\t\tmax-width: 300px;\n\t\t\twidth: 300px;\n\t\t}\n\t`}\n\n`\n/**\n\tThis styled case was moved to WelcomeStyledComponents since it's only used in that partifulcar instance and not elsewhere\n\t${is('employeeDetail')`\n\t\tline-height: 30px;\n\t\tfont-size: 16px;\n\t`}\n\n`\n\n**/\n\nText.propTypes = {\n\t/** Color of the text displayed */\n\tcolor: PropTypes.string,\n\t/** Margins that should be added, needs to be in short hand syntax ex margin: top right bottom left; */\n\tmargin: PropTypes.string,\n\t//* Max width that a text can take */\n\tmaxWidth: PropTypes.string,\n\t//* Font weight of the text */\n\tfontWeight: PropTypes.string,\n\t//* Font style of the text; ex: italic, normal & oblique */\n\tfontStyle: PropTypes.string,\n\t//* Font family to be used */\n\tfontFamily: PropTypes.string,\n\t//* if the text should be increased to largeText size */\n\tlargeText: PropTypes.bool,\n\t//* If the text should be reduced to subtext size */\n\tsubtext: PropTypes.bool,\n\t//* If the text should be reudeced to subtitle size */\n\tsubtitle: PropTypes.bool,\n\t//* If the text is supposed to reprsent an error displayed */\n\terror: PropTypes.bool,\n\t//* If the text should be the website defualt gray color */\n\tgray: PropTypes.bool,\n\t//* If the text reprsents a action */\n\tpointer: PropTypes.bool,\n\t//* If the text reprsents a link */\n\tunderline: PropTypes.bool,\n\t//* If the text needs to be placed on same line */\n\tinline: PropTypes.bool,\n}\n\nexport default Text","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from './StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors'\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport closer from '../../../rersources/svg/closer.svg';\nimport { NewDiv } from './StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\nimport { toggleTemplateOverlay } from '../../../store/reducers/environment';\nimport { createNewCustomer } from '../../../store/actions/customer';\n\n\nconst StyledOverlayContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background: black;\n        opacity: .8;\n        position: fixed;\n        z-index: 1000;\n    }\n`\n\nconst StyledOverlayContentBox = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 500px;\n        height: 550px;\n        background: rgb(89,200,248);\n        background: linear-gradient(180deg, rgba(89,200,248,1) 0%, rgba(255,255,255,1) 100%);\n        position: fixed\n        left: 50%;\n        margin-left: -250px;\n        margin-top: 150px;\n        z-index: 2000;\n    }\n`\n\nconst OverlayContentContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding: 50px 50px 0px 50px;\n    }\n`\n\nconst CustomerInputMessage = styled.input`\n    @media ${device.tablet} {\n        width: 200px;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst CustomerInputMessageLarge = styled.textarea`\n    @media ${device.tablet} {\n        width: 300px;\n        height: 100px !important;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst TemplateNavContainer = styled.div`\n    @media ${device.tablet} {\n        bottom: 75px;\n        position: absolute;\n        margin-left: auto;\n        margin-right: auto;\n        left: 0;\n        right: 0;\n        width: 325px;\n        display: flex\n        justify-content: space-between;\n        align-items: center;\n    }\n`\n\nconst CloseTemplateOverlay = styled.div`\n    @media ${device.tablet} {\n        width: 50px;\n        height: 50px;\n        margin-top: 25px;\n        margin-left: 25px;\n\n        svg {\n            height: 100%;\n            width: 100%;\n        }\n    }\n`\n\nclass StyledOverlayTemplate extends Component  {\n    constructor() {\n        super()\n        this.state = { \n            customText: '',\n            templateNumber: 0\n        }\n\n            this.forwardTemplate = this.forwardTemplate.bind(this);\n            this.backTemplate = this.backTemplate.bind(this);\n  //      this.handleChange = this.handleChange.bind(this)\n  //      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentDidMount() {\n    }\n\n    handleChange(event) {\n        const input = event.target.value\n        this.setState({ customText: input})\n        console.log(this.state)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n    }\n\n    handleNew = (e, value) => {\n        e.preventDefault()\n        console.log(value)\n    }\n\n    template1 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName}, thank you for bringing in your vehicle.`;\n        const text2 = 'We have now started on your vehicle. You will receive a real time update for each service.';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n    \n    template2 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName},`;\n        const text2 = 'we have completed your';\n        const period = '.'\n        const newText = `${text1} ${text2} ${this.state.customText}${period}`;\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n    \n    template3 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName}, your vehicle is now ready for pickup.`;\n        const text2 = 'We are looking forward to seeing you soon, thank you.';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n\n    template4 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName},`;\n        const period = '.';\n        const newText = `${text1} ${this.state.customText}${period}`;\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessageLarge \n                            type=\"textarea\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n\n    closeTemplateOverlayFunc = () => {\n        const { toggleTemplateOverlay } = this.props\n        toggleTemplateOverlay(false);\n    }\n\n    forwardTemplate = () => {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n        if (this.state.templateNumber < messageTemplates.length - 1) {\n            this.setState({\n                templateNumber: this.state.templateNumber + 1\n            })\n        } else {\n            this.setState({\n                templateNumber: 0\n            })\n        }\n    }\n\n    backTemplate = () => {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n        if (this.state.templateNumber > 0) {\n            this.setState({\n                templateNumber: this.state.templateNumber - 1\n            })\n        } else {\n            this.setState({\n                templateNumber: messageTemplates.length - 1\n            })\n        }\n    }\n\n    render() {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n        var currentTemplate = messageTemplates[this.state.templateNumber]\n\n        const { getSelectedMessageText } = this.props\n\n        return (\n            <div>\n                <StyledOverlayContainer>\n                </StyledOverlayContainer>\n                <StyledOverlayContentBox>\n                    <CloseTemplateOverlay\n                        onClick={this.closeTemplateOverlayFunc}\n                    >\n                        <SVG src={closer} />\n                    </CloseTemplateOverlay>\n                    {currentTemplate()}\n                    <TemplateNavContainer\n                        \n                    >\n                        <Button\n                            onClick={this.backTemplate}\n                            backgroundColor={Colors.fullWhite}\n                            borderRadius='25px'\n                        >\n                            <Text\n                                dblue16\n                            >\n                                Go Back\n                            </Text>\n                        </Button>\n                        <Button\n                            standardBtn\n                            onClick={this.forwardTemplate}\n                        >\n                            <Text\n                                white16\n                            >\n                                Go Forward\n                            </Text>\n                        </Button>\n                    </TemplateNavContainer>\n                </StyledOverlayContentBox>\n           </div>\n          )\n    }\n   \n  }\n\n  export default StyledOverlayTemplate;","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from './StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors'\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport closer from '../../../rersources/svg/closer.svg';\nimport { NewDiv } from './StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\nimport { toggleTemplateOverlay } from '../../../store/reducers/environment';\nimport { createNewCustomer } from '../../../store/actions/customer';\n\n\nconst StyledOverlayContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background: black;\n        opacity: .8;\n        position: fixed;\n        z-index: 1000;\n    }\n`\n\nconst StyledOverlayContentBox = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 500px;\n        height: 550px;\n        background: rgb(89,200,248);\n        background: linear-gradient(180deg, rgba(89,200,248,1) 0%, rgba(255,255,255,1) 100%);\n        position: fixed;\n        left: 50%;\n        margin-left: -250px;\n        margin-top: 150px;\n        z-index: 2000;\n    }\n`\n\nconst OverlayContentContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding: 50px 50px 0px 50px;\n    }\n`\n\nconst CustomerInputMessage = styled.input`\n    @media ${device.tablet} {\n        width: 200px;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst CustomerInputMessageLarge = styled.textarea`\n    @media ${device.tablet} {\n        width: 300px;\n        height: 100px !important;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst TemplateNavContainer = styled.div`\n    @media ${device.tablet} {\n        bottom: 225px;\n        position: absolute;\n        margin-left: auto;\n        margin-right: auto;\n        left: 0;\n        right: 0;\n        width: 325px;\n        display: flex\n        justify-content: space-between;\n        align-items: center;\n    }\n`\n\nconst CloseTemplateOverlay = styled.div`\n    @media ${device.tablet} {\n        width: 50px;\n        height: 50px;\n        margin-top: 25px;\n        margin-left: 25px;\n\n        svg {\n            height: 100%;\n            width: 100%;\n        }\n    }\n`\n\nclass StyledOverlayEndService extends Component  {\n\n    componentDidMount() {\n    }\n\n    handleChange(event) {\n        const input = event.target.value\n        this.setState({ customText: input})\n        console.log(this.state)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n    }\n\n    handleEnd = (e, value) => {\n        e.preventDefault()\n        const { history, toggleEndServiceOverlay } = this.props\n        toggleEndServiceOverlay(false);\n        history.push('/end-service');\n    }\n\n    closeEndServiceOverlayFunc = () => {\n        const { toggleEndServiceOverlay } = this.props\n        toggleEndServiceOverlay(false);\n    }\n\n    render() {\n        const { getSelectedMessageText } = this.props\n        return (\n            <div>\n                <StyledOverlayContainer>\n                </StyledOverlayContainer>\n                <StyledOverlayContentBox>\n                    <CloseTemplateOverlay\n                        onClick={this.closeEndServiceOverlayFunc}\n                    >\n                        <SVG src={closer} />\n                    </CloseTemplateOverlay>\n                    <NewDiv\n                        width='350px'\n                        margin='0 auto'\n                    >\n                        <Text\n                            margin='125px 0 0 0'\n                            dblue22\n                        >\n                            Are you sure you would like to end this conversation?\n                        </Text>\n                    </NewDiv>\n                    <TemplateNavContainer \n                    >\n                        <Button\n                            onClick={this.closeEndServiceOverlayFunc}\n                            backgroundColor={Colors.fullWhite}\n                            borderRadius='25px'\n                        >\n                            <Text\n                                dblue16\n                            >\n                                Cancel\n                            </Text>\n                        </Button>\n                        <Button\n                            standardBtn\n                            onClick={this.handleEnd}\n                        >\n                            <Text\n                                white16\n                            >\n                                Yes\n                            </Text>\n                        </Button>\n                    </TemplateNavContainer>\n                </StyledOverlayContentBox>\n           </div>\n          )\n    }\n   \n  }\n\n  export default StyledOverlayEndService;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\n\nconst CustomerCellDiv = styled(NewDiv)`\n    width: 100%\n    height: 80px;\n    background: ${Colors.lighterGray};\n    border-bottom: 1px solid black;\n`\n\nconst CellID = styled(NewDiv)`\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    display: inline-block;\n    float: left;\n    margin-left: 3%;\n    margin-top: 15px;\n\n    svg {\n        width: 100%;\n        height: 100%;\n    }\n`\n\nconst CellInfoLeft = styled(NewDiv)`\n    float: left;\n    display: inline-block;\n    margin-left: 12%;\n    margin-top: 10px;\n    height: 60px;\n    width: 33%;\n    text-align: left;\n\n    @media ${device.tablet} {\n        margin-left: 6%;\n        width: 39%;\n    }\n\n    @media ${device.laptop} {\n        margin-left: 10%;\n        width: 33%;\n    }\n`\n\nconst CellInfoRight = styled(CellInfoLeft)`\n    margin-left: 6%;\n`\n\nclass CustomerCellRow extends Component {\n\n  componentDidMount() {\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n  openCustomerProfile = () => {\n      const { realCustomers, customerid, selectedCustomer, getSelectedCustomer, history } = this.props\n      history.push(`/customers/${customerid}`);\n    const sc = this.search(customerid, realCustomers);\n    getSelectedCustomer(sc);\n    console.log(selectedCustomer);\n  }\n\n  render() {\n      const { customerid, name, phoneNumber1, email } = this.props\n      console.log(this.props)\n    return (\n      <CustomerCellDiv\n        onClick={() => {this.openCustomerProfile() }}\n      >\n          <CellID>\n            <SVG src={userb} />\n          </CellID>\n          <CellInfoLeft>\n              <NewDiv\n              >\n                <Text\n                    inline\n                    lblue20\n                >\n                    Customer Name:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                    acName\n                >\n                    {name}\n                </Text>\n              </NewDiv>\n\n              <NewDiv\n                padding=\"15px 0 0 0\"\n              >\n                <Text\n                    inline\n                    lblue20\n                >\n                    Phone #:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                    acName\n                >\n                    {phoneNumber1}\n                </Text>\n              </NewDiv>\n\n          </CellInfoLeft>\n          <CellInfoRight>\n          <NewDiv>\n                <Text\n                    inline\n                    lblue20\n                >\n                    Email:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                    acEmail\n                >\n                    {email}\n                </Text>\n              </NewDiv>\n\n              <NewDiv\n                padding=\"15px 0 0 0\"\n              >\n                <Text\n                    inline\n                    dblue16\n                    borderBottom\n                >\n                    View More\n                </Text>\n              </NewDiv>\n          </CellInfoRight>\n      </CustomerCellDiv>\n    );\n  }\n}\n\nexport default withRouter(CustomerCellRow);","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\nimport Colors from '../../constants/colors';\nimport { NewDiv } from '../Styled/StyledComponents';\n\nconst StyledBackIcon = styled(NewDiv)`\n@media ${device.tablet} {\n    position: absolute;\n    height: 35px;\n    width: 20px;\n    margin-left: 25px;\n    margin-top: 35px;\n    \n    svg {\n        width: 20px;\n        height: 35px;\n    }\n}\n`\nexport default StyledBackIcon;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {getActiveCustomerServices, getCustomerActiveToMessages} from '../../store/actions/customer'\nimport { createNewToMessage } from '../../store/actions/customer'\nimport './customers.css';\nimport StyledOverlayTemplate from '../Customer/Styled/StyledOverlayTemplate';\nimport StyledOverlayEndService from '../Customer/Styled/StyledOverlayEndService';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport { getSelectedCustomer, getSelectedServiceMessage, getSelectedMessageText, toggleTemplateOverlay, toggleEndServiceOverlay, getCurrentFilter, updateCustomerSearch } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport templatey from '../../rersources/svg/templatey.svg';\nimport senddb from '../../rersources/svg/senddb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { isContext } from 'vm';\n\nconst MessengerContainer = styled(NewDiv)`\n    @media ${device.mobileS} {\n        width: 40%;\n        height: 100vh;\n        position: fixed;\n        left: 0;\n        top: 0;\n        overflow-y: scroll;\n        background: ${Colors.lightBlue};\n        float: left;\n    }\n\n    @media ${device.tabletL} {\n        width: 35%;\n        height: 100vh;\n        position: fixed;\n        left: 0;\n        top: 0;\n        overflow-y: auto;\n        background: ${Colors.lightBlue};\n        float: left;\n    }\n`\n\nconst MessengerContainerTop = styled(NewDiv)`\n    @media ${device.mobileS} {\n        width: 100%;\n        height: 200px;\n        background: ${Colors.lightBlue};\n        border-bottom: 1px solid ${Colors.fullWhite};\n        padding-bottom: 8px;\n    }\n    @media ${device.tabletL} {\n        width: 100%;\n        height: 200px;\n        background: ${Colors.lightBlue};\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst MessengerTopText = styled(NewDiv)`\n    @media ${device.mobileS} {\n        max-width: 300px;\n        text-align: center;\n        height: auto;\n        padding-top: 24px;\n    }\n`\n\nconst MessageCell = styled(NewDiv)`\n    @media ${device.mobileS} {\n        width: 100%;\n        height: 90px;\n        background: ${Colors.lightBlue};\n        float: left;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst MessageCellContentTop = styled(NewDiv)`\n    @media ${device.mobileS} {\n        width: 90%;\n        height: 25px;\n        padding: 15px 0px 10px 0px;\n    }\n`\n\nconst MessageCellContentBottom = styled(NewDiv)`\n    @media ${device.mobileS} {\n        width: 90%;\n        height: 40px;\n        padding: 10px 0px;\n        text-align: left;\n    }\n`\n\nconst MessengerSearchBar = styled.input`\n    @media ${device.mobileS} {\n        width: ${({ width }) => (width|| '100%')};\n        height: ${props => (props.height || '40px')};\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n\n        :focus {\n            outline: none;\n          }\n    } \n`\n\nconst MessengerTextBox = styled.textarea`\n    @media ${device.mobileS} {\n        width: ${({ width }) => (width|| '100%')};\n        height: 90px;\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        padding-top: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n        :focus {\n            outline: none;\n          }\n    } \n`\n\nconst MessengerChatContainer = styled(NewDiv)`\n    @media ${device.mobileS} {\n        width: 60%;\n        height: 100vh;\n        background-color: ${Colors.lighterGray};\n        float: right;\n    } \n    @media ${device.tabletL} {\n        width: 65%;\n        height: 100vh;\n        background-color: ${Colors.lighterGray};\n        float: right;\n    } \n`\n\nconst MessengerChatTopSec = styled(NewDiv)`\n    @media ${device.mobileS} {\n        width: 60%;\n        height: 90px;\n        background-color: ${Colors.lighterGray};\n        border-bottom: 1px solid ${Colors.lightBlue};\n        position: fixed;\n        top: 0;\n        text-align: left;\n    } \n\n    @media ${device.tabletL} {\n        width: 65%;\n        height: 90px;\n        background-color: ${Colors.lighterGray};\n        border-bottom: 1px solid ${Colors.lightBlue};\n        position: fixed;\n        top: 0;\n        text-align: left;\n    } \n`\n\nconst MessengerFixedBottom = styled(NewDiv)`\n    @media ${device.mobileS} {\n        width: 60%;\n        height: 115px;\n        position: fixed;\n        bottom: 0;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    } \n\n    @media ${device.tabletL} {\n        width: 65%;\n        height: 115px;\n        position: fixed;\n        bottom: 0;\n    } \n`\n\nconst ChatMessagesContainer = styled(NewDiv)`\n    @media ${device.mobileS} {\n        margin-top: 135px;\n        background-color: ${Colors.lighterGray};\n    }\n    \n    @media ${device.laptop} {\n        margin-top: 100px;\n        background-color: ${Colors.lighterGray};\n    } \n`\n\nconst BottomLeftButton = styled(NewDiv)`\n    @media ${device.mobileS} {\n        width: 40px;\n        height: 40px;\n        padding: 5px;\n        display: inline-block;\n        padding-top: 60px;\n        float: left;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst BottomRightButton = styled(NewDiv)`\n    @media ${device.mobileS} {\n        width: 40px;\n        height: 40px;\n        padding: 5px;\n        display: inline-block;\n        padding-top: 60px;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst BottomMiddleText = styled(NewDiv)`\n    @media ${device.mobileS} {\n        width: 80%;\n        height: 100px;\n        padding: 5px 0;\n        display: inline-block;\n    } \n\n    @media ${device.tabletL} {\n        width: 80%;\n        height: 100px;\n        padding: 5px 0;\n        display: inline-block;\n    } \n`\n\nconst ChatToRow = styled(NewDiv)`\n    @media ${device.mobileS} {\n        width: 100%;\n        height: auto;\n        clear: both;\n    } \n`\n\nconst ChatMessageToBubble = styled(NewDiv)`\n    @media ${device.mobileS} {\n        max-width: 250px;\n        height: auto;\n        padding: 15px 15px;\n        float: right\n        margin-right: 10px;\n        background: ${Colors.lightBlue};\n        border-radius: 30px;\n        margin-top: 15px;\n        text-align: left;\n        color: ${Colors.fullWhite};\n    } \n`\n\nclass ChatMessenger extends Component {\n    constructor() {\n        super()\n        this.state = {\n            correctChats: [],\n            correctDisplayedMessages: []\n\n        }\n    }\n  componentDidMount() {\n    const {showNavBar, toggleNavBar, toggleNavToggle, getCustomerActiveToMessages, activeToMessages, selectedServiceMessage, getCurrentFilter, updateCustomerSearch } = this.props\n\n    if (showNavBar === 'block') {\n        toggleNavBar('none')\n        toggleNavToggle(barsw);\n        updateCustomerSearch('')\n    } else {\n        console.log('Not showing....');\n        updateCustomerSearch('')\n    }\n\n    console.log(this.props)\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].serviceid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n  openThisChat = (v) => {\n    const { customerServices, getSelectedServiceMessage, selectedServiceMessage } = this.props\n    const serviceid = v.serviceid\n    const sc = this.search(serviceid, customerServices);\n    getSelectedServiceMessage(sc);\n    console.log(selectedServiceMessage);\n}\n\n    displayOverlay = () => {\n        const { showTemplateOverlay, getSelectedMessageText, selectedMesageText, toggleTemplateOverlay, selectedServiceMessage } = this.props\n        if (showTemplateOverlay === true) {\n            return (\n                <StyledOverlayTemplate\n                    getSelectedMessageText={getSelectedMessageText} \n                    selectedMesageText={selectedMesageText}\n                    toggleTemplateOverlay={toggleTemplateOverlay}\n                    selectedServiceMessage={selectedServiceMessage}\n              />\n            )\n        } else {\n            return (\n                <div></div>\n            )\n        }\n    }\n\n    displayOverlayEnd = () => {\n        const { showEndServiceOverlay, getSelectedMessageText, selectedMesageText, toggleEndServiceOverlay, selectedServiceMessage, history } = this.props\n        if (showEndServiceOverlay === true) {\n            return (\n                <StyledOverlayEndService\n                    getSelectedMessageText={getSelectedMessageText} \n                    selectedMesageText={selectedMesageText}\n                    toggleEndServiceOverlay={toggleEndServiceOverlay}\n                    selectedServiceMessage={selectedServiceMessage}\n                    history={history}\n              />\n            )\n        } else {\n            return (\n                <div></div>\n            )\n        }\n    }\n\n    endService = () => {\n        const { toggleEndServiceOverlay } = this.props\n        toggleEndServiceOverlay(true)\n        console.log('Ending the service....')\n    }\n\n  renderChatCells = () => {\n    var activeServiceArray = []\n    const { customerServices, activeToMessages, getCurrentFilter, search } = this.props\n    console.log(customerServices);\n\n    for (var i=0; i < customerServices.length; i++) {\n        if (customerServices[i].status == true) {\n            activeServiceArray.push(customerServices[i])\n        } else {\n            console.log('Not active');\n        }\n    }\n    var reversedActiveServiceArray = activeServiceArray.reverse()\n\n    var searchedActiveServices;\n\n    if (search === null || search === '') {\n        searchedActiveServices = reversedActiveServiceArray\n      } else {\n        searchedActiveServices = reversedActiveServiceArray.filter((item) => {\n          var name = item.customerName.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = name.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n\n        return searchedActiveServices.map((v) => {\n            var vMessages = []\n            var lastMessage;\n            var formattedTime;\n            var displayedMessage;\n\n            for (var i=0; i < activeToMessages.length; i++) {\n                if (v.serviceid == activeToMessages[i].serviceid) {\n                    vMessages.push(activeToMessages[i])\n                } else {\n                    console.log('Did not match')\n                }\n            }\n\n            if (vMessages.length > 0) {\n                lastMessage = vMessages.slice(-1)[0];\n                displayedMessage = lastMessage.textMessage\n                var jsTime = lastMessage.date\n                var timestamp = jsTime.substring(0, jsTime.length - 3)\n                var newDate = new Date(timestamp*1000);\n                var fHours = newDate.getHours();\n                var fMinutes = '0' + newDate.getMinutes();\n                \n                var ampm = fHours >= 12 ? 'pm' : 'am';\n                fHours = fHours % 12;\n                fHours = fHours ? fHours : 12;\n                formattedTime = fHours + ':' + fMinutes.substr(-2) + ampm;\n\n            } else {\n                formattedTime = '';\n                displayedMessage = 'No Messages sent';\n            }\n\n            return (\n                <MessageCell\n                    onClick={() => this.openThisChat(v)}\n                >\n                    <MessageCellContentTop\n                    >\n                        <Text\n                            dblue22\n                            inline\n                            float='left'\n                            maxWidth='210px'\n                        >\n                            {v.customerName}\n                        </Text>\n                        <Text\n                            dblue16\n                            inline\n                            float='right'\n                            maxWidth='80px'\n                        >\n                            {formattedTime}\n                        </Text>\n                    </MessageCellContentTop>\n                    <MessageCellContentBottom>\n                        <Text\n                            dblue16\n                            ellipsis\n                            maxWidth=\"100%\"\n                        >\n                            {displayedMessage}\n                        </Text>\n                    </MessageCellContentBottom>\n                </MessageCell>\n            )\n        })\n  }\n\n  renderServiceId = () => {\n      const {selectedServiceMessage } = this.props\n      if (selectedServiceMessage) {\n            return (\n                <NewDiv>\n                    <Text\n                        dblue30\n                        padding=\"10px 0 0 10px\"\n                        inline\n                    >\n                        {selectedServiceMessage.customerName}\n                    </Text>\n                    <NewDiv\n                        display='inline-block'\n                        float='right'\n                        margin='15px 15px 0 0'\n                    >\n                        <Button\n                            width='156px'\n                            height='40px'\n                            borderRadius='20px'\n                            backgroundColor={Colors.brightRed}\n                            display='inline-block'\n                            onClick={this.endService}\n                        >\n                            <Text\n                                white20\n                            >\n                                End\n                            </Text>\n                        </Button>\n                        \n                    </NewDiv>\n                </NewDiv>\n            )\n      } else {\n          return (\n              <Text\n                dblue30\n                padding=\"10px 0 0 10px\"\n              >\n                  No Service Selected\n              </Text>\n          )\n      }\n  }\n\n  checkMessageFunc = () => {\n    const { activeToMessages, selectedServiceMessage } = this.props\n\n    if (selectedServiceMessage) {\n        for (var i=0; i < activeToMessages.length; i++) {\n            if (activeToMessages[i].serviceid === selectedServiceMessage.serviceid) {\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n    }\n  }\n\n  renderChatMessages = () => {\n    const { activeToMessages, selectedServiceMessage, getCustomerActiveToMessages } = this.props\n    const displayedToMessages = []\n\n    this.checkMessageFunc()\n\n      if (selectedServiceMessage) {\n        for (var i=0; i < activeToMessages.length; i++) {\n            if (activeToMessages[i].serviceid === selectedServiceMessage.serviceid) {\n                displayedToMessages.push(activeToMessages[i]);\n                console.log(`pushed ${activeToMessages[i]}`);\n            }  else {\n                console.log('did not match');\n            }  \n        }\n        console.log(this.state);\n        console.log(displayedToMessages)\n        console.log(activeToMessages)\n        return displayedToMessages.map((v) => {\n            return (\n                <ChatToRow>\n                        <ChatMessageToBubble>\n                            {v.textMessage}\n                        </ChatMessageToBubble>\n                </ChatToRow>\n            )\n        })\n      } else {\n          return (\n              <div>There are no messages to display</div>\n          )\n      }\n  }\n\n  toggleTemplateTrue = () => {\n      const { toggleTemplateOverlay, selectedServiceMessage } = this.props\n      if (selectedServiceMessage) {\n        toggleTemplateOverlay(true);\n      } else {\n          console.log('There is no selected message');\n      }\n  }\n\n  sendNewMessage = (e, value) => {\n      const { selectedMessageText, createNewToMessage, selectedServiceMessage, getCustomerActiveToMessages, getSelectedMessageText } = this.props\n        e.preventDefault();\n        console.log(value)\n        console.log(selectedMessageText)\n\n        if (selectedServiceMessage) {\n            const info =\n            {\n                textMessage: selectedMessageText,\n                phoneNumber: selectedServiceMessage.phoneNumber,\n                serviceid: selectedServiceMessage.serviceid,\n                vehicleid: selectedServiceMessage.vehicleid,\n                customerid: selectedServiceMessage.customerid,\n                user: selectedServiceMessage.user\n            }\n            createNewToMessage(info);\n        } else {\n            console.log('It cannot be done.')\n        }\n\n        setTimeout(getCustomerActiveToMessages, 2000)\n        setTimeout(this.renderChatMessages, 3000)\n        //window.location.reload()\n        getSelectedMessageText('')\n  }\n\n  handleChange = (e) => {\n      const { getSelectedMessageText } = this.props\n      const messageT = e.target.value\n      getSelectedMessageText(messageT);\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  searchMessageCells = (event) => {\n    const { search, updateCustomerSearch } = this.props\n    var searchText = event.target.value\n    updateCustomerSearch(searchText)\n  }\n\n  historyAndReload = () => {\n    const { history } = this.props\n    history.push('/login');\n  }\n\n  renderNotLoggedIn = () => {\n    return (\n      <div>\n          <MainBG>\n              <Text\n                white35\n                padding='100px 0 50px 0'\n                maxWidth='600px'\n                margin='0 auto'\n              >\n                You are not logged in. Please click the button below to return to the login screen.\n              </Text>\n            <Button\n              standardBtn\n              margin='0 auto'\n              onClick={this.historyAndReload}\n            >\n              <Text\n                buttonText\n              >\n                Login\n              </Text>\n\n            </Button>\n          </MainBG>\n      </div>\n    )\n  }\n\n  render() {\n    const { getSelectedMessageText, selectedMessageText, createNewToMessage, selectedServiceMessage, search } = this.props\n    console.log(createNewToMessage);\n    const newText = \"\"\n    console.log(this.props)\n    const props = this.props\n    const data = props && props.auth ? props.auth.data : null;\n\n    if (data) {\n        return (\n            <div>\n                {this.displayOverlay()}\n                {this.displayOverlayEnd()}\n                <MessengerContainer>\n                    <MessengerContainerTop>\n                        <MessengerTopText>\n                            <Text\n                                white35\n                                padding=\"25px 0\"\n                            >\n                                Current Vehicles\n                            </Text>\n                        </MessengerTopText>\n                        <MessengerSearchBar \n                            width=\"85%\"\n                            placeholder=\"Search...\"\n                            onChange={this.searchMessageCells}\n                            value={search}\n                        />\n                    </MessengerContainerTop>\n                    {this.renderChatCells()}\n                </MessengerContainer>\n                <MessengerChatContainer>\n                    <MessengerChatTopSec>\n                        {this.renderServiceId()}\n                    </MessengerChatTopSec>\n                    <ChatMessagesContainer>\n                        {this.renderChatMessages()}\n                    </ChatMessagesContainer>\n                    <MessengerFixedBottom>\n                        <BottomLeftButton\n                            onClick={() => this.toggleTemplateTrue()}\n                        >\n                            <SVG src={templatey} />\n                        </BottomLeftButton>\n                        <BottomMiddleText>\n                            <form method=\"POST\" onChange={this.handleChange} onSubmit={(e) => this.sendNewMessage(e, this)}>\n                                <MessengerTextBox\n                                    width=\"97%\"\n                                    placeholder=\"Enter Message...\"\n                                    value={selectedMessageText}\n                                    name=\"toMessage\"\n                                />\n                            </form>\n                        </BottomMiddleText>\n                        <BottomRightButton \n                        onClick={(e) => this.sendNewMessage(e, this)}>\n                            <SVG src={senddb} />\n                        </BottomRightButton>\n                    </MessengerFixedBottom>\n                </MessengerChatContainer>\n            </div>\n            );\n        } else {\n            return (\n                this.renderNotLoggedIn()\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => ({\n  realCustomers: state.realCustomers,\n  selectedCustomer: state.environment.selectedCustomer,\n  activeServices: state.activeServices,\n  search: state.environment.search,\n  selectedServiceMessage: state.environment.selectedServiceMessage,\n  selectedMessageText: state.environment.selectedMessageText,\n  showTemplateOverlay: state.environment.showTemplateOverlay,\n  showEndServiceOverlay: state.environment.showEndServiceOverlay,\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getActiveCustomerServices: () => dispatch(getActiveCustomerServices()),\n   getSelectedServiceMessage: (sm) => dispatch(getSelectedServiceMessage(sm)),\n   getSelectedMessageText: (text) => dispatch(getSelectedMessageText(text)),\n   toggleTemplateOverlay: (status) => dispatch(toggleTemplateOverlay(status)),\n   toggleEndServiceOverlay: (status) => dispatch(toggleEndServiceOverlay(status)),\n   getCustomerActiveToMessages: () => dispatch(getCustomerActiveToMessages()),\n   getCurrentFilter: (filter) => dispatch (getCurrentFilter(filter)),\n   updateCustomerSearch: (search) => dispatch (updateCustomerSearch(search))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(ChatMessenger));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport { getSelectedCustomer, updateCustomerSearch, getCurrentFilter } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport landingImg from '../../rersources/landing.png';\nimport mainL from '../../rersources/logoSvg.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst LHeader = styled.div`\n    @media ${device.mobileS} {\n        height: 80px;\n        width: 100%;\n        position: fixed;\n        z-index: 1000;\n    }\n`\n\nconst LogoImg = styled.img`\n    @media ${device.mobileS} {\n        height: 80px;\n        width: 72px;\n        float: left;\n        padding-left: 40px;\n    }\n`\n\nconst RightBtns = styled.div`\n    @media ${device.mobileS} {\n        float: right;\n        padding-right: 10px;\n        display: flex;\n        margin-top: 20px;\n    }\n\n    @media ${device.tablet} {\n        padding-right: 40px;\n    }\n`\n\nconst ContactEmail = styled.div`\n    @media ${device.mobileS} {\n        width: 280px;\n        display: block;\n        margin-right: 30px;\n        background: ${Colors.fullWhite};\n        display: ${({ display }) => (display || 'none')};\n        border-radius: 5px;\n        height: 70px;\n        float: right;\n        line-height: 70px;\n    }\n`\n\nconst ActionBtn = styled.div`\n    @media ${device.mobileS} {\n        width: 120px;\n        height: 36px;\n        background: ${({ bgColor }) => (bgColor || 'none')};\n        color: ${({ color }) => (color || 'none')};\n        border-radius: 20px;\n        margin-left: 10px;\n        -webkit-box-shadow: 0px 2px 6px 2px rgba(0,0,0,0.16);\n        -moz-box-shadow: 0px 2px 6px 2px rgba(0,0,0,0.16);\n        box-shadow: 0px 2px 6px 2px rgba(0,0,0,0.16);\n\n        p {\n            line-height: 8px;\n            font-size: 16px;\n        }\n    }\n\n    @media ${device.tablet} {\n        margin-left: 10px;\n    }\n`\n\nconst MainContainer = styled.div`\n    @media ${device.mobileS} {\n        background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${landingImg});\n        background-size: cover;\n        background-position: center;\n        background-attachment: fixed;\n        height: 100vh;\n        filter: blur(3px);\n        -webkit-filter: blur(3px);\n        z-index: 5;\n        transform: scale(1.05);\n    }\n`\n\nconst ContentContainer = styled.div`\n    z-index: 1001;\n    position: fixed;\n\n    @media ${device.mobileS} {\n      width: 90%;\n      margin: 0 auto;\n      bottom: 128px;\n    }\n\n    @media ${device.tablet} {\n        padding-top: 272px;\n        bottom: auto;\n        width: auto;\n        margin: auto;\n        margin-left: 32px;\n    }\n`\n\nconst LandingList = styled.ul`\n    @media ${device.mobileS} {\n        padding-top: 32px;\n        width: 90%;\n        list-style-type: disc;\n        text-align: left;\n        color: ${Colors.fullWhite};\n        padding-left: 32px;\n\n        li {\n            padding-left: 16px;\n            border-bottom: none;\n        }\n    }\n\n    @media ${device.tablet} {\n        padding-left: 72px;\n        width: 100%;\n    }\n`\n\nconst Parent = styled.div`\n    overflow: hidden;\n`\n\n\nclass LandingPage extends Component {\n    constructor() {\n        super()\n        this.state = {\n            showContact: 'none'\n        }\n    }\n\n    toggleShowContact = () => {\n        if (this.state.showContact === 'none') {\n            this.setState({ showContact: 'block' })\n        } else {\n            this.setState({ showContact: 'none'})\n        }\n    }\n\n    openSignIn = () => {\n        const { history } = this.props\n        history.push('/login')\n    }\n\n    render() {\n        return (\n            <Parent>\n                <LHeader>\n                    <NewDiv\n                        width='100%'\n                        height='100%'\n                    >\n                    <LogoImg src={mainL} />\n                        <RightBtns>\n                            <ActionBtn\n                                bgColor={Colors.fullWhite}\n                                color={Colors.darkBlue}\n                                onClick={this.toggleShowContact}\n                            >\n                                <p>Contact Us</p>\n                            </ActionBtn>\n                            <ActionBtn\n                                bgColor={Colors.darkBlue}\n                                color={Colors.fullWhite}\n                                onClick={this.openSignIn}\n                            >\n                                <p>Sign In</p>\n                            </ActionBtn>\n                        </RightBtns>\n                    </NewDiv>\n                    <ContactEmail\n                        display={this.state.showContact}\n                    >\n                        <Text\n                            lineHeight='70px'\n                            color='#004A6A'\n                        >\n                            contactquickli@gmail.com\n                        </Text>\n                    </ContactEmail>\n                </LHeader>\n                <ContentContainer>\n                    <Text\n                        fontSize='48px'\n                        color='#FFB000'\n                        lineHeight='48px'\n                    >\n                        Quickli\n                    </Text>\n                        <Text\n                            fontSize='24px'\n                            padding='32px 0 0 0'\n                        >\n                            \"Real-Quick & Real-Time\"\n                        </Text>\n                        <LandingList>\n                            <li>Easy & Quick Navigation</li>\n                            <li>Real-time update templates</li>\n                            <li>Auto save customer service history</li>\n                        </LandingList>\n                </ContentContainer>\n                <MainContainer />\n            </Parent>\n        )\n    }\n}\n\nexport default withRouter(LandingPage);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport { getSelectedCustomer, updateCustomerSearch, getCurrentFilter } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerSearchBar = styled.input`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n\n        :focus {\n          outline: none;\n        }\n    } \n`\n\nconst CustomerSearchSelectSec = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 672px;\n      margin: 0 auto;\n      margin-top: 30px;\n    } \n`\n\nconst SearchNameBox = styled(NewDiv)`\n    @media ${device.tablet} {\n      text-align: left;\n      width: 242px;\n      display: inline-block;\n    }\n`\n\nconst NameSelectDiv = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 242px;\n      height: 40px;\n      border-radius: 20px;\n      overflow: hidden;\n\n      select {\n        outline: none;\n        border: 0px;\n      }\n    } \n`\n\nconst StyledSelect = styled.select`\n    @media ${device.tablet} {\n      width: 100%;\n      height: 100%\n      font-size: 16px;\n      color: ${Colors.lightGray};\n      -webkit-border-top-right-radius: 15px;\n      -webkit-border-bottom-right-radius: 15px;\n      -moz-border-radius-topright: 15px;\n      -moz-border-radius-bottomright: 15px;\n      border-top-right-radius: 15px;\n      border-bottom-right-radius: 15px;\n    }\n`\n\nconst SearchButton = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 156px;\n      height: 40px;\n      display: inline-block;\n      float: right;\n      margin-top: 30.5px;\n    }\n`\n\nconst AllCsBG = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 100%;\n      background: rgb(0,142,204);\n      background: linear-gradient(90deg, rgba(0,142,204,1) 0%, rgba(89,200,248,1) 100%);\n      height: 300px;\n    }\n`\n\nvar showInfo;\n\nclass AllCustomers extends Component {\n\n  static propTypes = {\n    getRealCustomers: PropTypes.func.isRequired,\n    realCustomers: PropTypes.array.isRequired\n  }\n\n  static defaultProps = {\n    realCustomers: []\n  }\n\n  componentDidMount() {\n    this.props.getRealCustomers();\n    const {showNavBar, toggleNavBar, toggleNavToggle, updateCustomerSearch, history } = this.props\n    if (showNavBar === 'block') {\n      toggleNavBar('none')\n      toggleNavToggle(barsw);\n      updateCustomerSearch('');\n    } else {\n      console.log('Not showing....');\n      updateCustomerSearch('');\n    }\n  }\n\n  searchCustomers = (event) => {\n    const { search, updateCustomerSearch } = this.props\n    var searchText = event.target.value\n    updateCustomerSearch(searchText)\n\n    var s = document.getElementById('search-select');\n    var strSelect = s.options[s.selectedIndex].value\n    console.log(strSelect)\n  }\n\n  updateFilter = (event) => {\n    const { getCurrentFilter } = this.props\n    var cFilter = event.target.value\n    getCurrentFilter(cFilter)\n    console.log(cFilter)\n  }\n\n  renderRows = () => {\n    const { realCustomers, selectedCustomer, getSelectedCustomer, history, search, currentFilter } = this.props\n    console.log(selectedCustomer);\n    const realCustomersReversed = realCustomers.reverse()\n    var filteredCustomers;\n\n    if (currentFilter === 'Name') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var name = item.name.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = name.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n      \n    } else if (currentFilter === 'Phone Number') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var number = item.phoneNumber1.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = number.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n    } else if (currentFilter === 'Email') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var email = item.email.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = email.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n    } else {\n      filteredCustomers = realCustomersReversed\n    }\n\n    return filteredCustomers.map((d) => {\n      console.log(filteredCustomers);\n      console.log(currentFilter)\n      return (\n        <CustomerCellRow\n          key={d.customerid}\n          realCustomers={realCustomers}\n          selectedCustomer={selectedCustomer}\n          getSelectedCustomer={getSelectedCustomer}\n          history={history}\n          {...d}\n        />\n      )\n    })\n  }\n\n  renderNotLoggedIn = () => {\n    const { history } = this.props\n    return (\n      <div>\n          <MainBG>\n              <Text\n                white35\n                padding='100px 0 50px 0'\n                maxWidth='600px'\n                margin='0 auto'\n              >\n                You are not logged in. Please click the button below to return to the login screen.\n              </Text>\n            <Button\n              standardBtn\n              margin='0 auto'\n              onClick={() => history.push('/login')}\n            >\n              <Text\n                buttonText\n              >\n                Login\n              </Text>\n\n            </Button>\n          </MainBG>\n      </div>\n    )\n  }\n\n  render() {\n    const { realCustomers, updateCustomerSearch, search, history, auth, selectedCustomer } = this.props\n    const props = this.props\n    const data = props && props.auth ? props.auth.data : null;\n\n    if (selectedCustomer) {\n      window.location.reload()\n    } else {\n      console.log('No selected customer');\n    }\n\n    if (data) {\n      return (\n        <div>\n          <AllCsBG>\n            <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  All Customers\n                </Text>\n              </MainHeading>\n          <NewDiv\n            width=\"662px\"\n            height=\"40px\"\n          >\n            <CustomerSearchBar \n              placeholder=\"Search\"\n              onChange={this.searchCustomers}\n              value={search}\n            />\n          </NewDiv>\n          <CustomerSearchSelectSec>\n            <SearchNameBox\n              float=\"left\"\n            >\n              <Text\n                padding=\"0 0 15px 0\"\n              >\n                Search By:\n              </Text>\n              <NameSelectDiv>\n                <StyledSelect \n                id=\"search-select\"\n                onChange={this.updateFilter}\n                >\n                  <option>Name</option>\n                  <option>Phone Number</option>\n                  <option>Email</option>\n                  <option>Vin Number</option>\n                </StyledSelect>\n              </NameSelectDiv>\n            </SearchNameBox>\n            <SearchNameBox>\n              <Text\n                padding=\"0 0 15px 0\"\n              >\n                Sort By:\n              </Text>\n              <NameSelectDiv>\n                <StyledSelect>\n                  <option>Default</option>\n                </StyledSelect>\n              </NameSelectDiv>\n            </SearchNameBox>\n            <SearchButton>\n              <Button\n                width=\"100%\"\n                height=\"100%\"\n                borderRadius=\"40px\"\n                standardBtn\n              >\n                <Text\n                >\n                  Search\n                  </Text>\n              </Button>\n            </SearchButton>\n          </CustomerSearchSelectSec>\n        </AllCsBG>\n          <NewDiv\n            width=\"100vw\"\n          >\n              {this.renderRows()}\n          </NewDiv>\n        </div>\n      );\n    } else {\n      return (\n        this.renderNotLoggedIn()\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  realCustomers: state.realCustomers,\n  selectedCustomer: state.environment.selectedCustomer,\n  search: state.environment.search,\n  currentFilter: state.environment.currentFilter,\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getRealCustomers: () => dispatch(getRealCustomers()),\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   updateCustomerSearch: (search) => dispatch (updateCustomerSearch(search)),\n   getCurrentFilter: (filter) => dispatch (getCurrentFilter(filter))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(AllCustomers));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport mailw from '../../rersources/svg/mailw.svg';\nimport carw from '../../rersources/svg/carw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n    \n    @media ${device.laptop} {\n        margin-left: 10%;\n    }\n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n    }\n`\n\nclass CustomerInfo extends Component {\n  componentDidMount() {\n    const { selectedCustomer, getSelectedCustomer, realCustomers, customerVehicles, getRealCustomers } = this.props\n\n    if (!realCustomers || realCustomers.length < 1) {\n        getRealCustomers()\n        setTimeout(this.getCustomerFromParams, 7000)\n    } else {\n        console.log('There is something')\n        console.log(realCustomers)\n    }\n}\n\ngetCustomerFromParams = () => {\n    const { realCustomers, selectedCustomer, getSelectedCustomer } = this.props\n    const {\n        match: { params: { customerid } }\n    } = this.props\n\n    console.log(realCustomers)\n    const sc = this.search(customerid, realCustomers);\n    console.log(sc)\n    getSelectedCustomer(sc);\n}\n\nconsoleLog = () => {\n}\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n    openNewVehicle = () => {\n        const customerid = this.props.selectedCustomer.customerid\n        const history = this.props.history;\n        history.push(`/new-vehicle/${customerid}`);\n    }\n\n    openVehicleDetails = (v) => {\n        const { getSelectedVehicle, selectedVehicle, history, selectedCustomer } = this.props\n        const vehicleid = v.vehicleid\n        console.log(selectedCustomer)\n        getSelectedVehicle(v)\n        console.log(selectedVehicle)\n        const customerid = selectedCustomer.customerid\n        history.push(`/customers/vehicles/${customerid}/${vehicleid}`);\n   //   const sc = this.search(customerid, realCustomers);\n   //   getSelectedCustomer(sc);\n      console.log(v);\n    }\n\n    renderVehicles = () => {\n        const { customerVehicles, selectedCustomer } = this.props\n        const customerid = this.props.selectedCustomer.customerid\n        const newVehicleArray =[]\n         for (var i=0; i < customerVehicles.length; i++) {\n            if (customerVehicles[i].ownerid === customerid) {\n                newVehicleArray.push(customerVehicles[i])\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n        console.log(customerVehicles);\n        console.log(newVehicleArray);\n        const vehicles = newVehicleArray\n        console.log(vehicles);\n        return vehicles.map((v) => {\n            console.log(v);\n            return (\n                <NewDiv>\n                    <Text\n                        dblue22\n                        borderBottom\n                        padding=\"20px 0 5px 0\"\n                        color={Colors.lightBlue}\n                        onClick={() => this.openVehicleDetails(v)}\n                    >\n                        {v.vehicleMake} {v.vehicleModel}\n                    </Text>\n                </NewDiv>\n            )\n        })\n    }\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n    }\n\n    historyAndReload = () => {\n        const { history } = this.props\n        history.push('/login');\n        window.location.reload()\n      }\n    \n    renderNotLoggedIn = () => {\n        return (\n            <div>\n                <MainBG>\n                    <Text\n                    white35\n                    padding='100px 0 50px 0'\n                    maxWidth='600px'\n                    margin='0 auto'\n                    >\n                    You are not logged in. Please click the button below to return to the login screen.\n                    </Text>\n                <Button\n                    standardBtn\n                    margin='0 auto'\n                    onClick={this.historyAndReload}\n                >\n                    <Text\n                    buttonText\n                    >\n                    Login\n                    </Text>\n\n                </Button>\n                </MainBG>\n            </div>\n        )\n    }\n\n  render() {\n    const { realCustomers, selectedCustomer, customerVehicles } = this.props\n    var twonum;\n    if (selectedCustomer) {\n        if (selectedCustomer.phoneNumber2) {\n            twonum = selectedCustomer.phoneNumber2\n        } else {\n            twonum = 'No secondary phone number'\n        }\n    }\n\n    const props = this.props\n    const data = props && props.auth ? props.auth.data : null;\n\n    if (selectedCustomer && data) {\n        return (\n            <MainBG>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Customer Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                         CUSTOMER NAME:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.name}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.phoneNumber1}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER 2:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {twonum}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={mailw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          EMAIL:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.email}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n              <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    height=\"auto\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                            VEHICLES:\n                      </Text>\n                      {this.renderVehicles()}\n                  </InfoEText>\n              </InfoElement>\n              <NewDiv\n                margin=\"0 auto\"\n                width=\"100%\"\n              >\n                  <Button\n                    largeBtn\n                    margin=\"0 auto\"\n                    backgroundColor={Colors.darkBlue}\n                    onClick={() => this.openNewVehicle()}\n                  >\n                    <Text\n                      white20\n                    >\n                      Add New Vehicle\n                    </Text>\n                  </Button>\n              </NewDiv>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getRealCustomers: () => dispatch(getRealCustomers())\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer, getSelectedService } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport mileagew from '../../rersources/svg/mileagew.svg';\nimport servicew from '../../rersources/svg/servicew.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport mailw from '../../rersources/svg/mailw.svg';\nimport carw from '../../rersources/svg/carw.svg';\nimport vinw from '../../rersources/svg/vinw.svg';\nimport licensew from '../../rersources/svg/licensew.svg';\nimport calendarw from '../../rersources/svg/calendarw.svg';\nimport historyw from '../../rersources/svg/historyw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    }\n     \n    @media ${device.laptop} {\n        margin-left: 10%;\n    }\n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n    }\n`\n\nclass VehicleInfo extends Component {\n  componentDidMount() {\n    const { realCustomers } = this.props\n\n    if (!realCustomers || realCustomers.length < 1) {\n        setTimeout(this.getCustomerFromParams, 3000)\n    } else {\n        console.log('There is something')\n        console.log(realCustomers)\n    }\n}\n\ngetCustomerFromParams = () => {\n    const { getSelectedVehicle, getSelectedCustomer, customerVehicles, customerServices, selectedVehicle, realCustomers } = this.props\n    const {\n        match: { params: { vehicleid } }\n    } = this.props\n\n    const {\n        match: { params: { customerid } }\n    } = this.props\n\n    const sv = this.searchV(vehicleid, customerVehicles);\n    const sc = this.searchC(customerid, realCustomers)\n\n    getSelectedVehicle(sv)\n    getSelectedCustomer(sc)\n}\n\n  searchV = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n}\n\nsearchC = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    openServiceScreen = () => {\n        const { getSelectedVehicle, selectedVehicle, history } = this.props\n        const vehicleid = selectedVehicle.vehicleid\n        const customerid = selectedVehicle.ownerid\n        history.push(`/customers/service/${customerid}/${vehicleid}`);\n    }\n\n    openServiceDetails = (v) => {\n        const { history, getSelectedService } = this.props\n        const vehicleid = v.vehicleid\n        const serviceid = v.serviceid\n        const customerid = v.customerid\n        console.log(v)\n        history.push(`/customers/vehicles/${customerid}/${vehicleid}/${serviceid}`);\n        getSelectedService(v);\n      console.log(v);\n      console.log(getSelectedService);\n    }\n\n    renderServices = () => {\n        const { getSelectedVehicle, customerVehicles, customerServices, selectedVehicle } = this.props\n        const newServiceArray = []\n\n        for (var i=0; i < customerServices.length; i++) {\n            if (customerServices[i].vehicleid === selectedVehicle.vehicleid) {\n                newServiceArray.push(customerServices[i]);\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n       const services = newServiceArray\n         console.log(services.length);\n        return services.map((v) => {\n        var jsTime = v.date\n        var timestamp = jsTime.substring(0, jsTime.length - 3)\n        console.log(timestamp);\n        console.log(jsTime);\n        var newDate = new Date(timestamp*1000);\n        var fHours = newDate.getHours();\n        var fMinutes = '0' + newDate.getMinutes();\n\n        var fDay = newDate.getDate();\n        var fMonth = newDate.getMonth();\n        var fYear = newDate.getFullYear();\n        fMonth = fMonth + 1;\n        console.log(fMonth);\n        console.log(fDay);\n        \n        var ampm = fHours >= 12 ? 'pm' : 'am';\n        fHours = fHours % 12;\n        fHours = fHours ? fHours : 12;\n      //  fMinutes = fMinutes < 10 ? '0'+ fMinutes : fMinutes;\n      var formattedTime = fHours + ':' + fMinutes.substr(-2) + ampm;\n      var formattedDate = (`${fMonth}/${fDay}/${fYear}`)\n\n            return (\n                <NewDiv>\n                    <Text\n                        white20\n                        padding=\"20px 0 5px 0\"\n                        onClick={() => this.openServiceDetails(v)}\n                    >\n                        Service - {formattedDate}\n                    </Text>\n                </NewDiv>\n            )\n        })\n    }\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n      }\n\n  render() {\n    const { selectedVehicle, selectedCustomer } = this.props\n    var twonum;\n\n    if (selectedVehicle) {\n        if (selectedVehicle.phoneNumber2) {\n            twonum = selectedVehicle.phoneNumber2\n        } else {\n            twonum = 'No secondary phone number'\n        }\n    }\n\n    if (selectedVehicle && selectedCustomer) {\n        return (\n            <MainBG>\n                <StyledBackIcon\n                onClick={() => this.goBack()}\n                >\n                <SVG src={arrowleftw} />\n            </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Vehicle Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          OWNER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.name}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.phoneNumber1}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER 2:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {twonum}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={calendarw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          YEAR:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleYear}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MAKE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleMake}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MODEL:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleModel}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={mileagew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MILEAGE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleMileage}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={licensew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          LICENSE #:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleLicenseNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={vinw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          VIN #:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleVinNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                <InfoEIcon>\n                      <SVG src={servicew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    height=\"auto\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                            Service History\n                      </Text>\n                      {this.renderServices()}\n                  </InfoEText>\n              </InfoElement>\n              <NewDiv\n                margin=\"0 auto\"\n                width=\"100%\"\n              >\n                  <Button\n                    largeBtn\n                    margin=\"0 auto\"\n                    backgroundColor={Colors.darkBlue}\n                    onClick={() => this.openServiceScreen()}\n                  >\n                    <Text\n                      white20\n                    >\n                      Service This Vehicle\n                    </Text>\n                  </Button>\n              </NewDiv>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   getSelectedService: (service) => dispatch(getSelectedService(service))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(VehicleInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer, getSelectedService } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport detailsw from '../../rersources/svg/detailsw.svg';\nimport mileagew from '../../rersources/svg/mileagew.svg';\nimport pencilw from '../../rersources/svg/pencilw.svg';\nimport calendarw from '../../rersources/svg/calendarw.svg';\nimport historyw from '../../rersources/svg/historyw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n\n    @media ${device.laptop} {\n        margin-left: 10%;\n    }\n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n        max-width: 350px;\n    }\n`\n\nclass ServiceInfo extends Component {\n  componentDidMount() {\n    const { realCustomers } = this.props\n\n    if (!realCustomers || realCustomers.length < 1) {\n        setTimeout(this.getCustomerFromParams, 3000)\n    } else {\n        console.log('There is something')\n        console.log(realCustomers)\n    }\n}\n\ngetCustomerFromParams = () => {\n    const { getSelectedVehicle, getSelectedCustomer, getSelectedService, customerVehicles, customerServices, selectedVehicle, realCustomers } = this.props\n    const {\n        match: { params: { vehicleid } }\n    } = this.props\n\n    const {\n        match: { params: { customerid } }\n    } = this.props\n\n    const {\n        match: { params: { serviceid } }\n    } = this.props\n\n    const sv = this.searchV(vehicleid, customerVehicles);\n    const sc = this.searchC(customerid, realCustomers);\n    const ss = this.searchS(serviceid, customerServices)\n\n    console.log(sv)\n    console.log(ss)\n    console.log(sc)\n\n    getSelectedVehicle(sv)\n    getSelectedCustomer(sc)\n    getSelectedService(ss)\n}\n\n  searchV = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n}\n\nsearchC = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\nsearchS = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].serviceid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n    }\n\n  render() {\n    const { selectedVehicle, selectedCustomer, selectedService } = this.props\n    console.log(this.props.state);\n    var strTime;\n    var strDate;\n\n    if (selectedService) {\n        var jsTime = selectedService.date\n        var timestamp = jsTime.substring(0, jsTime.length - 3)\n        console.log(timestamp);\n        console.log(jsTime);\n        var newDate = new Date(timestamp*1000);\n        var fHours = newDate.getHours();\n        var fMinutes = '0' + newDate.getMinutes();\n\n        var fDay = newDate.getDate();\n        var fMonth = newDate.getMonth();\n        var fYear = newDate.getFullYear();\n        fMonth = fMonth + 1;\n        console.log(fMonth);\n        console.log(fDay);\n        \n        var ampm = fHours >= 12 ? 'pm' : 'am';\n        fHours = fHours % 12;\n        fHours = fHours ? fHours : 12;\n      //  fMinutes = fMinutes < 10 ? '0'+ fMinutes : fMinutes;\n      var formattedTime = fHours + ':' + fMinutes.substr(-2) + ampm;\n      var formattedDate = (`${fMonth}/${fDay}/${fYear}`)\n      //  strDate = (`${fMonth}/${fDay}`);\n\n        return (\n            <MainBG>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Service Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          CUSTOMER NAME\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.customerName}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={calendarw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          DATE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {formattedDate}\n                          &nbsp;\n                          - \n                          &nbsp;\n                          {formattedTime} \n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.phoneNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={mileagew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MILEAGE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.mileage}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={pencilw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          REASON FOR VISIT:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.reason}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={detailsw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          DETAILS:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.details}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   getSelectedService: (service) => dispatch(getSelectedService(service))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(ServiceInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport checkw from '../../rersources/svg/checkw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text'; \n\nconst ConfirmContentContainer = styled.div`\n    @media ${device.tablet} {\n        padding-top: 300px;\n        width: 500px;\n        text-align: center;\n        margin: 0 auto;\n    }\n`\n\nconst ConfirmIconDiv = styled.div`\n    @media ${device.tablet} {\n        width: 200px;\n        height: 200px;\n        margin: 0 auto;  \n    }\n\n    svg {\n        width: 100%\n        height: 100%\n    }\n`\n\nconst ConfirmContentText = styled.div`\n    @media ${device.tablet} {\n        width: 500px;\n        margin: 0 auto;\n        padding-top: 50px;\n        padding-bottom: 50px;\n    }\n`\n\nconst ConfirmButtons = styled.div`\n    @media ${device.tablet} {\n\n    }\n`\n\nclass CustomerConfirmation extends Component {\n    componentDidMount() {\n    }\n\n    search = (id, myArray) => {\n        for (var i=0; i < myArray.length; i++) {\n            if (myArray[i].customerid === id) {\n                return myArray[i];\n            }\n        }\n    }\n\n    openAllVehicles = () => {\n        const { history } = this.props;\n        history.push('/all-customers')\n    }\n    openAddVehicle = () => {\n        const { realCustomers, selectedCustomer, getSelectedCustomer, history } = this.props\n        const currentCus = realCustomers.slice(-1).pop();\n        getSelectedCustomer(currentCus);\n        const customerid = currentCus.customerid\n        history.push(`/new-vehicle2/${customerid}`);\n    }\n\n    render() {\n        const { realCustomers, getSelectedCustomer, selectedCustomer } = this.props\n        const props = this.props\n        const data = props && props.auth ? props.auth.data : null;\n\n        if (realCustomers.length > 0 && data) {\n            console.log(realCustomers)\n            const currentCus = realCustomers.slice(-1).pop()\n            console.log(currentCus);\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                            <ConfirmIconDiv>\n                                <SVG src={checkw} />\n                            </ConfirmIconDiv>\n                            <ConfirmContentText>\n                                <Text\n                                    white20\n                                >\n                                    {currentCus.name},\n                                    &nbsp;\n                                The new customer has been added successfully. Would you like to add a vehicle for this customer now?\n                                </Text>\n                        </ConfirmContentText>\n                        <ConfirmButtons>\n                                <Button\n                                    display=\"inline-block\"\n                                    margin=\"0px 5px\"\n                                    width=\"156px\"\n                                    height=\"40px\"\n                                    borderRadius=\"25px\"\n                                    backgroundColor={Colors.fullWhite}\n                                    onClick={() => this.openAllVehicles()}\n                                >\n                                    <Text\n                                        dblue20\n                                    >\n                                        Not Now\n                                    </Text>\n                                </Button>\n                                <Button\n                                    display=\"inline-block\"\n                                    standardBtn\n                                    margin=\"0px 5px\"\n                                    onClick={() => this.openAddVehicle()}\n                                >\n                                    <Text\n                                        white20\n                                    >\n                                        Yes\n                                    </Text>\n                                </Button>\n                            </ConfirmButtons>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                           <p>Loading...</p>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    state: state\n  })\n  \n  const dispatchToProps = (dispatch) => ({\n     \n  })\n  \n  export default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerConfirmation));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport checkw from '../../rersources/svg/checkw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text'; \n\nconst ConfirmContentContainer = styled.div`\n    @media ${device.tablet} {\n        padding-top: 300px;\n        width: 500px;\n        text-align: center;\n        margin: 0 auto;\n    }\n`\n\nconst ConfirmIconDiv = styled.div`\n    @media ${device.tablet} {\n        width: 200px;\n        height: 200px;\n        margin: 0 auto;  \n    }\n\n    svg {\n        width: 100%\n        height: 100%\n    }\n`\n\nconst ConfirmContentText = styled.div`\n    @media ${device.tablet} {\n        width: 500px;\n        margin: 0 auto;\n        padding-top: 50px;\n        padding-bottom: 50px;\n    }\n`\n\nconst ConfirmButtons = styled.div`\n    @media ${device.tablet} {\n\n    }\n`\n\nclass VehicleConfirmation extends Component {\n    componentDidMount() {\n    }\n\n    search = (id, myArray) => {\n        for (var i=0; i < myArray.length; i++) {\n            if (myArray[i].customerid === id) {\n                return myArray[i];\n            }\n        }\n    }\n\n    openAllVehicles = () => {\n        const { history, selectedVehicle, getSelectedVehicle, customerVehicles, selectedCustomer } = this.props\n        history.push('/all-customers');\n    }\n    openAddService = () => {\n        const { realCustomers, selectedCustomer, getSelectedVehicle, history, customerVehicles, selectedVehicle, getSelectedCustomer } = this.props\n        const currentV = customerVehicles.slice(-1).pop();\n\n        const {\n            match: { params: { customerid } }\n        } = this.props\n\n        const vehicleid = currentV.vehicleid\n        const currentCustomer = this.search(customerid, realCustomers)\n\n        getSelectedVehicle(currentV);\n        getSelectedCustomer(currentCustomer)\n    \n\n        console.log(selectedCustomer)\n        console.log(realCustomers)\n\n        history.push(`/customers/service2/${customerid}/${vehicleid}`);\n    }\n\n    render() {\n        const { realCustomers, getSelectedCustomer, selectedCustomer } = this.props\n\n        if (realCustomers.length > 0) {\n            console.log(realCustomers)\n            const currentCus = realCustomers.slice(-1).pop()\n            console.log(currentCus);\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                            <ConfirmIconDiv>\n                                <SVG src={checkw} />\n                            </ConfirmIconDiv>\n                            <ConfirmContentText>\n                                <Text\n                                    white20\n                                >\n                                The new vehicle has been added successfully. Would you like to service this customer now?\n                                </Text>\n                        </ConfirmContentText>\n                        <ConfirmButtons>\n                                <Button\n                                    display=\"inline-block\"\n                                    margin=\"0px 5px\"\n                                    width=\"156px\"\n                                    height=\"40px\"\n                                    borderRadius=\"25px\"\n                                    backgroundColor={Colors.fullWhite}\n                                    onClick={() => this.openAllVehicles()}\n                                >\n                                    <Text\n                                        dblue20\n                                    >\n                                        Not Now\n                                    </Text>\n                                </Button>\n                                <Button\n                                    display=\"inline-block\"\n                                    standardBtn\n                                    margin=\"0px 5px\"\n                                    onClick={() => this.openAddService()}\n                                >\n                                    <Text\n                                        white20\n                                    >\n                                        Yes\n                                    </Text>\n                                </Button>\n                            </ConfirmButtons>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                           <p>Loading...</p>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    state: state\n  })\n  \n  const dispatchToProps = (dispatch) => ({\n     \n  })\n  \n  export default withRouter(connect(mapStateToProps, dispatchToProps)(VehicleConfirmation));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {userLogin} from '../../store/actions/customer'\nimport './customers.css';\n\nclass UserLogin extends Component {\n\n  static propTypes = {\n    userLogin: PropTypes.func.isRequired,\n    resSend: PropTypes.string.isRequired\n  }\n\n  static defaultProps = {\n    resSend: ''\n  }\n\n  componentWillMount() {\n    this.props.userLogin();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h2>Res Send User Login</h2>\n        <p>{this.props.resSend}</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  resSend: state.resSend\n})\n\nconst dispatchToProps = (dispatch) => ({\n   userLogin: () => dispatch(userLogin())\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(UserLogin);","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Colors from '../constants/colors';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\n//import ReactSVG from 'react-svg';\nimport SVG from 'react-inlinesvg';\n\nconst FormField = styled.input`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 0px 10px 10px 0px;\n    padding: 0;\n    padding-left: 10px;\n    font-size: 16px;\n\n    @media ${device.tablet} {\n        width: ${({ width }) => (width || '345px')};\n        height: 50px;\n        float: right;\n        margin: 0 auto;\n    }\n`\n\nconst FormFieldContainer = styled.div`\n\n    @media ${device.tablet} {\n        width: ${({ width }) => (width || '417px')};\n        height: 50px;\n        margin-bottom: 50px;\n    }\n\n    border-radius: 10px;\n    -webkit-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    -moz-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n`\n\nconst FormFieldLeft = styled.div`\n    border-radius: 10px 0px 0px 10px;\n    width: 61px;\n    height: 50px;\n    background-color: ${Colors.fullWhite};\n    float: left;\n`\n\nconst FormFieldSplit = styled.div`\n    width: 1px;\n    height: 50px;\n    background: ${Colors.lightBlue};\n    float: left;\n`\n\nconst FormIconContainer = styled(NewDiv)`\n    width: 33px;\n    height: 33px;\n    margin: 0 auto;\n    margin-top: 8px;\n\n    svg {\n        width: 33px;\n        height: 33px;\n    }\n`\n\nexport default ({ input, label, svg, placeholder, defaultValue, value, fieldWidth, containerWidth, meta: { error, touched } }) => {\n    console.log(defaultValue);\n    return (\n        <FormFieldContainer\n            width={containerWidth}\n        >\n                <FormFieldLeft>\n                    <FormIconContainer\n                    >\n                        <SVG src={svg} />\n                    </FormIconContainer>\n                </FormFieldLeft>\n                <FormFieldSplit />\n                <FormField {...input} placeholder={placeholder} value={value} defaultValue={defaultValue} width={fieldWidth} /> <br/>\n                {touched && error}\n        </FormFieldContainer>\n    )\n}\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport emailb from '../../rersources/svg/emailb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport SVG from 'react-inlinesvg';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport StyledBackIcon from './Styled/StyledBackIcon';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          min-height: 1200px;\n          margin: 0 auto;  \n    }\n\n    @media ${device.laptop} {\n      width: 500px;\n      min-height: 100vh;\n      margin: 0 auto;  \n    }\n`\n\nconst FIELDS = [\n  {\n    label: 'Customer Name', name: 'cname', svg: userb, placeholder: 'Enter Customer Name...', noValueError: 'You must provide a customer name'\n  },\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter Phone Number...', noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Secondary Phone Number', name: 'pnumber2', svg: phoneb, placeholder: 'Enter Secondary Phone Number', noValueError: 'You must provide a secondary phone number'\n  },\n  {\n    label: 'Customer Email', name: 'email', svg: emailb, placeholder: 'Enter Email...', noValueError: 'You must provide a email address'\n  },\n]\n\nclass AddCustomer extends Component {\n  componentDidMount() {\n    const {showNavBar, toggleNavBar, toggleNavToggle } = this.props\n    if (showNavBar === 'block') {\n      toggleNavBar('none')\n      toggleNavToggle(barsw);\n    } else {\n      console.log('Not showing....');\n    }\n  }\n\n  historyAndReload = () => {\n    const { history } = this.props\n    history.push('/login');\n    window.location.reload()\n  }\n\n  renderNotLoggedIn = () => {\n    return (\n      <div>\n          <MainBG>\n              <Text\n                white35\n                padding='100px 0 50px 0'\n                maxWidth='600px'\n                margin='0 auto'\n              >\n                You are not logged in. Please click the button below to return to the login screen.\n              </Text>\n            <Button\n              standardBtn\n              margin='0 auto'\n              onClick={this.historyAndReload}\n            >\n              <Text\n                buttonText\n              >\n                Login\n              </Text>\n\n            </Button>\n          </MainBG>\n      </div>\n    )\n  }\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          type=\"text\" \n          name={field.name} \n          placeholder={field.placeholder}\n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  refreshWindow = () => {\n    window.location.reload()\n  }\n\n  addNewCustomer = (values) => {\n      const { createNewCustomer, history, realCustomers } = this.props\n      console.log(realCustomers);\n      createNewCustomer(values);\n      history.push('/new-customer/confirmation');\n      setTimeout(this.refreshWindow, 1000)\n  }\n\n  render() {\n    const { createNewCustomer, history } = this.props\n    console.log(createNewCustomer);\n    const props = this.props\n    const data = props && props.auth ? props.auth.data : null;\n\n    if (data) {\n      return (\n        <div>\n            <MainBG>\n              <StyledBackIcon\n                  onClick={() => this.goBack()}\n              >\n                  <SVG src={arrowleftw} />\n              </StyledBackIcon>\n                <MainHeading>\n                  <Text\n                    mainHeading\n                    padding=\"30px 0 50px 0\"\n                  >\n                    Enter The Fields Below\n                  </Text>\n                </MainHeading>\n              <FormContainer\n              >\n                  <form onSubmit={this.props.handleSubmit(values => this.addNewCustomer(values))}>\n                    {this.renderFields()}\n                    <Button\n                      standardBtn\n                      margin=\"0 auto\"\n                      type=\"submit\"\n                    >\n                      <Text\n                        buttonText\n                      >\n                        Submit\n                      </Text>\n                    </Button>\n                  </form>\n              </FormContainer>\n            </MainBG>\n        </div>\n      );\n    } else {\n      return (\n        this.renderNotLoggedIn()\n      )\n    }\n  }\n}\n\nconst validate = (values, props) => {\n  //const { realCustomers } = this.props\n  const errors = {};\n\n  if (!values.cname) {\n    errors.cname = 'You must provide a customer name'\n  }\n\n  if (!values.email) {\n    errors.email = 'You must provide an email'\n  }\n\n  if (!values.pnumber) {\n    errors.pnumber = 'You must provide a phone number'\n  }\n\n  if (!values.pnumber) {\n    errors.pnumber2 = 'You must provide a secondary phone number'\n  }\n\n \n  for (var i=0; i < props.realCustomers.length; i++) {\n    if (values.email == props.realCustomers[i].email) {\n      errors.email = 'This email is already in use'\n      console.log('ERROR');\n    } else {\n      console.log('SUCCESS');\n    }\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newCustomerForm'\n})(AddCustomer)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport numberb from '../../rersources/svg/numberb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { getSelectedVehicle } from '../../store/reducers/environment';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          min-height: 1200px;\n          margin: 0 auto;  \n    }\n\n    @media ${device.laptop} {\n      width: 500px;\n      min-height: 700px;\n      margin: 0 auto;  \n    }\n\n`\n\nconst DetailsTextarea = styled.textarea`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 10px;\n    padding: 0;\n    padding-left: 10px;\n    padding-top: 10px;\n    font-size: 16px;\n\n  @media ${device.tablet} {\n    width: 500px;\n    height: 250px;\n    margin: 0 auto;\n    margin-bottom: 50px;  \n  }\n`\n\nconst FIELDS = []\n\nclass AddService extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      currentDetailsText: ''\n    }\n\n    this.updateTextarea = this.updateTextarea.bind(this)\n  }\n\n  componentDidMount() {\n    const { selectedCustomer, selectedVehicle, getRealCustomers, realCustomers } = this.props\n    console.log(selectedVehicle)\n    console.log(selectedCustomer)\n\n    if (!selectedCustomer) {\n      setTimeout(this.getCustomerFromParams, 3000)\n    } else {\n        console.log('There is something')\n        console.log(realCustomers)\n    }\n  }\n\n  historyAndReload = () => {\n    const { history } = this.props\n    history.push('/login');\n    window.location.reload()\n  }\n\n  renderNotLoggedIn = () => {\n    return (\n      <div>\n          <MainBG>\n              <Text\n                white35\n                padding='100px 0 50px 0'\n                maxWidth='600px'\n                margin='0 auto'\n              >\n                You are not logged in. Please click the button below to return to the login screen.\n              </Text>\n            <Button\n              standardBtn\n              margin='0 auto'\n              onClick={this.historyAndReload}\n            >\n              <Text\n                buttonText\n              >\n                Login\n              </Text>\n\n            </Button>\n          </MainBG>\n      </div>\n    )\n  }\n\n  searchc = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n  }\n\n  searchv = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n  }\n  \n  getCustomerFromParams = () => {\n      const { realCustomers, selectedCustomer, customerVehicles, getSelectedCustomer, getSelectedVehicle } = this.props\n      const {\n          match: { params: { customerid } }\n      } = this.props\n\n      const {\n        match: { params: { vehicleid } }\n    } = this.props\n\n      const sc = this.searchc(customerid, realCustomers);\n      const sv = this.searchv(vehicleid, customerVehicles);\n\n      console.log(sc)\n      \n      getSelectedCustomer(sc);\n      getSelectedVehicle(sv);\n  }\n\n  renderFields = () => {\n    const { selectedCustomer, selectedVehicle } = this.props\n    console.log(selectedCustomer)\n    console.log(selectedVehicle)\n\n    if (selectedCustomer && selectedVehicle) {\n      console.log(selectedVehicle)\n      const name = {\n        label: 'Name', name: 'name', svg: userb, placeholder: 'Enter name...', noValueError: 'You must provide a name', defaultValue: selectedCustomer.name\n      }\n  \n      const vMileage = {\n        label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter mileage...', noValueError: 'You must provide the mileage'\n      }\n  \n      const number = {\n        label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...', noValueError: 'You must provide a phone number', defaultValue: selectedCustomer.phoneNumber1\n      }\n  \n     const reason = {\n        label: 'Reason For Visit', name: 'reason', svg: pencilb, placeholder: 'Enter reason...', noValueError: 'You must provide a reason for visit'\n     }\n  \n      const tNumber = {\n        label: 'Tag Number', name: 'tnumber', svg: numberb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number'\n      }\n  \n      if (FIELDS.length < 1) {\n        FIELDS.push(name)\n        FIELDS.push(vMileage)\n        FIELDS.push(number)\n        FIELDS.push(reason)\n        FIELDS.push(tNumber)\n      }\n    }\n\n    if (selectedCustomer && selectedVehicle) {\n      return FIELDS.map(field => {\n        return(\n          <Field \n            key={field.name}\n            label={field.label} \n            type=\"text\" \n            name={field.name} \n            component={TextField} \n            fieldWidth=\"428px\"\n            containerWidth=\"500px\" \n            placeholder={field.placeholder}\n            value='value'\n            defaultValue={field.defaultValue}\n            svg={field.svg}\n        />\n        )  \n      });\n    } else {\n        return (\n          <div>Loading.....</div>\n        )\n    }\n  }\n\n  renderDetailsField = () => {\n    console.log('Here is the details textarea....')\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  updateTextarea = (e) => {\n    const newDetailsText = e.target.value\n    this.setState({ currentDetailsText: newDetailsText});\n    console.log(this.state.currentDetailsText)\n  }\n\n  refreshWindow = () => {\n    window.location.reload()\n  }\n\n  render() {\n    const { createNewService, selectedCustomer, selectedVehicle } = this.props\n    const props = this.props\n    const currentDetailsText = this.state.currentDetailsText\n\n    const data = props && props.auth ? props.auth.data : null;\n\n    const createBody = (values, props) => {\n      const history = this.props.history;\n        let dataa = {\n          values: values,\n          props: props,\n          detailsText: currentDetailsText\n        }\n\n        var myJSON = JSON.stringify(dataa)\n\n        console.log(`Here is the data ${myJSON}`)\n        createNewService(dataa);\n        history.push('/customers/chat/service');\n        setTimeout(this.refreshWindow, 1000)\n    }\n\n    if (data) {\n      return (\n        <div>\n        <MainBG>\n          <StyledBackIcon\n              onClick={() => this.goBack()}\n          >\n             <SVG src={arrowleftw} />\n          </StyledBackIcon>\n            <MainHeading>\n              <Text\n                mainHeading\n                padding=\"30px 0 50px 0\"\n              >\n                Enter The Fields Below\n              </Text>\n            </MainHeading>\n          <FormContainer\n          >\n              <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n                {this.renderFields()}\n                <DetailsTextarea \n                  value={this.state.currentDetailsText}\n                  onChange={this.updateTextarea}\n                  placeholder='Enter Details...'\n                />\n                <Button\n                  standardBtn\n                  margin=\"0 auto\"\n                  marginBottom='50px'\n                  type=\"submit\"\n                >\n                  <Text\n                    buttonText\n                  >\n                    Submit\n                  </Text>\n                </Button>\n              </form>\n          </FormContainer>\n        </MainBG>\n    </div>\n      );\n    } else {\n      return (\n        this.renderNotLoggedIn()\n      )\n    }\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = 'Please confirm customer name by selecting the text field.'\n  }\n\n  if (!values.pnumber) {\n    errors.pnumber = 'Please confirm customer phone number by selecting the text field.'\n  }\n\n  if (!values.reason) {\n    errors.reason = 'You must provide a reason for service.'\n  }\n\n  if (!values.tnumber) {\n    errors.tnumber = 'You must provide a tag number'\n  }\n\n  if (!values.mileage) {\n    errors.mileage = 'You must provide a mileage number.'\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newServiceForm'\n})(AddService)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport numberb from '../../rersources/svg/numberb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { getSelectedVehicle } from '../../store/reducers/environment';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          min-height: 1200px;\n          margin: 0 auto;  \n    }\n\n    @media ${device.laptop} {\n      width: 500px;\n      min-height: 700px;\n      margin: 0 auto;  \n    }\n\n`\n\nconst DetailsTextarea = styled.textarea`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 10px;\n    padding: 0;\n    padding-left: 10px;\n    padding-top: 10px;\n    font-size: 16px;\n\n  @media ${device.tablet} {\n    width: 500px;\n    height: 250px;\n    margin: 0 auto;\n    margin-bottom: 50px;  \n  }\n`\n\nconst FIELDS = []\n\nclass AddService extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      currentDetailsText: ''\n    }\n\n    this.updateTextarea = this.updateTextarea.bind(this)\n  }\n\n  componentDidMount() {\n    const { selectedCustomer, selectedVehicle, getRealCustomers, realCustomers } = this.props\n    console.log(selectedVehicle)\n    console.log(selectedCustomer)\n\n    if (!selectedCustomer) {\n      setTimeout(this.getCustomerFromParams, 3000)\n    } else {\n        console.log('There is something')\n        console.log(realCustomers)\n    }\n  }\n\n  historyAndReload = () => {\n    const { history } = this.props\n    history.push('/login');\n    window.location.reload()\n  }\n\n  renderNotLoggedIn = () => {\n    return (\n      <div>\n          <MainBG>\n              <Text\n                white35\n                padding='100px 0 50px 0'\n                maxWidth='600px'\n                margin='0 auto'\n              >\n                You are not logged in. Please click the button below to return to the login screen.\n              </Text>\n            <Button\n              standardBtn\n              margin='0 auto'\n              onClick={this.historyAndReload}\n            >\n              <Text\n                buttonText\n              >\n                Login\n              </Text>\n\n            </Button>\n          </MainBG>\n      </div>\n    )\n  }\n\n  searchc = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n  }\n\n  searchv = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n  }\n  \n  getCustomerFromParams = () => {\n      const { realCustomers, selectedCustomer, customerVehicles, getSelectedCustomer, getSelectedVehicle } = this.props\n      const {\n          match: { params: { customerid } }\n      } = this.props\n\n      const {\n        match: { params: { vehicleid } }\n    } = this.props\n\n      const sc = this.searchc(customerid, realCustomers);\n      const sv = this.searchv(vehicleid, customerVehicles);\n\n      console.log(sc)\n      \n      getSelectedCustomer(sc);\n      getSelectedVehicle(sv);\n  }\n\n  renderFields = () => {\n    const { selectedCustomer, selectedVehicle } = this.props\n    console.log(selectedCustomer)\n    console.log(selectedVehicle)\n\n    if (selectedCustomer && selectedVehicle) {\n      console.log(selectedVehicle)\n      const name = {\n        label: 'Name', name: 'name', svg: userb, placeholder: 'Enter name...', noValueError: 'You must provide a name', defaultValue: selectedCustomer.name\n      }\n  \n      const vMileage = {\n        label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter mileage...', noValueError: 'You must provide the mileage', defaultValue: selectedVehicle.vehicleMileage\n      }\n  \n      const number = {\n        label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...', noValueError: 'You must provide a phone number', defaultValue: selectedCustomer.phoneNumber1\n      }\n  \n     const reason = {\n        label: 'Reason For Visit', name: 'reason', svg: pencilb, placeholder: 'Enter reason...', noValueError: 'You must provide a reason for visit'\n     }\n  \n      const tNumber = {\n        label: 'Tag Number', name: 'tnumber', svg: numberb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number'\n      }\n  \n      if (FIELDS.length < 1) {\n        FIELDS.push(name)\n        FIELDS.push(vMileage)\n        FIELDS.push(number)\n        FIELDS.push(reason)\n        FIELDS.push(tNumber)\n      }\n    }\n\n    if (selectedCustomer && selectedVehicle) {\n      return FIELDS.map(field => {\n        return(\n          <Field \n            key={field.name}\n            label={field.label} \n            type=\"text\" \n            name={field.name} \n            component={TextField} \n            fieldWidth=\"428px\"\n            containerWidth=\"500px\" \n            placeholder={field.placeholder}\n            value='value'\n            defaultValue={field.defaultValue}\n            svg={field.svg}\n        />\n        )  \n      });\n    } else {\n        return (\n          <div>Loading.....</div>\n        )\n    }\n  }\n\n  renderDetailsField = () => {\n    console.log('Here is the details textarea....')\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  updateTextarea = (e) => {\n    const newDetailsText = e.target.value\n    this.setState({ currentDetailsText: newDetailsText});\n    console.log(this.state.currentDetailsText)\n  }\n\n  refreshWindow = () => {\n    window.location.reload()\n  }\n\n  render() {\n    const { createNewService, selectedCustomer, selectedVehicle } = this.props\n    const props = this.props\n    const currentDetailsText = this.state.currentDetailsText\n\n    const data = props && props.auth ? props.auth.data : null;\n\n    const createBody = (values, props) => {\n      const history = this.props.history;\n        let dataa = {\n          values: values,\n          props: props,\n          detailsText: currentDetailsText\n        }\n\n        var myJSON = JSON.stringify(dataa)\n\n        console.log(`Here is the data ${myJSON}`)\n        createNewService(dataa);\n        history.push('/customers/chat/service');\n        setTimeout(this.refreshWindow, 1000)\n    }\n\n    if (data) {\n      return (\n        <div>\n        <MainBG>\n          <StyledBackIcon\n              onClick={() => this.goBack()}\n          >\n             <SVG src={arrowleftw} />\n          </StyledBackIcon>\n            <MainHeading>\n              <Text\n                mainHeading\n                padding=\"30px 0 50px 0\"\n              >\n                Enter The Fields Below\n              </Text>\n            </MainHeading>\n          <FormContainer\n          >\n              <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n                {this.renderFields()}\n                <DetailsTextarea \n                  value={this.state.currentDetailsText}\n                  onChange={this.updateTextarea}\n                  placeholder='Enter Details...'\n                />\n                <Button\n                  standardBtn\n                  margin=\"0 auto\"\n                  marginBottom='50px'\n                  type=\"submit\"\n                >\n                  <Text\n                    buttonText\n                  >\n                    Submit\n                  </Text>\n                </Button>\n              </form>\n          </FormContainer>\n        </MainBG>\n    </div>\n      );\n    } else {\n      return (\n        this.renderNotLoggedIn()\n      )\n    }\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = 'Please confirm customer name by selecting the text field.'\n  }\n\n  if (!values.pnumber) {\n    errors.pnumber = 'Please confirm customer phone number by selecting the text field.'\n  }\n\n  if (!values.reason) {\n    errors.reason = 'You must provide a reason for service.'\n  }\n\n  if (!values.tnumber) {\n    errors.tnumber = 'You must provide a tag number'\n  }\n\n  if (!values.mileage) {\n    errors.mileage = 'Please confirm mileage by selecting the text field.'\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newServiceForm'\n})(AddService)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport calendarb from '../../rersources/svg/calendarb.svg';\nimport carb from '../../rersources/svg/carb.svg';\nimport licenseb from '../../rersources/svg/licenseb.svg';\nimport vinb from '../../rersources/svg/vinb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          min-height: 1200px;\n          margin: 0 auto;  \n    }\n\n    @media ${device.laptop} {\n      width: 500px;\n      min-height: 700px;\n      margin: 0 auto;  \n}\n`\n\nconst FIELDS = []\n\nclass AddVehicle extends Component {\n  componentDidMount() {\n    const { selectedCustomer, realCustomers, getRealCustomers } = this.props\n\n    if (!selectedCustomer) {\n        setTimeout(this.getCustomerFromParams, 3000)\n    } else {\n        console.log('There is something')\n        console.log(realCustomers)\n    }\n}\n\nsearch = (id, myArray) => {\n  for (var i=0; i < myArray.length; i++) {\n      if (myArray[i].customerid === id) {\n          return myArray[i];\n      }\n  }\n}\n\ngetCustomerFromParams = () => {\n    const { realCustomers, selectedCustomer, getSelectedCustomer } = this.props\n\n    const {\n        match: { params: { customerid } }\n    } = this.props\n\n    console.log(realCustomers)\n    console.log(this.props)\n    const sc = this.search(customerid, realCustomers);\n    console.log(sc)\n    getSelectedCustomer(sc);\n}\n\n  renderFields = () => {\n    const { selectedCustomer } = this.props\n\n    if (selectedCustomer) {\n      const number = {\n        label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...', noValueError: 'You must provide a phone number', defaultValue: selectedCustomer.phoneNumber1\n      }\n  \n      const number2 = {\n        label: 'Secondary Phone Number', name: 'pnumber2', svg: phoneb, placeholder: 'Enter secondary phone number...',  noValueError: 'You must provide a secondary phone number', defaultValue: selectedCustomer.phoneNumber2\n      }\n  \n      const vYear = {\n        label: 'Vehicle Year', name: 'vyear', svg: calendarb, placeholder: 'Enter vehicle year...', noValueError: 'You must provide a vehicle year'\n      }\n  \n      const vMake = {\n        label: 'Vehicle Make', name: 'vmake', svg: carb, placeholder: 'Enter vehicle make...', noValueError: 'You must provide a vehicle make'\n      }\n  \n      const vModel = {\n        label: 'Vehicle Model', name: 'vmodel', svg: carb, placeholder: 'Enter vehicle model..', noValueError: 'You must provide a vehicle model'\n      }\n  \n      const licenseP = {\n        label: 'License Plate Number', name: 'lpnumber', svg: licenseb, placeholder: 'Enter license plate number...', noValueError: 'You must provide a license plate number'\n      }\n  \n      const vVin = {\n        label: 'Vehicle Vin Number', name: 'vnumber', svg: vinb, placeholder: 'Enter vehicle vin number...', noValueError: 'You must provide a vin number'\n      }\n  \n      const vMileage = {\n        label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter mileage...', noValueError: 'You must provide the mileage'\n      }\n  \n      if (FIELDS.length < 1) {\n        FIELDS.push(number)\n        FIELDS.push(number2)\n        FIELDS.push(vYear)\n        FIELDS.push(vMake)\n        FIELDS.push(vModel)\n        FIELDS.push(licenseP)\n        FIELDS.push(vVin)\n        FIELDS.push(vMileage)\n    }\n  }\n\n    console.log(selectedCustomer)\n\n    if (selectedCustomer) {\n      return FIELDS.map(field => {\n        return(\n          <Field \n            key={field.name}\n            label={field.label} \n            type=\"text\" \n            name={field.name} \n            component={TextField} \n            fieldWidth=\"428px\"\n            containerWidth=\"500px\" \n            placeholder={field.placeholder}\n            value='value'\n            defaultValue={field.defaultValue}\n            svg={field.svg}\n        />\n        )  \n      });\n    } else {\n      return (\n        <div>\n          Loading.......\n        </div>\n      )\n    }\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history, selectedCustomer } = this.props\n    console.log(this.props)\n    console.log(`Here is the selected customer ${selectedCustomer}`);\n    history.go(-1)\n  }\n\n  historyAndReload = () => {\n    const { history } = this.props\n    history.push('/login');\n    window.location.reload()\n  }\n\n  renderNotLoggedIn = () => {\n    return (\n      <div>\n          <MainBG>\n              <Text\n                white35\n                padding='100px 0 50px 0'\n                maxWidth='600px'\n                margin='0 auto'\n              >\n                You are not logged in. Please click the button below to return to the login screen.\n              </Text>\n            <Button\n              standardBtn\n              margin='0 auto'\n              onClick={this.historyAndReload}\n            >\n              <Text\n                buttonText\n              >\n                Login\n              </Text>\n\n            </Button>\n          </MainBG>\n      </div>\n    )\n  }\n\n  refreshWindow = () => {\n    window.location.reload()\n  }\n\n  render() {\n    const { createNewVehicle, selectedCustomer, customerid } = this.props\n    console.log(this.props);\n    console.log(selectedCustomer);\n    const props = this.props\n    const data = props && props.auth ? props.auth.data : null;\n\n    const createBody = (values, props) => {\n      const history = props.history\n        let dataa = {\n          values: values,\n          props: props\n        }\n        console.log('creating new vehicle.....')\n        createNewVehicle(dataa);\n        console.log(history)\n        history.push(`/new-vehicle/${selectedCustomer.customerid}/confirmation`);\n        setTimeout(this.refreshWindow, 1000);\n    }\n\n    if (data) {\n      return (\n            <div>\n            <MainBG>\n              <StyledBackIcon\n                  onClick={() => this.goBack()}\n              >\n                <SVG src={arrowleftw} />\n              </StyledBackIcon>\n                <MainHeading>\n                  <Text\n                    mainHeading\n                    padding=\"30px 0 50px 0\"\n                  >\n                    Enter The Fields Below\n                  </Text>\n                </MainHeading>\n              <FormContainer\n              >\n                  <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n                    {this.renderFields()}\n                    <Button\n                      standardBtn\n                      margin=\"0 auto\"\n                      marginBottom='50px'\n                      type=\"submit\"\n                    >\n                      <Text\n                        buttonText\n                      >\n                        Submit\n                      </Text>\n                    </Button>\n                  </form>\n              </FormContainer>\n            </MainBG>\n        </div>\n      );\n    } else {\n      return (\n        this.renderNotLoggedIn()\n      )\n    }\n  }\n}\n\nconst validate = (values, props, field) => {\n  const errors = {};\n\n  console.log(props)\n\n  if (!values.cname) {\n    errors.cname = 'You must provide a customer name'\n  }\n\n  if (!values.vyear) {\n    errors.vyear = 'You must provide a vehicle year'\n  }\n\n  if (!values.vmake) {\n    errors.vmake = 'You must provide a vehicle make'\n  }\n\n  if (!values.vmodel) {\n    errors.vmodel = 'You must provide a vehicle model'\n  }\n\n  if (!values.lpnumber) {\n    errors.lpnumber = 'You must provide a license number'\n  }\n\n  if (!values.vnumber) {\n    errors.vnumber = 'You must provide a vin number'\n  }\n\n  if (!values.mileage) {\n    errors.mileage = 'You must provide vehicle mileage'\n  }\n\n  if (!values.pnumber) {\n    errors.pnumber = 'Please confirm phone number by selecting the text field.'\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newVehicleForm'\n})(AddVehicle)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport calendarb from '../../rersources/svg/calendarb.svg';\nimport carb from '../../rersources/svg/carb.svg';\nimport licenseb from '../../rersources/svg/licenseb.svg';\nimport vinb from '../../rersources/svg/vinb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          min-height: 1200px;\n          margin: 0 auto;  \n    }\n\n    @media ${device.laptop} {\n      width: 500px;\n      min-height: 700px;\n      margin: 0 auto;  \n}\n`\n\nconst FIELDS = []\n\nclass AddVehicle extends Component {\n  componentDidMount() {\n    const { selectedCustomer, realCustomers, getRealCustomers } = this.props\n\n    if (!selectedCustomer) {\n        setTimeout(this.getCustomerFromParams, 3000)\n    } else {\n        console.log('There is something')\n        console.log(realCustomers)\n    }\n}\n\nsearch = (id, myArray) => {\n  for (var i=0; i < myArray.length; i++) {\n      if (myArray[i].customerid === id) {\n          return myArray[i];\n      }\n  }\n}\n\ngetCustomerFromParams = () => {\n    const { realCustomers, selectedCustomer, getSelectedCustomer } = this.props\n\n    const {\n        match: { params: { customerid } }\n    } = this.props\n\n    console.log(realCustomers)\n    console.log(this.props)\n    const sc = this.search(customerid, realCustomers);\n    console.log(sc)\n    getSelectedCustomer(sc);\n}\n\n  renderFields = () => {\n    const { selectedCustomer } = this.props\n\n    if (selectedCustomer) {\n      const number = {\n        label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...', noValueError: 'You must provide a phone number', defaultValue: selectedCustomer.phoneNumber1\n      }\n  \n      const number2 = {\n        label: 'Secondary Phone Number', name: 'pnumber2', svg: phoneb, placeholder: 'Enter secondary phone number...',  noValueError: 'You must provide a secondary phone number', defaultValue: selectedCustomer.phoneNumber2\n      }\n  \n      const vYear = {\n        label: 'Vehicle Year', name: 'vyear', svg: calendarb, placeholder: 'Enter vehicle year...', noValueError: 'You must provide a vehicle year'\n      }\n  \n      const vMake = {\n        label: 'Vehicle Make', name: 'vmake', svg: carb, placeholder: 'Enter vehicle make...', noValueError: 'You must provide a vehicle make'\n      }\n  \n      const vModel = {\n        label: 'Vehicle Model', name: 'vmodel', svg: carb, placeholder: 'Enter vehicle model..', noValueError: 'You must provide a vehicle model'\n      }\n  \n      const licenseP = {\n        label: 'License Plate Number', name: 'lpnumber', svg: licenseb, placeholder: 'Enter license plate number...', noValueError: 'You must provide a license plate number'\n      }\n  \n      const vVin = {\n        label: 'Vehicle Vin Number', name: 'vnumber', svg: vinb, placeholder: 'Enter vehicle vin number...', noValueError: 'You must provide a vin number'\n      }\n  \n      const vMileage = {\n        label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter mileage...', noValueError: 'You must provide the mileage'\n      }\n  \n      if (FIELDS.length < 1) {\n        FIELDS.push(number)\n        FIELDS.push(number2)\n        FIELDS.push(vYear)\n        FIELDS.push(vMake)\n        FIELDS.push(vModel)\n        FIELDS.push(licenseP)\n        FIELDS.push(vVin)\n        FIELDS.push(vMileage)\n    }\n  }\n\n    console.log(selectedCustomer)\n\n    if (selectedCustomer) {\n      return FIELDS.map(field => {\n        return(\n          <Field \n            key={field.name}\n            label={field.label} \n            type=\"text\" \n            name={field.name} \n            component={TextField} \n            fieldWidth=\"428px\"\n            containerWidth=\"500px\" \n            placeholder={field.placeholder}\n            value='value'\n            defaultValue={field.defaultValue}\n            svg={field.svg}\n        />\n        )  \n      });\n    } else {\n      return (\n        <div>\n          Loading.......\n        </div>\n      )\n    }\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history, selectedCustomer } = this.props\n    console.log(this.props)\n    console.log(`Here is the selected customer ${selectedCustomer}`);\n    history.go(-1)\n  }\n\n  historyAndReload = () => {\n    const { history } = this.props\n    history.push('/login');\n    window.location.reload()\n  }\n\n  renderNotLoggedIn = () => {\n    return (\n      <div>\n          <MainBG>\n              <Text\n                white35\n                padding='100px 0 50px 0'\n                maxWidth='600px'\n                margin='0 auto'\n              >\n                You are not logged in. Please click the button below to return to the login screen.\n              </Text>\n            <Button\n              standardBtn\n              margin='0 auto'\n              onClick={this.historyAndReload}\n            >\n              <Text\n                buttonText\n              >\n                Login\n              </Text>\n\n            </Button>\n          </MainBG>\n      </div>\n    )\n  }\n\n  refreshWindow = () => {\n    window.location.reload()\n  }\n\n  render() {\n    const { createNewVehicle, selectedCustomer, customerid } = this.props\n    console.log(this.props);\n    console.log(selectedCustomer);\n    const props = this.props\n    const data = props && props.auth ? props.auth.data : null;\n\n    const createBody = (values, props) => {\n      const history = props.history\n        let dataa = {\n          values: values,\n          props: props\n        }\n        console.log('creating new vehicle.....')\n        createNewVehicle(dataa);\n        console.log(history)\n        history.push(`/new-vehicle/${selectedCustomer.customerid}/confirmation`);\n        setTimeout(this.refreshWindow, 1000);\n    }\n\n    if (data) {\n      return (\n            <div>\n            <MainBG>\n              <StyledBackIcon\n                  onClick={() => this.goBack()}\n              >\n                <SVG src={arrowleftw} />\n              </StyledBackIcon>\n                <MainHeading>\n                  <Text\n                    mainHeading\n                    padding=\"30px 0 50px 0\"\n                  >\n                    Enter The Fields Below\n                  </Text>\n                </MainHeading>\n              <FormContainer\n              >\n                  <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n                    {this.renderFields()}\n                    <Button\n                      standardBtn\n                      margin=\"0 auto\"\n                      marginBottom='50px'\n                      type=\"submit\"\n                    >\n                      <Text\n                        buttonText\n                      >\n                        Submit\n                      </Text>\n                    </Button>\n                  </form>\n              </FormContainer>\n            </MainBG>\n        </div>\n      );\n    } else {\n      return (\n        this.renderNotLoggedIn()\n      )\n    }\n  }\n}\n\nconst validate = (values, props, field) => {\n  const errors = {};\n\n  if (!values.cname) {\n    errors.cname = 'You must provide a customer name'\n  }\n\n  if (!values.vyear) {\n    errors.vyear = 'You must provide a vehicle year'\n  }\n\n  if (!values.vmake) {\n    errors.vmake = 'You must provide a vehicle make'\n  }\n\n  if (!values.vmodel) {\n    errors.vmodel = 'You must provide a vehicle model'\n  }\n\n  if (!values.lpnumber) {\n    errors.lpnumber = 'You must provide a license number'\n  }\n\n  if (!values.vnumber) {\n    errors.vnumber = 'You must provide a vin number'\n  }\n\n  if (!values.mileage) {\n    errors.mileage = 'You must provide vehicle mileage'\n  }\n\n  if (!values.pnumber) {\n    errors.pnumber = 'Please confirm phone number by selecting the text field.'\n  }\n\n  if (props.selectedCustomer.phoneNumber2) {\n    if (!values.pnumber2) {\n      errors.pnumber2 = 'Please confirm second phone number by selecting the text field.'\n    }\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newVehicleForm'\n})(AddVehicle)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewUser } from '../../store/actions/customer';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport Colors from '../constants/colors';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport { MainBG, NewDiv } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport logoSvg from '../../rersources/logoSvg.svg';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst LogoContainer = styled(NewDiv)`\n  @media ${device.tablet} {\n    padding: 100px 0 56px 0;\n\n    img {\n      height: 128px;\n      width: 180px;\n      margin: 0 auto;\n    }\n  } \n`\n\nconst RegisterContainer = styled(NewDiv)`\n  @media ${device.tablet} {\n    width: 418px;\n    height: 700px;\n    margin: 0 auto;\n  } \n\n`\n\nconst ImageUploadInput = styled.input`\n  width: 200px;\n  height: 25px;\n  float: left;\n  margin-bottom: 48px;\n`\n\n\nconst FIELDS = [\n  {\n    label: 'Email', name: 'email', svg: userb, placeholder: 'Enter Email....', noValueError: 'You must provide a email address'\n  },\n  {\n    label: 'Password', name: 'password', svg: lockb, placeholder: 'Enter Password....', noValueError: 'You must provide a password'\n  },\n  {\n    label: 'Confirm Password', name: 'password2', svg: lockb, placeholder: 'Confirm Password....', noValueError: 'Please confirm your password'\n  },\n  {\n    label: 'Company Name', name: 'companyName', svg: lockb, placeholder: 'Enter Company Name....', noValueError: 'Please enter a name for your company'\n  },\n  {\n    label: 'Company Image', name: 'companyImage', svg: userb, placeholder: 'Enter Link To Company Image....', noValueError: 'No image link provided'\n  }\n]\n\nclass RegisterUser extends Component {\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          placeholder={field.placeholder}\n          type=\"text\" \n          name={field.name} \n          component={TextField}\n          fieldWidth=\"345px\"\n          containerWidth=\"417px\" \n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  handleNewUser = (values) => {\n    const { createNewUser, history } = this.props\n    createNewUser(values);\n  //  history.push('/login')\n  }\n\n  render() {\n    const { createNewUser } = this.props\n    return (\n      <div>\n          <MainBG>\n            <RegisterContainer\n            >\n              <LogoContainer\n              >\n                  <img src = { logoSvg } />\n                </LogoContainer>\n                <form onSubmit={this.props.handleSubmit(values => this.handleNewUser(values))}>\n                  {this.renderFields()}\n                  <Button\n                    width=\"416px\"\n                    height=\"50px\"\n                    backgroundColor={Colors.darkBlue}\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Sign Up\n                    </Text>\n                  </Button>\n                </form>\n            </RegisterContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n    console.log(values);\n     if (values.password != values.password2) {\n         errors.password2 = 'Passwords do not match'\n    };\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newUserForm'\n})(RegisterUser)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewUser } from '../../store/actions/customer';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport { MainBG, NewDiv } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport logoSvg from '../../rersources/logoSvg.svg';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport colors from '../constants/colors';\n\nconst LogoContainer = styled(NewDiv)`\n  @media ${device.tablet} {\n    padding: 200px 0 56px 0;\n\n    img {\n      height: 128px;\n      width: 180px;\n      margin: 0 auto;\n    }\n  } \n`\n\nconst LoginContainer = styled(NewDiv)`\n  @media ${device.tablet} {\n    width: 418px;\n    height: 700px;\n    margin: 0 auto;\n  } \n\n`\n\nconst FIELDS = [\n  {\n    label: 'Email', name: 'email', placeholder: 'Enter Email....', svg: userb, noValueError: 'You must provide a email address'\n  },\n  {\n    label: 'Password', name: 'password', placeholder: 'Enter Password....', svg: lockb, noValueError: 'You must provide a password'\n  }\n]\n\nclass LoginUser extends Component {\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          type=\"text\" \n          name={field.name} \n          placeholder={field.placeholder}\n          component={TextField} \n      />\n      )  \n    });\n  }\n\n  handleLoginSubmit = (values) => {\n    const { userLogin, history } = this.props\n    userLogin(values);\n   // window.location.reload()\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  render() {\n    const { userLogin, logoutUser } = this.props\n    return (\n      <div>\n          <MainBG>\n            <LoginContainer\n            >\n              <LogoContainer\n              >\n                  <img src = { logoSvg } />\n                </LogoContainer>\n                <form onSubmit={this.props.handleSubmit(values => this.handleLoginSubmit(values))}>\n                  {this.renderFields()}\n                  <Button\n                    width=\"416px\"\n                    height=\"50px\"\n                    backgroundColor={colors.darkBlue}\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Sign In\n                    </Text>\n                  </Button>\n                </form>\n            </LoginContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n    console.log(values);\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'userLoginForm'\n})(LoginUser)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport numberb from '../../rersources/svg/numberb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst DetailsTextarea = styled.textarea`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 10px;\n    padding: 0;\n    padding-left: 10px;\n    padding-top: 10px;\n    font-size: 16px;\n\n  @media ${device.tablet} {\n    width: 500px;\n    height: 250px;\n    margin: 0 auto;\n    margin-bottom: 50px;  \n  }\n`\n\nclass EndService extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      currentDetailsText: ''\n    }\n    this.updateTextarea = this.updateTextarea.bind(this)\n  }\n\n  componentDidMount() {\n      const { selectedServiceMessage } = this.props\n      this.setState({ currentDetailsText: selectedServiceMessage.details })\n  }\n\n  renderFields = () => {\n    const { selectedCustomer, selectedServiceMessage } = this.props\n\n    const FIELDS = [\n        {\n          label: 'Name', name: 'name', svg: userb, placeholder: 'Enter name...', noValueError: 'You must provide a name', defaultValue: selectedServiceMessage.customerName\n        },\n        {\n          label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter vehicle mileage...', noValueError: 'You must provide a value for mileage', defaultValue: selectedServiceMessage.mileage\n        },\n        {\n          label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...',  noValueError: 'You must provide a phone number', defaultValue: selectedServiceMessage.phoneNumber\n        },\n        {\n          label: 'Reason For Visit', name: 'reason', svg: pencilb, placeholder: 'Enter reason...', noValueError: 'You must provide a reason for visit', defaultValue: selectedServiceMessage.reason\n        },\n        {\n          label: 'Tag Number', name: 'tnumber', svg: numberb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number', defaultValue: selectedServiceMessage.tagNumber\n        }\n      ]\n\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          type=\"text\" \n          name={field.name} \n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n          placeholder={field.placeholder}\n          defaultValue={field.defaultValue}\n          value=\"value\"\n          svg={field.svg}\n      />\n      )  \n    });\n  }\n\n  renderDetailsField = () => {\n    console.log('Here is the details textarea....')\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  updateTextarea = (e) => {\n    const newDetailsText = e.target.value\n    this.setState({ currentDetailsText: newDetailsText});\n    console.log(this.state.currentDetailsText)\n  }\n\n  refreshWindow = () => {\n    window.location.reload()\n  }\n\n  render() {\n    const { selectedCustomer, selectedVehicle, selectedServiceText, selectedServiceMessage, updateService } = this.props\n    const props = this.props\n    const currentDetailsText = this.state.currentDetailsText\n\n    console.log(selectedServiceMessage)\n\n    const createBody = (values, props) => {\n      const history = this.props.history;\n        let dataa = {\n          values: values,\n          props: props,\n          detailsText: currentDetailsText\n        }\n\n        var myJSON = JSON.stringify(dataa)\n\n        console.log(`Here is the data ${myJSON}`)\n        updateService(dataa);\n        history.push('/customers/chat/service')\n        setTimeout(this.refreshWindow, 1000)\n    }\n\n    return (\n      <div>\n      <MainBG>\n          <MainHeading>\n            <Text\n              mainHeading\n              padding=\"30px 0 50px 0\"\n            >\n              Confirm Information Below\n            </Text>\n          </MainHeading>\n        <FormContainer\n        >\n            <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n              {this.renderFields()}\n              <DetailsTextarea \n                value={this.state.currentDetailsText}\n                onChange={this.updateTextarea}\n                placeholder='Enter Details...'\n              />\n              <Button\n                standardBtn\n                margin=\"0 auto\"\n                marginBottom='50px'\n                type=\"submit\"\n              >\n                <Text\n                  buttonText\n                >\n                  Submit\n                </Text>\n              </Button>\n            </form>\n        </FormContainer>\n      </MainBG>\n  </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.mileage) {\n    errors.mileage = 'Please confirm mileage by selecting the text field.'\n  }\n\n  return errors\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newServiceForm'\n})(EndService)","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors';\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport plusw from '../../../rersources/svg/plusw.svg';\nimport pointw from '../../../rersources/svg/pointw.svg';\nimport phonebookw from '../../../rersources/svg/phonebookw.svg';\nimport settingsw from '../../../rersources/svg/settingsw.svg';\nimport returnw from '../../../rersources/svg/returnw.svg';\nimport barsw from '../../../rersources/svg/barsw.svg';\nimport { NewDiv } from '../Styled/StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\n\nexport const MainNavContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        background-color: ${Colors.black};\n        width: 100%;\n        opacity: .8;\n        z-index: 90;\n        display: ${({ display }) => (display || 'none')};\n        position: fixed;\n        top: 0;\n        bottom: 0;\n    }\n`\n\nexport const HeaderContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        background-color: ${Colors.lightBlue};\n        float: left;\n        position: fixed;\n        height: 100vh;\n        z-index: 100;\n        display: ${({ display }) => (display || 'none')};\n        border-bottom-right-radius: 20px;\n        border-top-right-radius: 20px;\n    } \n`\n\nexport const HeaderTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        height: 207px;\n        padding-top: 15px;\n        background-color: ${Colors.fullWhite};\n        border-top-right-radius: 20px;\n    } \n`\n\nexport const HeaderTopImg = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100px;\n        height: 100px;\n        border-radius: 50px;\n        margin: 0 auto;\n        background-image: ${({ bgImg }) => (`url(${bgImg})` || 'none')};\n        background-position: center;\n\t    background-size: cover;\n    }\n`\n\nexport const HeaderTopText = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 92%;\n        margin: 0 auto;\n        margin-top: 15px;\n    }\n`\n\nexport const HeaderLIContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        height: 70px;\n        width: 100%\n        border-bottom: 1px solid white;\n        background: ${Colors.lightBlue};\n    }\n`\n\nexport const LILeft = styled(NewDiv)`\n    @media ${device.tablet} {\n        float: left;\n        width: 80px;\n        height: 70px;\n    }\n`\n\nexport const LIRight = styled(NewDiv)`\n    @media ${device.tablet} {\n        float: right;\n        width: 243px;\n        height: 70px;\n        text-align: left;\n        line-height: 70px;\n    }\n`\n\nexport const NavLIIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding-top: 20px;\n        width: 30px;\n        height: 30px;\n        margin: 0 auto;\n\n       svg {\n           width: 30px;\n           height: 30px;\n       } \n    }\n`\n\nexport const NavToggleIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        height: 50px;\n        width: 50px;\n        position: fixed;\n        bottom: 35px;\n        left: 25px;\n        display: ${({ display }) => (display || 'block')};\n        z-index: 999;\n\n        svg {\n            height: 50px;\n            width: 50px;\n        }\n    }\n`\n\nclass StyledNavBar extends Component  {\n    componentDidMount() {\n        const data = this.props && this.props.auth ? this.props.auth.data: null\n        const { toggleNavIconDisplay } = this.props\n        console.log(this.props);\n\n        setTimeout(this.navIconCheck, 1000)\n    }\n\n    navIconCheck = () => {\n        const data = this.props && this.props.auth ? this.props.auth.data: null\n        const { toggleNavIconDisplay } = this.props\n        if (!data || data === '') {\n            toggleNavIconDisplay('none')\n            console.log('toggle done')\n        } else {\n            toggleNavIconDisplay('block');\n        }\n    }\n\n    handleLogout = () => {\n        const { logoutUser, history } = this.props\n        console.log('Handling logout....')\n        logoutUser();\n        history.push('/')\n        const reload = () => {\n            window.location.reload()\n        }\n        setTimeout(reload, 2000)\n    }\n\n    render() {\n        const { renderContent, toggleNavBar, toggleNavToggle, fetchUser, showNavBar, showNavToggle, auth, navIconDisplay } = this.props\n        const data = this.props && this.props.auth ? this.props.auth.data: null\n        var companyName;\n        var companyImg;\n        if (data) {\n            companyName = data.companyName\n            companyImg = data.image\n        } else {\n            companyName = 'No Company Name'\n            companyImg = 'none'\n        }\n        const toggleNav = () => {\n            if (showNavBar === 'block') {\n                toggleNavBar('none');\n                toggleNavToggle(barsw);\n            } else {\n                toggleNavBar('block');\n                toggleNavToggle(returnw);\n            }\n        }\n\n        return (\n          <div>\n              <MainNavContainer \n                display={showNavBar}\n              />\n            <HeaderContainer\n                display={showNavBar}\n            >\n                <HeaderTop>\n                      <HeaderTopImg \n                        bgImg={companyImg}\n                      />\n                      <HeaderTopText>\n                          <Text\n                            lblue22\n                            padding=\"10px 0 0 0\"\n                            maxWidth=\"300px\"\n                          >\n                              {companyName}\n                          </Text>\n                          <Text\n                            gray30\n                            padding=\"10px 0 0 0\"\n                          >\n                              Welcome\n                          </Text>\n                      </HeaderTopText>\n                </HeaderTop>\n                <Link to ='/new-customer'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={plusw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              New Customer\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/customers/chat/service'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={pointw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              Current Vehicles\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/all-customers'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={phonebookw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              All Customers\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                  <HeaderLIContainer\n                    onClick={this.handleLogout}\n                  >\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={settingsw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              {renderContent()}\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n            </HeaderContainer>\n             <NavToggleIcon\n                onClick={toggleNav}\n                display={navIconDisplay}\n           >\n               <SVG src={showNavToggle} />\n           </NavToggleIcon>\n           </div>\n          )\n    }\n   \n  }\n\n  export default withRouter(StyledNavBar);\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\n\nclass CustomerService extends Component {\n\n  componentDidMount() {\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    openServiceCustomer = () => {\n        const { history } = this.props\n        history.push(`/new-vehicle`);\n    }\n\n  render() {\n    const realCustomers = this.props.state.realCustomers\n    const selectedCustomer = this.props.selectedCustomer\n\n    console.log(realCustomers.length)\n    console.log(selectedCustomer);\n    console.log(this.props);\n\n    if (realCustomers.length >= 1) {\n        return (\n            <div>\n              <h2>Customer Service</h2>\n              <Button onClick={() => this.openServiceCustomer()}>\n                  Add Vehicle\n              </Button>\n            </div>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerService));","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Provider } from 'react-redux'\nimport logo from './logo.svg'\nimport mainLogo from './rersources/mainLogo.png';\nimport './App.css';\nimport store from './store';\nimport history from './history';\nimport Customers from './components/Customer/customers';\nimport ChatMessenger from './components/Customer/ChatMessenger';\nimport LandingPage from './components/Customer/LandingPage';\nimport AllCustomers from './components/Customer/AllCustomers';\nimport CustomerInfo from './components/Customer/CustomerInfo';\nimport VehicleInfo from './components/Customer/VehicleInfo';\nimport ServiceInfo from './components/Customer/ServiceInfo';\nimport CustomerConfirmation from './components/Customer/CustomerConfirmation';\nimport VehicleConfirmation from './components/Customer/VehicleConfirmation';\nimport UserLogin from './components/Customer/userLogin';\nimport AddCustomer from './components/Customer/AddCustomer';\nimport AddService from './components/Customer/AddService';\nimport AddService2 from './components/Customer/AddService2';\nimport AddVehicle from './components/Customer/AddVehicle';\nimport AddVehicle2 from './components/Customer/AddVehicle2';\nimport RegisterUser from './components/Customer/RegisterUser';\nimport LoginUser from './components/Customer/LoginUser';\nimport EndService from './components/Customer/EndService';\nimport StyledNavBar from './components/Customer/Styled/StyledNavBar';\nimport CustomerService from './components/Customer/CustomerService';\nimport { connect } from 'react-redux';\n\nimport { createNewCustomer, createNewUser, createNewVehicle, userLogin, logoutUser, fetchUser, getRealCustomers, getCustomerVehicles, createNewService, getCustomerServices, createNewToMessage, getCustomerActiveToMessages, updateService } from './store/actions/customer';\nimport { toggleNavBar, toggleNavToggle, toggleNavIconDisplay, getSelectedCustomer, getSelectedVehicle, getCurrentEmailId } from './store/reducers/environment';\n\nimport styled from 'styled-components';\n\nimport { BrowserRouter as Router, Route, Link, withRouter, Switch } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\n\nconst Code = () => {\n  return (\n    <div>\n      Code Code Code\n    </div>\n  )\n}\n\nclass App extends Component {\n\n  componentDidMount() {\n    const { fetchUser, getRealCustomers, getCustomerVehicles, getCustomerServices, getCustomerActiveToMessages } = this.props;\n    getRealCustomers();\n    getCustomerVehicles();\n    getCustomerServices();\n    fetchUser();\n    getCustomerActiveToMessages();\n  }\n\n  renderContent = () => {\n    const props = this.props\n    const auth = this.props.auth\n    const data = props && props.auth ? props.auth.data : null;\n    switch (data) {\n      case null:\n        return 'Still deciding';\n      case false:\n        return 'Login';\n      case '':\n        return 'Login';\n      default:\n        return 'Logout';\n    }\n  }\n\n  renderCorrectPage2 = () => {\n    const props = this.props\n    const auth = this.props.auth\n    const data = props && props.auth ? props.auth.data: null\n\n    const userLogin = this.props.userLogin;\n    const logoutUser = this.props.logoutUser;\n    const getSelectedCustomer = this.props.getSelectedCustomer;\n    const environment = this.props.environment;\n\n    switch (data) {\n      case null:\n        console.log('null');\n        return (\n          <LoginUser\n           userLogin={userLogin}\n            logoutUser={logoutUser}\n          />\n        )\n      case false:\n          console.log('false');\n          return (\n            <LoginUser\n              userLogin={userLogin}\n              logoutUser={logoutUser}\n              history={history}\n           />\n        )\n      case '':\n          console.log('empty');\n          return (\n            <LoginUser\n              userLogin={userLogin}\n              logoutUser={logoutUser}\n              history={history}\n           />\n        )\n      default:\n          console.log('default');\n        return (\n            <AllCustomers\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              history={history}\n             />\n        )\n\n    }\n  }\n\n  renderCorrectPage = () => {\n    const props = this.props\n    const auth = this.props.auth\n    const data = props && props.auth ? props.auth.data: null\n\n    const userLogin = this.props.userLogin;\n    const logoutUser = this.props.logoutUser;\n    const getSelectedCustomer = this.props.getSelectedCustomer;\n    const environment = this.props.environment;\n\n    switch (data) {\n      case null:\n        console.log('null');\n        return (\n          <LandingPage\n            history={history}\n          />\n        )\n      case false:\n          console.log('false');\n          return (\n            <LandingPage\n              history={history}\n           />\n        )\n      case '':\n          console.log('empty');\n          return (\n            <LandingPage\n              history={history}\n           />\n        )\n      default:\n          console.log('default');\n        return (\n            <AllCustomers\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              history={history}\n             />\n        )\n\n    }\n  }\n\n\n  render () {\n    const createNewCustomer = this.props.createNewCustomer;\n    const createNewUser = this.props.createNewUser;\n    const createNewVehicle = this.props.createNewVehicle;\n    const createNewService = this.props.createNewService;\n    const updateService = this.props.updateService;\n    const createNewToMessage = this.props.createNewToMessage;\n    const userLogin = this.props.userLogin;\n    const logoutUser = this.props.logoutUser;\n    const toggleNavBar = this.props.toggleNavBar;\n    const toggleNavToggle = this.props.toggleNavToggle;\n    const toggleNavIconDisplay = this.props.toggleNavIconDisplay;\n    const getSelectedCustomer = this.props.getSelectedCustomer;\n    const getSelectedVehicle = this.props.getSelectedVehicle;\n    const getRealCustomers = this.props.getRealCustomers;\n    const getCurrentEmailId = this.props.getCurrentEmailId\n    const environment = this.props.environment;\n    const realCustomers = this.props.state.realCustomers;\n    const customerVehicles = this.props.state.customerVehicles;\n    const customerServices = this.props.state.customerServices;\n    const activeToMessages = this.props.state.activeToMessages;\n    const auth = this.props.auth;\n;\n    console.log(this.props);\n    console.log(this.props.environment);\n    console.log(realCustomers);\n    console.log(customerVehicles);\n    console.log(customerServices);\n    console.log(activeToMessages)\n\n    return (\n          <div className=\"App\">\n            <StyledNavBar\n              renderContent={this.renderContent} \n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              fetchUser={fetchUser}\n              showNavBar={environment.showNavBar}\n              showNavToggle={environment.showNavToggle}\n              navIconDisplay={environment.navIconDisplay}\n              toggleNavIconDisplay={toggleNavIconDisplay}\n              logoutUser={logoutUser}\n              history={history}\n              auth={auth}\n            />\n            <Switch>\n            <Route exact path=\"/\" \n            render={(props) => \n            <div>\n                {this.renderCorrectPage()}\n              </div>\n                }\n             />\n            <Route exact path=\"/login\" \n            render={(props) => <div>\n              {this.renderCorrectPage2()}\n            </div> }\n            history={history}\n             />\n             <Route exact path=\"/landing\" \n            render={(props) => <LandingPage\n            history={history}\n             />  }\n             />\n            <Route exact path=\"/register\" \n            render={(props) => <RegisterUser\n            createNewUser={createNewUser}\n            history={history}\n             />  }\n             />\n            <Route exact path=\"/new-customer\" \n            render={(props) => <AddCustomer\n            createNewCustomer={createNewCustomer}\n            toggleNavBar={toggleNavBar}\n            toggleNavToggle={toggleNavToggle}\n            showNavBar={environment.showNavBar}\n            history={history}\n            realCustomers={realCustomers}\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            getCurrentEmailId={getCurrentEmailId}\n            auth={auth}\n            \n             />  }\n             />\n             <Route exact path=\"/new-vehicle/:customerid\" \n            render={(props) => <AddVehicle\n            {...props}\n            createNewVehicle={createNewVehicle}\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            getRealCustomers={getRealCustomers}\n            realCustomers={realCustomers}\n            auth={auth}\n            history={history}\n\n             />  }\n             />\n            <Route exact path=\"/new-vehicle2/:customerid\" \n            render={(props) => <AddVehicle2\n            {...props}\n            createNewVehicle={createNewVehicle}\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            getRealCustomers={getRealCustomers}\n            realCustomers={realCustomers}\n            auth={auth}\n            history={history}\n\n             />  }\n             />\n             <Route exact path=\"/new-service\" \n            render={(props) => <AddService\n            createNewService={createNewService}\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            customerVehicles={customerVehicles}\n            getSelectedVehicle={getSelectedVehicle}\n            getSelectedCustomer={getSelectedCustomer}\n            auth={auth}\n            history={history}\n\n             />  }\n             />\n             <Route exact path=\"/end-service\" \n            render={(props) => <EndService\n            selectedServiceMessage={environment.selectedServiceMessage}\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            updateService={updateService}\n            auth={auth}\n            history={history}\n\n             />  }\n             />\n             <Route exact path=\"/new-customer/confirmation\" \n            render={(props) => <CustomerConfirmation\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            realCustomers={realCustomers}\n            auth={auth}\n            history={history}\n\n             />  }\n             />\n\n            <Route exact path=\"/new-vehicle/:customerid/confirmation\" \n            render={(props) => <VehicleConfirmation\n            {...props}\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            getSelectedCustomer={getSelectedCustomer}\n            realCustomers={realCustomers}\n            customerVehicles={customerVehicles}\n            getSelectedVehicle={getSelectedVehicle}\n            auth={auth}\n            history={history}\n\n             />  }\n             />\n\n            <Route exact path=\"/all-customers\" \n            render={(props) => <AllCustomers\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              history={history}\n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              showNavBar={environment.showNavBar}\n              auth={auth}\n\n             />  }\n             />\n             <Route exact path=\"/customers/:customerid\" \n              render={(props) => <CustomerInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n              auth={auth}\n\n             />  }\n             />\n             <Route exact path=\"/customers/vehicles/:customerid/:vehicleid\" \n              render={(props) => <VehicleInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n              customerServices={customerServices}\n              auth={auth}\n\n             />  }\n             />\n             <Route exact path=\"/customers/vehicles/:customerid/:vehicleid/:serviceid\" \n              render={(props) => <ServiceInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n              customerServices={customerServices}\n              selectedService={environment.selectedService}\n              auth={auth}\n\n             />  }\n             />\n             <Route exact path=\"/customers/service/:customerid/:vehicleid\" \n              render={(props) => <AddService\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              selectedVehicle={environment.selectedVehicle}\n              customerVehicles={customerVehicles}\n              getSelectedVehicle={getSelectedVehicle}\n              realCustomers={realCustomers}\n              history={history}\n              createNewService={createNewService}\n              auth={auth}\n    \n             />  }\n             />\n\n            <Route exact path=\"/customers/service2/:customerid/:vehicleid\" \n              render={(props) => <AddService2\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              selectedVehicle={environment.selectedVehicle}\n              customerVehicles={customerVehicles}\n              getSelectedVehicle={getSelectedVehicle}\n              realCustomers={realCustomers}\n              history={history}\n              createNewService={createNewService}\n              auth={auth}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/chat/service\" \n              render={(props) => <ChatMessenger\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              selectedVehicle={environment.selectedVehicle}\n              realCustomers={realCustomers}\n              history={history}\n              customerServices={customerServices}\n              createNewToMessage={createNewToMessage}\n              activeToMessages={activeToMessages}\n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              showNavBar={environment.showNavBar}\n              auth={auth}\n\n             />  }\n             />\n            <Route exact path=\"/settings\" component={Code} />\n            <Route exact path=\"/logout\" component={Code} logoutUser={logoutUser} />\n            </Switch>\n          </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { \n        auth: state.auth,\n        environment: state.environment,\n        state: state\n      }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createNewCustomer: (values) => dispatch(createNewCustomer(values)),\n    createNewUser: (values) => dispatch(createNewUser(values)),\n    createNewVehicle: (values) => dispatch(createNewVehicle(values)),\n    createNewService: (values) => dispatch(createNewService(values)),\n    updateService: (values) => dispatch(updateService(values)),\n    createNewToMessage: (value) => dispatch(createNewToMessage(value)),\n    userLogin: (values) => dispatch(userLogin(values)),\n    logoutUser: (values) => dispatch(logoutUser(values)),\n    fetchUser: (values) => dispatch(fetchUser(values)),\n    toggleNavBar: (display) => dispatch(toggleNavBar(display)),\n    toggleNavToggle: (display) => dispatch(toggleNavToggle(display)),\n    toggleNavIconDisplay: (display) => dispatch(toggleNavIconDisplay(display)),\n    getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n    getSelectedVehicle: (vehicle) => dispatch(getSelectedVehicle(vehicle)),\n    getCurrentEmailId: (email) => dispatch(getCurrentEmailId(email)),\n    getRealCustomers: () => dispatch(getRealCustomers()),\n    getCustomerVehicles: () => dispatch(getCustomerVehicles()),\n    getCustomerServices: () => dispatch(getCustomerServices()),\n    getCustomerActiveToMessages: () => dispatch(getCustomerActiveToMessages())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport history from './history';\n\nimport { Provider } from 'react-redux';\n//import reducers from './reducers';\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter\n            history={history}\n        >\n            <App \n                history={history}\n            />\n        </BrowserRouter>\n    </Provider>, \n    document.querySelector('#root')\n);\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/barsw.03d3330b.svg\";","module.exports = __webpack_public_path__ + \"static/media/mileageb.096767ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/mainLogo.546207c0.png\";","module.exports = __webpack_public_path__ + \"static/media/userw.60f972be.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencilb.fc4dabf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/phonew.1d986067.svg\";","module.exports = __webpack_public_path__ + \"static/media/logoSvg.bb047f66.svg\";","module.exports = __webpack_public_path__ + \"static/media/numberb.10d41aa2.svg\";","module.exports = __webpack_public_path__ + \"static/media/carb.3154024e.svg\";","module.exports = __webpack_public_path__ + \"static/media/carw.8e8e5ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/closer.e4f6d492.svg\";","module.exports = __webpack_public_path__ + \"static/media/mileagew.f795afec.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendarw.702919de.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkw.ed1b0bd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendarb.a503a49e.svg\";","module.exports = __webpack_public_path__ + \"static/media/licenseb.7c356553.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinb.036b5b43.svg\";","module.exports = __webpack_public_path__ + \"static/media/mailw.1bafb9c5.svg\";"],"sourceRoot":""}