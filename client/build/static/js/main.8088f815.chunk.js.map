{"version":3,"sources":["rersources/svg/carb.svg","rersources/svg/historyw.svg","rersources/svg/templatey.svg","rersources/svg/senddb.svg","rersources/svg/servicew.svg","rersources/svg/vinw.svg","rersources/svg/licensew.svg","rersources/svg/detailsw.svg","rersources/svg/pencilw.svg","rersources/svg/emailb.svg","rersources/svg/calendarb.svg","rersources/svg/licenseb.svg","rersources/svg/userb.svg","rersources/svg/vinb.svg","rersources/svg/plusw.svg","rersources/svg/pointw.svg","rersources/svg/phonebookw.svg","rersources/svg/settingsw.svg","rersources/svg/returnw.svg","logo.svg","rersources/svg/lockb.svg","rersources/svg/arrowleftw.svg","store/reducers/customer.js","store/actions/constants.js","store/reducers/environment.js","store/reducers/realCustomer.js","store/reducers/customerVehicle.js","store/reducers/customerService.js","store/reducers/customerToMessage.js","store/reducers/index.js","store/reducers/auth.js","store/index.js","history.js","store/actions/customer.js","components/Customer/customers.js","components/Customer/Styled/StyledMediaQuery.jsx","components/constants/colors.js","components/Customer/Styled/StyledComponents.jsx","components/Customer/Styled/Button.jsx","components/Customer/Styled/Text.jsx","components/Customer/Styled/StyledOverlayTemplate.jsx","components/Customer/Styled/StyledOverlayEndService.jsx","components/Customer/CustomerCellRow.js","components/Customer/Styled/StyledBackIcon.jsx","components/Customer/ChatMessenger.js","components/Customer/AllCustomers.js","components/Customer/CustomerInfo.js","components/Customer/VehicleInfo.js","components/Customer/ServiceInfo.js","components/Customer/CustomerConfirmation.js","components/Customer/VehicleConfirmation.js","components/Customer/userLogin.js","components/Customer/TextField.js","components/Customer/AddCustomer.js","components/Customer/AddService.js","components/Customer/AddVehicle.js","components/Customer/RegisterUser.js","components/Customer/LoginUser.js","components/Customer/EndService.js","components/Customer/Styled/StyledNavBar.jsx","components/Customer/CustomerService.js","App.js","registerServiceWorker.js","index.js","rersources/svg/barsw.svg","rersources/svg/phoneb.svg","rersources/mainLogo.png","rersources/svg/userw.svg","rersources/svg/phonew.svg","rersources/svg/mileageb.svg","rersources/svg/pencilb.svg","rersources/svg/carw.svg","rersources/svg/closer.svg","rersources/svg/mileagew.svg","rersources/svg/calendarw.svg","rersources/svg/checkw.svg","rersources/svg/numberb.svg","rersources/svg/mailw.svg"],"names":["module","exports","__webpack_require__","p","customerReducer","state","arguments","length","undefined","_ref","type","payload","initialState","showNavBar","showNavToggle","barsw","selectedCustomer","selectedVehicle","selectedService","selectedServiceMesssage","selectedMessageText","showTemplateOverlay","showEndServiceOverlay","currentEmailId","search","currentFilter","getSelectedCustomer","customer","GET_SELECTED_CUSTOMER","getSelectedService","service","GET_SELECTED_SERVICE","updateCustomerSearch","UPDATE_CUSTOMER_SEARCH","getCurrentFilter","filter","GET_CURRENT_FILTER","TOGGLE_NAV_BAR","TOGGLE_NAV_TOGGLE","GET_SELECTED_VEHICLE","GET_SELECTED_SERVICE_MESSAGE","GET_SELECTED_MESSAGE_TEXT","TOGGLE_TEMPLATE_OVERLAY","TOGGLE_END_SERVICE_OVERLAY","GET_CURRENT_EMAIL_ID","customerRealReducer","customerVehicleReducer","customerServiceReducer","customerActiveToMessageReducer","combineReducers","environment","action","Object","objectSpread","display","vehicle","selectedServiceMessage","sm","text","status","email","customers","activeToMessages","realCustomers","customerVehicles","customerServices","activeServices","customerActiveServiceReducer","auth","form","reduxForm","middleware","thunk","withDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","apply","createBrowserHistory","getRealCustomers","dispatch","fetch","then","res","json","getCustomerActiveToMessages","userLogin","values","_ref7","asyncToGenerator","regenerator_default","a","mark","_callee7","wrap","_context7","prev","next","setTimeout","location","reload","axios","post","sent","console","log","data","stop","_x7","this","fetchUser","_ref8","_callee8","_context8","get","_x8","Customers","props","getCustomers","react_default","createElement","map","key","id","firstName","lastName","Component","defaultProps","connect","size","device","mobileS","concat","mobileM","mobileL","tablet","tabletL","laptop","laptopL","desktop","desktopL","colors","fullWhite","lightGray","lighterGray","lightBlue","darkBlue","black","brightRed","NewDiv","styled","div","_templateObject","width","_ref2","height","_ref3","margin","_ref4","padding","_ref5","border","_ref6","borderRadius","textAlign","zIndex","_ref9","float","_ref10","_ref11","background","MainBG","_templateObject2","MainHeading","_templateObject3","Button","button","Button_templateObject","color","Colors","backgroundColor","is","Button_templateObject2","Button_templateObject3","_templateObject4","_templateObject5","_templateObject6","Text","Text_templateObject","fontSize","lineHeight","maxWidth","fontWeight","fontStyle","fontFamily","Text_templateObject2","Text_templateObject3","Text_templateObject4","Text_templateObject5","Text_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","propTypes","PropTypes","string","largeText","bool","subtext","subtitle","error","gray","pointer","underline","inline","StyledOverlayContainer","StyledOverlayTemplate_templateObject","StyledOverlayContentBox","StyledOverlayTemplate_templateObject2","OverlayContentContainer","StyledOverlayTemplate_templateObject3","CustomerInputMessage","input","StyledOverlayTemplate_templateObject4","CustomerInputMessageLarge","textarea","StyledOverlayTemplate_templateObject5","TemplateNavContainer","StyledOverlayTemplate_templateObject6","CloseTemplateOverlay","StyledOverlayTemplate_templateObject7","StyledOverlayTemplate","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleNew","e","value","preventDefault","template1","text1","customerName","text2","newText","customText","onSubmit","assertThisInitialized","Styled_Text","white20","onChange","handleChange","bind","name","Styled_Button","standardBtn","onClick","_this$props","getSelectedMessageText","toggleTemplateOverlay","template2","_this$props2","template3","_this$props3","template4","_this$props4","closeTemplateOverlayFunc","forwardTemplate","messageTemplates","templateNumber","setState","backTemplate","event","target","currentTemplate","lib_default","src","closer","dblue16","white16","StyledOverlayEndService_templateObject","StyledOverlayEndService_templateObject2","StyledOverlayEndService_templateObject3","StyledOverlayEndService_templateObject4","StyledOverlayEndService_templateObject5","StyledOverlayEndService_templateObject6","StyledOverlayEndService_templateObject7","StyledOverlayEndService","handleEnd","history","toggleEndServiceOverlay","push","closeEndServiceOverlayFunc","StyledOverlayEndService_StyledOverlayContainer","StyledOverlayEndService_StyledOverlayContentBox","StyledOverlayEndService_CloseTemplateOverlay","dblue22","StyledOverlayEndService_TemplateNavContainer","CustomerCellDiv","CustomerCellRow_templateObject","CellID","CustomerCellRow_templateObject2","CellInfoLeft","CustomerCellRow_templateObject3","CellInfoRight","CustomerCellRow_templateObject4","CustomerCellRow","myArray","i","customerid","openCustomerProfile","_this2","phoneNumber1","userb","lblue20","acName","acEmail","borderBottom","withRouter","StyledBackIcon","StyledBackIcon_templateObject","MessengerContainer","ChatMessenger_templateObject","MessengerContainerTop","ChatMessenger_templateObject2","MessengerTopText","ChatMessenger_templateObject3","MessageCell","ChatMessenger_templateObject4","MessageCellContentTop","ChatMessenger_templateObject5","MessageCellContentBottom","ChatMessenger_templateObject6","MessengerSearchBar","ChatMessenger_templateObject7","MessengerTextBox","ChatMessenger_templateObject8","MessengerChatContainer","ChatMessenger_templateObject9","MessengerChatTopSec","ChatMessenger_templateObject10","MessengerFixedBottom","ChatMessenger_templateObject11","ChatMessagesContainer","ChatMessenger_templateObject12","BottomLeftButton","ChatMessenger_templateObject13","BottomRightButton","ChatMessenger_templateObject14","BottomMiddleText","ChatMessenger_templateObject15","ChatToRow","ChatMessenger_templateObject16","ChatMessageToBubble","ChatMessenger_templateObject17","ChatMessenger","serviceid","openThisChat","v","getSelectedServiceMessage","displayOverlay","selectedMesageText","Styled_StyledOverlayTemplate","displayOverlayEnd","Styled_StyledOverlayEndService","endService","renderChatCells","activeServiceArray","reversedActiveServiceArray","reverse","item","toLowerCase","filterVal","match","lastMessage","formattedTime","displayedMessage","vMessages","slice","textMessage","jsTime","date","timestamp","substring","newDate","Date","fHours","getHours","ampm","getMinutes","substr","ellipsis","renderServiceId","dblue30","checkMessageFunc","_this$props5","renderChatMessages","_this$props6","displayedToMessages","toggleTemplateTrue","_this$props7","sendNewMessage","_this$props8","createNewToMessage","phoneNumber","vehicleid","user","searchMessageCells","_this$props9","historyAndReload","renderNotLoggedIn","white35","buttonText","correctChats","correctDisplayedMessages","_this$props10","toggleNavBar","toggleNavToggle","go","_this$props11","placeholder","templatey","method","senddb","getActiveCustomerServices","customerActiveServices","CustomerSearchBar","AllCustomers_templateObject","CustomerSearchSelectSec","AllCustomers_templateObject2","SearchNameBox","AllCustomers_templateObject3","NameSelectDiv","AllCustomers_templateObject4","StyledSelect","select","AllCustomers_templateObject5","SearchButton","AllCustomers_templateObject6","AllCsBG","AllCustomers_templateObject7","AllCustomers","searchCustomers","s","document","getElementById","strSelect","options","selectedIndex","updateFilter","cFilter","renderRows","filteredCustomers","realCustomersReversed","number","d","Customer_CustomerCellRow","assign","mainHeading","CustomerInfo_templateObject","InfoElement","CustomerInfo_templateObject2","InfoEIcon","CustomerInfo_templateObject3","InfoEText","CustomerInfo_templateObject4","marginLeft","CustomerInfo","getCustomerFromParams","params","sc","consoleLog","openNewVehicle","openVehicleDetails","getSelectedVehicle","renderVehicles","newVehicleArray","ownerid","vehicles","vehicleMake","vehicleModel","twonum","phoneNumber2","Styled_StyledBackIcon","goBack","arrowleftw","userw","customerIE","phonew","mailw","carw","largeBtn","VehicleInfo_templateObject","VehicleInfo_templateObject2","VehicleInfo_templateObject3","VehicleInfo_templateObject4","VehicleInfo","sv","searchV","searchC","openServiceScreen","openServiceDetails","renderServices","newServiceArray","services","fMinutes","fDay","getDate","fMonth","getMonth","fYear","getFullYear","formattedDate","VehicleInfo_InfoElement","VehicleInfo_InfoEIcon","VehicleInfo_InfoEText","calendarw","vehicleYear","mileagew","vehicleMileage","licensew","vehicleLicenseNumber","vinw","vehicleVinNumber","servicew","ServiceInfo_templateObject","ServiceInfo_templateObject2","ServiceInfo_templateObject3","ServiceInfo_templateObject4","ServiceInfo","ss","searchS","ServiceInfo_InfoElement","ServiceInfo_InfoEIcon","ServiceInfo_InfoEText","mileage","pencilw","reason","detailsw","details","ConfirmContentContainer","CustomerConfirmation_templateObject","ConfirmIconDiv","CustomerConfirmation_templateObject2","ConfirmContentText","CustomerConfirmation_templateObject3","ConfirmButtons","CustomerConfirmation_templateObject4","CustomerConfirmation","openAllVehicles","openAddVehicle","currentCus","pop","checkw","dblue20","VehicleConfirmation_templateObject","VehicleConfirmation_templateObject2","VehicleConfirmation_templateObject3","VehicleConfirmation_templateObject4","VehicleConfirmation","openAddService","currentV","currentCustomer","VehicleConfirmation_ConfirmContentContainer","VehicleConfirmation_ConfirmIconDiv","VehicleConfirmation_ConfirmContentText","VehicleConfirmation_ConfirmButtons","UserLogin","resSend","FormField","TextField_templateObject","FormFieldContainer","TextField_templateObject2","FormFieldLeft","TextField_templateObject3","FormFieldSplit","TextField_templateObject4","FormIconContainer","TextField_templateObject5","TextField","svg","label","defaultValue","fieldWidth","containerWidth","_ref3$meta","meta","touched","FormContainer","AddCustomer_templateObject","FIELDS","noValueError","phoneb","emailb","AddCustomer","renderFields","field","Field","component","handleInputChange","refreshWindow","addNewCustomer","createNewCustomer","handleSubmit","validate","errors","cname","pnumber","pnumber2","AddService_templateObject","DetailsTextarea","AddService_templateObject2","AddService","searchc","searchv","vMileage","mileageb","pencilb","tNumber","numberb","renderDetailsField","updateTextarea","newDetailsText","currentDetailsText","createNewService","AddService_FormContainer","dataa","detailsText","myJSON","JSON","stringify","createBody","tnumber","ptnumber","AddVehicle_templateObject","AddVehicle","number2","vYear","calendarb","vMake","carb","vModel","licenseP","licenseb","vVin","vinb","createNewVehicle","AddVehicle_FormContainer","vyear","vmake","vmodel","lpnumber","vnumber","RegisterContainer","RegisterUser_templateObject","lockb","RegisterUser","handleNewUser","createNewUser","mainLogo","forEach","password","password2","LoginContainer","LoginUser_templateObject","LoginUser","handleLoginSubmit","logoutUser","EndService_templateObject","EndService_templateObject2","EndService","tagNumber","selectedServiceText","updateService","EndService_FormContainer","EndService_DetailsTextarea","MainNavContainer","StyledNavBar_templateObject","HeaderContainer","StyledNavBar_templateObject2","HeaderTop","StyledNavBar_templateObject3","HeaderTopImg","StyledNavBar_templateObject4","HeaderTopText","StyledNavBar_templateObject5","HeaderLIContainer","StyledNavBar_templateObject6","LILeft","StyledNavBar_templateObject7","LIRight","StyledNavBar_templateObject8","NavLIIcon","StyledNavBar_templateObject9","NavToggleIcon","StyledNavBar_templateObject10","StyledNavBar","handleLogout","companyName","renderContent","lblue22","gray30","react_router_dom","to","plusw","navItem","pointw","phonebookw","settingsw","returnw","CustomerService","openServiceCustomer","Code","App","renderCorrectPage","Customer_LoginUser","Customer_AllCustomers","getCustomerVehicles","getCustomerServices","getCurrentEmailId","className","Styled_StyledNavBar","react_router","exact","path","render","Customer_RegisterUser","Customer_AddCustomer","Customer_AddVehicle","Customer_AddService","Customer_EndService","Customer_CustomerConfirmation","Customer_VehicleConfirmation","Customer_CustomerInfo","Customer_VehicleInfo","Customer_ServiceInfo","Customer_ChatMessenger","_callee","_context","_x","_callee3","_context3","_x3","_callee2","_context2","_x2","_callee4","_context4","_x4","_callee5","_context5","_x5","_callee6","_context6","_x6","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","es","store","src_App_0","querySelector","URL","process","origin","addEventListener","response","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8088f815.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carb.3154024e.svg\";","module.exports = __webpack_public_path__ + \"static/media/historyw.ee726142.svg\";","module.exports = __webpack_public_path__ + \"static/media/templatey.be1a3992.svg\";","module.exports = __webpack_public_path__ + \"static/media/senddb.0cb7205c.svg\";","module.exports = __webpack_public_path__ + \"static/media/servicew.bda629b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinw.d6f95123.svg\";","module.exports = __webpack_public_path__ + \"static/media/licensew.ec0917c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/detailsw.1a5681fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencilw.9c7b621e.svg\";","module.exports = __webpack_public_path__ + \"static/media/emailb.49db445e.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendarb.a503a49e.svg\";","module.exports = __webpack_public_path__ + \"static/media/licenseb.7c356553.svg\";","module.exports = __webpack_public_path__ + \"static/media/userb.ea158943.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinb.036b5b43.svg\";","module.exports = __webpack_public_path__ + \"static/media/plusw.3538fda8.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointw.4ed024ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/phonebookw.38f17819.svg\";","module.exports = __webpack_public_path__ + \"static/media/settingsw.923e5774.svg\";","module.exports = __webpack_public_path__ + \"static/media/returnw.9a134c4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/lockb.726d79e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowleftw.a55b94fb.svg\";","import {GET_CUSTOMERS} from '../actions/constants'\n\nconst customerReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_CUSTOMERS:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerReducer;\n","export const GET_CUSTOMERS = \"GET_CUSTOMERS\";\nexport const GET_REAL_CUSTOMERS = \"GET_REAL_CUSTOMERS\";\nexport const UPDATE_CUSTOMER = \"REMOVE_CUSTOMER\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const GET_VEHICLES = \"GET_VEHICLES\";\nexport const GET_SERVICES = \"GET_SERVICES\";\nexport const GET_ACTIVE_SERVICES = \"GET_ACTIVE_SERVICES\";\nexport const GET_ACTIVE_TO_MESSAGES = \"GET_ACTIVE_TO_MESSAGES\";\n","import lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\n\n// Reducer\nconst initialState = {\n    showNavBar: 'none',\n    showNavToggle: barsw,\n    selectedCustomer: null,\n    selectedVehicle: null,\n    selectedService: null,\n    selectedServiceMesssage: null,\n    selectedMessageText: null,\n    showTemplateOverlay: false,\n    showEndServiceOverlay: false,\n    currentEmailId: '',\n    search: '',\n    currentFilter: 'Name'\n};\n\nexport function toggleNavBar(display) {\n    return {\n        type: TOGGLE_NAV_BAR,\n        display\n    }\n}\n\nexport function toggleNavToggle(display) {\n    return {\n        type: TOGGLE_NAV_TOGGLE,\n        display\n    }\n}\n\nexport function getSelectedCustomer(customer) {\n    return {\n        type: GET_SELECTED_CUSTOMER,\n        customer\n    }\n}\n\nexport function getSelectedVehicle(vehicle) {\n    return {\n        type: GET_SELECTED_VEHICLE,\n        vehicle\n    }\n}\n\nexport function getSelectedService(service) {\n    return {\n        type: GET_SELECTED_SERVICE,\n        service\n    }\n}\n\nexport function getSelectedServiceMessage(sm) {\n    return {\n        type: GET_SELECTED_SERVICE_MESSAGE,\n        sm\n    }\n}\n\nexport function getSelectedMessageText(text) {\n    return {\n        type: GET_SELECTED_MESSAGE_TEXT,\n        text\n    }\n}\n\nexport function toggleTemplateOverlay(status) {\n    return {\n        type: TOGGLE_TEMPLATE_OVERLAY,\n        status\n    }\n}\n\nexport function toggleEndServiceOverlay(status) {\n    return {\n        type: TOGGLE_END_SERVICE_OVERLAY,\n        status\n    }\n}\n\nexport function getCurrentEmailId(email) {\n    return {\n        type: GET_CURRENT_EMAIL_ID,\n        email\n    }\n}\n\nexport function updateCustomerSearch(search) {\n    return {\n        type: UPDATE_CUSTOMER_SEARCH,\n        search\n    }\n}\n\nexport function getCurrentFilter(filter) {\n    return {\n        type: GET_CURRENT_FILTER,\n        filter\n    }\n}\n\nconst TOGGLE_NAV_BAR = 'TOGGLE_NAV_BAR';\nconst TOGGLE_NAV_TOGGLE = 'TOGGLE_NAV_TOGGLE';  \nconst GET_SELECTED_CUSTOMER = 'GET_SELECTED_CUSTOMER';\nconst GET_SELECTED_VEHICLE = 'GET_SELECTED_VEHICLE';\nconst GET_SELECTED_SERVICE = 'GET_SELECTED_SERVICE';\nconst GET_SELECTED_SERVICE_MESSAGE = 'GET_SELECTED_SERVICE_MESSAGE';\nconst GET_SELECTED_MESSAGE_TEXT = 'GET_SELECTED_MESSAGE_TEXT';\nconst TOGGLE_TEMPLATE_OVERLAY = 'TOGGLE_TEMPLATE_OVERLAY';\nconst TOGGLE_END_SERVICE_OVERLAY = 'TOGGLE_END_SERVICE_OVERLAY';\nconst GET_CURRENT_EMAIL_ID = 'GET_CURRENT_EMAIL_ID';\nconst UPDATE_CUSTOMER_SEARCH = 'UPDATE_CUSTOMER_SEARCH';\nconst GET_CURRENT_FILTER = 'GET_CURRENT_FILTER';\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n    case TOGGLE_NAV_BAR:\n        return {\n            ...state,\n            showNavBar: action.display\n        }\n    case TOGGLE_NAV_TOGGLE:\n        return {\n            ...state,\n            showNavToggle: action.display\n        }\n    case GET_SELECTED_CUSTOMER:\n        return {\n            ...state,\n            selectedCustomer: action.customer\n        }\n    case GET_SELECTED_VEHICLE:\n        return {\n            ...state,\n            selectedVehicle: action.vehicle\n        }\n    case GET_SELECTED_SERVICE:\n        return {\n            ...state,\n            selectedService: action.service\n        }\n    case GET_SELECTED_SERVICE_MESSAGE:\n        return {\n            ...state,\n            selectedServiceMessage: action.sm\n        }\n    case GET_SELECTED_MESSAGE_TEXT:\n        return {\n            ...state,\n            selectedMessageText: action.text\n        }\n    case TOGGLE_TEMPLATE_OVERLAY:\n        return {\n            ...state,\n            showTemplateOverlay: action.status\n        }\n    case TOGGLE_END_SERVICE_OVERLAY:\n        return {\n            ...state,\n            showEndServiceOverlay: action.status\n        }\n    case GET_CURRENT_EMAIL_ID:\n        return {\n            ...state,\n            currentEmailId: action.email\n        }\n    case UPDATE_CUSTOMER_SEARCH:\n        return {\n            ...state,\n            search: action.search\n        }\n    case GET_CURRENT_FILTER:\n        return {\n            ...state,\n            currentFilter: action.filter\n        }\n    default:\n        return state;\n    }\n}\n","import {GET_REAL_CUSTOMERS} from '../actions/constants'\n\nconst customerRealReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_REAL_CUSTOMERS:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerRealReducer;","import {GET_VEHICLES} from '../actions/constants'\n\nconst customerVehicleReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_VEHICLES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerVehicleReducer;","import {GET_SERVICES} from '../actions/constants'\n\nconst customerServiceReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_SERVICES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerServiceReducer;","import {GET_ACTIVE_TO_MESSAGES} from '../actions/constants'\n\nconst customerActiveToMessageReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_ACTIVE_TO_MESSAGES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerActiveToMessageReducer;","import {combineReducers} from 'redux';\nimport customerReducer from './customer';\nimport auth from './auth';\nimport environment from './environment';\nimport { reducer as reduxForm } from 'redux-form';\nimport customerRealReducer from './realCustomer';\nimport customerVehicleReducer from './customerVehicle';\nimport customerServiceReducer from './customerService';\nimport customerActiveServiceReducer from './customerService';\nimport customerActiveToMessageReducer from './customerToMessage';\n\nexport default combineReducers({\n  environment: environment,\n  customers: customerReducer,\n  activeToMessages: customerActiveToMessageReducer,\n  realCustomers: customerRealReducer,\n  customerVehicles: customerVehicleReducer,\n  customerServices: customerServiceReducer,\n  activeServices: customerActiveServiceReducer,\n  auth: auth,\n  form: reduxForm\n});\n","import {FETCH_USER} from '../actions/constants'\n\nexport default function(state = null, action) {\n    switch (action.type) {\n        case FETCH_USER:\n            return action.payload || false;\n        default:\n            return state;\n    }\n}","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleware = [\n  thunk\n]\nconst withDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(rootReducer, withDevTools(\n  applyMiddleware(...middleware)\n))\n","import { createBrowserHistory, createHashHistory } from 'history';\n\nexport default createBrowserHistory();","import axios from 'axios';\nimport {GET_CUSTOMERS, UPDATE_CUSTOMER, GET_REAL_CUSTOMERS, FETCH_USER, GET_VEHICLES, GET_SERVICES, GET_ACTIVE_SERVICES, GET_ACTIVE_TO_MESSAGES} from './constants';\n\nexport const getCustomers = () => dispatch => {\n  return fetch('/api/customers')\n    .then(res => res.json())\n    .then(customers => dispatch({type: GET_CUSTOMERS, payload: customers}))\n}\n\nexport const getRealCustomers = () => dispatch => {\n  return fetch('/all-customers/customers')\n    .then(res => res.json())\n    .then(realCustomers => dispatch({type: GET_REAL_CUSTOMERS, payload: realCustomers}))\n}\n\nexport const getCustomerVehicles = () => dispatch => {\n  return fetch('/customer-vehicles')\n  .then(res => res.json())\n  .then(customerVehicles => dispatch({type: GET_VEHICLES, payload: customerVehicles}))\n}\n\nexport const getCustomerServices = () => dispatch => {\n  return fetch('/customer/vehicles-services')\n  .then(res => res.json())\n  .then(customerServices => dispatch({type: GET_SERVICES, payload: customerServices}))\n}\n\nexport const getActiveCustomerServices = () => dispatch => {\n  return fetch('/customers/chat/service/get')\n  .then(res => res.json())\n  .then(customerActiveServices => dispatch({type: GET_ACTIVE_SERVICES, payload: customerActiveServices}))\n}\n\nexport const getCustomerActiveToMessages = () => dispatch => {\n  return fetch('/customers/chat/service/messages')\n  .then(res => res.json())\n  .then(activeToMessages => dispatch({type: GET_ACTIVE_TO_MESSAGES, payload: activeToMessages}))\n}\n\nexport const createNewCustomer = (values) => async dispatch => {\n  const res = await axios.post('/new-customer', values);\n  console.log('Here is the new customer nfndfnsdfnskdhfkshdf')\n  dispatch({type: GET_CUSTOMERS, payload: res.data});\n    window.location.reload();\n}\n\nexport const createNewVehicle = (dataa) => async dispatch => {\n  console.log('sending new vehicle to database......')\n  const res = await axios.post('/new-vehicle/:customerid', dataa);\n  dispatch({type: GET_CUSTOMERS, payload: res.data});\n}\n\nexport const createNewUser = (values) => async dispatch => {\n  const res = await axios.post('/register', values);\n  console.log('Here is the new user being added.')\n  dispatch({type: UPDATE_CUSTOMER, payload: res.data})\n}\n\nexport const createNewService = (dataa) => async dispatch => {\n  const res = await axios.post('/customers/service/:customerid/:serviceid', dataa);\n  window.location.reload();\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const updateService = (dataa) => async dispatch => {\n  const res = await axios.post('/end-service', dataa);\n  console.log('Updating the service!')\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const createNewToMessage = (value) => async dispatch => {\n  console.log(value)\n  const res = await axios.post('/customers/chat/service/post', value);\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const userLogin = (values) => async dispatch => {\n  const reload = () => {\n    window.location.reload()\n  }\n  setTimeout(reload, 5000)\n  const res = await axios.post('/login', values);\n  console.log('Here is the new user being logged in.')\n  dispatch({type: UPDATE_CUSTOMER, payload: res.data})\n}\n\nexport const logoutUser = () => dispatch => {\n  return fetch('/logout')\n  .then(res => res.json())\n    .then(customers => dispatch({type: GET_CUSTOMERS, payload: customers}))\n};\n\nexport const fetchUser = () => async dispatch => {\n   const res = await axios.get('/current_user')\n    dispatch({ type: FETCH_USER, payload: res });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nclass Customers extends Component {\n\n  static propTypes = {\n    getCustomers: PropTypes.func.isRequired,\n    customers: PropTypes.array.isRequired\n  }\n\n  static defaultProps = {\n    customers: []\n  }\n\n  componentWillMount() {\n    this.props.getCustomers();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h2>Customers</h2>\n        <ul>\n        {this.props.customers.map(customer =>\n          <li key={customer.id}>{customer.firstName} {customer.lastName}</li>\n        )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getCustomers: () => dispatch(getCustomers())\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(Customers);\n","//StyledMediaQuery\n\nconst size = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '750px',\n    tabletL: '834px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px'\n}\n\n\nexport const device = {\n    mobileS: `(min-width: ${size.mobileS})`,\n    mobileM: `(min-width: ${size.mobileM})`,\n    mobileL: `(min-width: ${size.mobileL})`,\n    tablet: `(min-width: ${size.tablet})`,\n    tabletL: `(min-width: ${size.tabletL})`,\n    laptop: `(min-width: ${size.laptop})`,\n    laptopL: `(min-width: ${size.laptopL})`,\n    desktop: `(min-width: ${size.desktop})`,\n    desktopL: `(min-width: ${size.desktop})`\n};","export default {\n\tfullWhite: '#ffffff',\n\tlightGray: '#A0A0A0',\n    lighterGray: '#DEDEDE',\n    lightBlue: '#008ECC',\n    darkBlue: '#004A6A',\n    black: '#000000',\n    brightRed: '#F20B37'\n};","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\n\nexport const NewDiv = styled.div`\n\twidth: ${({ width }) => (width || 'auto')};\n\theight: ${({ height }) => (height || 'auto')};\n\tmargin: ${({ margin }) => (margin || 'auto')};\n\tpadding: ${({ padding }) => (padding || '0')};\n\tborder: ${({ border }) => (border || 'none')};\n\tborder-radius: ${({ borderRadius }) => (borderRadius || 'none')};\n\ttext-align: ${({ textAlign }) => (textAlign || 'auto')};\n\tz-index: ${({ zIndex }) => (zIndex || 'auto')};\n\tfloat: ${({ float }) => (float || 'none')};\n    display: ${({ display }) => (display || 'block')};\n    background: ${({ background }) => (background || 'none')};\n`\n\nexport const MainBG = styled.div`\n    width: 100%;\n    background: rgb(0,142,204);\n\tbackground: linear-gradient(90deg, rgba(0,142,204,1) 0%, rgba(89,200,248,1) 100%);\n\tmin-height: 100px;\n\tpadding-bottom: 75px;\n\n    @media ${device.tablet} {\n        \n    }\n`\n\nexport const MainHeading = styled(NewDiv)`\n\t@media ${device.tablet} {\n\t\tmax-width: 500px;\n\t\tmargin: 0 auto;\n\t}\n`","import React from 'react'\nimport styled from 'styled-components'\nimport is from 'styled-is';\n\nimport Colors from '../../constants/colors'\n\nimport { device } from './StyledMediaQuery';\n\n\nconst Button = styled.button`\n    border-radius: ${({ borderRadius }) => (borderRadius || '10px')};\n    color: ${({ color }) => (color || Colors.fullWhite)};\n    border: ${({ border }) => (border || 'none')};;\n    width: ${({ width }) => (width || '150px')};\n    height: ${({ height }) => (height || '40px')};\n    margin ${({ margin }) => (margin || '0')}; \n    padding ${({ padding }) => (padding || '0')}; \n    background-color: ${({ backgroundColor }) => (backgroundColor || 'initial')};\n    display: ${({ display }) => (display || 'flex')};\n    -webkit-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    -moz-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    transition: all ease .3s;\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    :hover{\n        box-shadow: 0 6px 12px 0 rgba(0,0,0,0.20), 0 1px 4px 0 rgba(0,0,0,0.30);\n    }\n    :active{\n        box-shadow: 0 2px 4px 0 rgba(0,0,0,0.20), 0 1px 3px 0 rgba(0,0,0,0.30);\n    }\n    :focus{\n        outline: 0;\n    }\n    ${is('primary')`\n\n    `}\n    ${is('secondary')`\n\n    `}\n    ${is('invalid')`\n        background-color: ${Colors.fullWhite};\n    `}\n    \n    ${is('standardBtn')`\n        width: 156px;\n        height: 40px;\n        border-radius: 20px;\n        background-color: ${Colors.darkBlue};\n    `}\n\n    ${is('largeBtn')`\n        width: 328px;\n        height: 40px;\n        border-radius: 50px;\n        background-color: ${Colors.darkBlue};\n    `}\n\n\n`\nexport default Button\n","import React from 'react'\nimport styled from 'styled-components'\nimport is from 'styled-is';\nimport PropTypes from 'prop-types';\n\nimport Colors from '../../constants/colors'\n\nimport { device } from './StyledMediaQuery';\n\nconst Text = styled.p`\n\tfont-size: ${({ fontSize }) => (fontSize || '16px')};\n\tline-height: ${({ lineHeight }) => (lineHeight || '16px')};\n\tcolor: ${({ color }) => (color || Colors.fullWhite)};\n\tmargin: ${props => (props.margin || '0')};\n\tpadding: ${props => (props.padding || '0')};\n    max-width: ${props => (props.maxWidth || 'none')};\n    font-weight: ${({ fontWeight }) => (fontWeight || 'normal')};\n    font-style: ${({ fontStyle }) => (fontStyle || 'normal ')};\n\tfont-family: ${({ fontFamily }) => (fontFamily || 'Helvetica')};\n\tbackground: ${({ background }) => (background || 'none')};\n\tfloat: ${({ float }) => (float || 'none')};\n\n\t${is('mainHeading')`\n\t\tfont-size: 40px;\n\t\tline-height: 44px;\n\t\tfont-weight: bold;\n\n\t\t@media ${device.mobileS} {\n\t\t\tfont-size: 40px;\n\t\t\tline-height: 44px;\n\t\t}\n    `}\n    \n    ${is('buttonText')`\n        font-size: 22px;\n    `}\n\n    ${is('navItem')`\n        line-height: 70px;\n        font-size: 22px;\n\t`}\n\t\n\t${is('inline')`\n        display: inline-block;\n\t`}\n\t\n\t${is('lblue20')`\n\t\tfont-size: 20px;\n\t\tline-height: 20px;\n\t\tcolor: ${Colors.lightBlue};\n\t`}\n\n\t${is('lblue22')`\n\t\tfont-size: 22px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.lightBlue};\n\t`}\n\t\n\t${is('dblue16')`\n\t\tfont-size: 16px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue22')`\n\t\tfont-size: 22px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue20')`\n\t\tfont-size: 20px;\n\t\tline-height: 20px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue30')`\n\t\tfont-size: 30px;\n\t\tline-height: 26px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('white20')`\n\t\tfont-size: 20px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.fullWhite};\n\t`}\n\n\t${is('white35')`\n\t\tfont-size: 35px;\n\t\tline-height: 45px;\n\t\tcolor: ${Colors.fullWhite};\n\t\tfont-style: medium;\n\t`}\n\n\t${is('gray30')`\n\t\tfont-size: 30px;\n\t\tline-height: 30px;\n\t\tcolor: ${Colors.lightGray};\n\t\tfont-style: medium;\n\t`}\n\t\n\t${is('customerIE')`\n\t\tline-height: 40px;\n\t`}\n\n\t${is('borderBottom')`\n\t\tborder-bottom: 1px solid ${Colors.darkBlue};\n\t`}\n\n\t${is('ellipsis')`\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tvertical-align: bottom;\n\t`}\n\n\t${is('acName')`\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tvertical-align: bottom;\n\n\t\t@media ${device.mobileS} {\n\t\t\tmax-width: 40px;\n\t\t\twidth: 40px;\n\t\t}\n\n\t\t@media ${device.tablet} {\n\t\t\tmax-width: 130px;\n\t\t\twidth: 130px;\n\t\t}\n\n\t\t@media ${device.tabletL} {\n\t\t\tmax-width: 150px;\n\t\t\twidth: 150px;\n\t\t}\n\n\t\t@media ${device.laptopL} {\n\t\t\tmax-width: 165px;\n\t\t\twidth: 165px;\n\t\t}\n\t`}\n\n\t${is('acEmail')`\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tvertical-align: bottom;\n\n\t\t@media ${device.mobileS} {\n\t\t\tmax-width: 70px;\n\t\t\twidth: 70px;\n\t\t}\n\n\t\t@media ${device.tablet} {\n\t\t\tmax-width: 215px;\n\t\t\twidth: 215px;\n\t\t}\n\n\t\t@media ${device.tabletL} {\n\t\t\tmax-width: 235px;\n\t\t\twidth: 235px;\n\t\t}\n\n\t\t@media ${device.laptopL} {\n\t\t\tmax-width: 300px;\n\t\t\twidth: 300px;\n\t\t}\n\t`}\n\n`\n/**\n\tThis styled case was moved to WelcomeStyledComponents since it's only used in that partifulcar instance and not elsewhere\n\t${is('employeeDetail')`\n\t\tline-height: 30px;\n\t\tfont-size: 16px;\n\t`}\n\n`\n\n**/\n\nText.propTypes = {\n\t/** Color of the text displayed */\n\tcolor: PropTypes.string,\n\t/** Margins that should be added, needs to be in short hand syntax ex margin: top right bottom left; */\n\tmargin: PropTypes.string,\n\t//* Max width that a text can take */\n\tmaxWidth: PropTypes.string,\n\t//* Font weight of the text */\n\tfontWeight: PropTypes.string,\n\t//* Font style of the text; ex: italic, normal & oblique */\n\tfontStyle: PropTypes.string,\n\t//* Font family to be used */\n\tfontFamily: PropTypes.string,\n\t//* if the text should be increased to largeText size */\n\tlargeText: PropTypes.bool,\n\t//* If the text should be reduced to subtext size */\n\tsubtext: PropTypes.bool,\n\t//* If the text should be reudeced to subtitle size */\n\tsubtitle: PropTypes.bool,\n\t//* If the text is supposed to reprsent an error displayed */\n\terror: PropTypes.bool,\n\t//* If the text should be the website defualt gray color */\n\tgray: PropTypes.bool,\n\t//* If the text reprsents a action */\n\tpointer: PropTypes.bool,\n\t//* If the text reprsents a link */\n\tunderline: PropTypes.bool,\n\t//* If the text needs to be placed on same line */\n\tinline: PropTypes.bool,\n}\n\nexport default Text","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from './StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors'\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport closer from '../../../rersources/svg/closer.svg';\nimport { NewDiv } from './StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\nimport { toggleTemplateOverlay } from '../../../store/reducers/environment';\nimport { createNewCustomer } from '../../../store/actions/customer';\n\n\nconst StyledOverlayContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background: black;\n        opacity: .8;\n        position: fixed;\n        z-index: 1000;\n    }\n`\n\nconst StyledOverlayContentBox = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 500px;\n        height: 550px;\n        background: rgb(89,200,248);\n        background: linear-gradient(180deg, rgba(89,200,248,1) 0%, rgba(255,255,255,1) 100%);\n        position: fixed\n        left: 50%;\n        margin-left: -250px;\n        margin-top: 150px;\n        z-index: 2000;\n    }\n`\n\nconst OverlayContentContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding: 50px 50px 0px 50px;\n    }\n`\n\nconst CustomerInputMessage = styled.input`\n    @media ${device.tablet} {\n        width: 200px;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst CustomerInputMessageLarge = styled.textarea`\n    @media ${device.tablet} {\n        width: 300px;\n        height: 100px !important;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst TemplateNavContainer = styled.div`\n    @media ${device.tablet} {\n        bottom: 75px;\n        position: absolute;\n        margin-left: auto;\n        margin-right: auto;\n        left: 0;\n        right: 0;\n        width: 325px;\n        display: flex\n        justify-content: space-between;\n        align-items: center;\n    }\n`\n\nconst CloseTemplateOverlay = styled.div`\n    @media ${device.tablet} {\n        width: 50px;\n        height: 50px;\n        margin-top: 25px;\n        margin-left: 25px;\n\n        svg {\n            height: 100%;\n            width: 100%;\n        }\n    }\n`\n\nclass StyledOverlayTemplate extends Component  {\n    constructor() {\n        super()\n        this.state = { \n            customText: '',\n            templateNumber: 0\n        }\n\n            this.forwardTemplate = this.forwardTemplate.bind(this);\n            this.backTemplate = this.backTemplate.bind(this);\n  //      this.handleChange = this.handleChange.bind(this)\n  //      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentDidMount() {\n    }\n\n    handleChange(event) {\n        const input = event.target.value\n        this.setState({ customText: input})\n        console.log(this.state)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n    }\n\n    handleNew = (e, value) => {\n        e.preventDefault()\n        console.log(value)\n    }\n\n    template1 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName}, thank you for bringing in your vehicle.`;\n        const text2 = 'We have now started on your vehicle. You will receive a real time update for each service.';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n    \n    template2 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName},`;\n        const text2 = 'we have completed your';\n        const period = '.'\n        const newText = `${text1} ${text2} ${this.state.customText}${period}`;\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n    \n    template3 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName}, your vehicle is now ready for pickup.`;\n        const text2 = 'We are looking forward to seeing you soon, thank you.';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n\n    template4 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName},`;\n        const period = '.';\n        const newText = `${text1} ${this.state.customText}${period}`;\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessageLarge \n                            type=\"textarea\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n\n    closeTemplateOverlayFunc = () => {\n        const { toggleTemplateOverlay } = this.props\n        toggleTemplateOverlay(false);\n    }\n\n    forwardTemplate = () => {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n        if (this.state.templateNumber < messageTemplates.length - 1) {\n            this.setState({\n                templateNumber: this.state.templateNumber + 1\n            })\n        } else {\n            this.setState({\n                templateNumber: 0\n            })\n        }\n    }\n\n    backTemplate = () => {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n        if (this.state.templateNumber > 0) {\n            this.setState({\n                templateNumber: this.state.templateNumber - 1\n            })\n        } else {\n            this.setState({\n                templateNumber: messageTemplates.length - 1\n            })\n        }\n    }\n\n    render() {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n        var currentTemplate = messageTemplates[this.state.templateNumber]\n\n        const { getSelectedMessageText } = this.props\n\n        return (\n            <div>\n                <StyledOverlayContainer>\n                </StyledOverlayContainer>\n                <StyledOverlayContentBox>\n                    <CloseTemplateOverlay\n                        onClick={this.closeTemplateOverlayFunc}\n                    >\n                        <SVG src={closer} />\n                    </CloseTemplateOverlay>\n                    {currentTemplate()}\n                    <TemplateNavContainer\n                        \n                    >\n                        <Button\n                            onClick={this.backTemplate}\n                            backgroundColor={Colors.fullWhite}\n                            borderRadius='25px'\n                        >\n                            <Text\n                                dblue16\n                            >\n                                Go Back\n                            </Text>\n                        </Button>\n                        <Button\n                            standardBtn\n                            onClick={this.forwardTemplate}\n                        >\n                            <Text\n                                white16\n                            >\n                                Go Forward\n                            </Text>\n                        </Button>\n                    </TemplateNavContainer>\n                </StyledOverlayContentBox>\n           </div>\n          )\n    }\n   \n  }\n\n  export default StyledOverlayTemplate;","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from './StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors'\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport closer from '../../../rersources/svg/closer.svg';\nimport { NewDiv } from './StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\nimport { toggleTemplateOverlay } from '../../../store/reducers/environment';\nimport { createNewCustomer } from '../../../store/actions/customer';\n\n\nconst StyledOverlayContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background: black;\n        opacity: .8;\n        position: fixed;\n        z-index: 1000;\n    }\n`\n\nconst StyledOverlayContentBox = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 500px;\n        height: 550px;\n        background: rgb(89,200,248);\n        background: linear-gradient(180deg, rgba(89,200,248,1) 0%, rgba(255,255,255,1) 100%);\n        position: fixed;\n        left: 50%;\n        margin-left: -250px;\n        margin-top: 150px;\n        z-index: 2000;\n    }\n`\n\nconst OverlayContentContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding: 50px 50px 0px 50px;\n    }\n`\n\nconst CustomerInputMessage = styled.input`\n    @media ${device.tablet} {\n        width: 200px;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst CustomerInputMessageLarge = styled.textarea`\n    @media ${device.tablet} {\n        width: 300px;\n        height: 100px !important;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst TemplateNavContainer = styled.div`\n    @media ${device.tablet} {\n        bottom: 225px;\n        position: absolute;\n        margin-left: auto;\n        margin-right: auto;\n        left: 0;\n        right: 0;\n        width: 325px;\n        display: flex\n        justify-content: space-between;\n        align-items: center;\n    }\n`\n\nconst CloseTemplateOverlay = styled.div`\n    @media ${device.tablet} {\n        width: 50px;\n        height: 50px;\n        margin-top: 25px;\n        margin-left: 25px;\n\n        svg {\n            height: 100%;\n            width: 100%;\n        }\n    }\n`\n\nclass StyledOverlayEndService extends Component  {\n\n    componentDidMount() {\n    }\n\n    handleChange(event) {\n        const input = event.target.value\n        this.setState({ customText: input})\n        console.log(this.state)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n    }\n\n    handleEnd = (e, value) => {\n        e.preventDefault()\n        const { history, toggleEndServiceOverlay } = this.props\n        toggleEndServiceOverlay(false);\n        history.push('/end-service');\n    }\n\n    closeEndServiceOverlayFunc = () => {\n        const { toggleEndServiceOverlay } = this.props\n        toggleEndServiceOverlay(false);\n    }\n\n    render() {\n        const { getSelectedMessageText } = this.props\n        return (\n            <div>\n                <StyledOverlayContainer>\n                </StyledOverlayContainer>\n                <StyledOverlayContentBox>\n                    <CloseTemplateOverlay\n                        onClick={this.closeEndServiceOverlayFunc}\n                    >\n                        <SVG src={closer} />\n                    </CloseTemplateOverlay>\n                    <NewDiv\n                        width='350px'\n                        margin='0 auto'\n                    >\n                        <Text\n                            margin='125px 0 0 0'\n                            dblue22\n                        >\n                            Are you sure you would like to end this conversation?\n                        </Text>\n                    </NewDiv>\n                    <TemplateNavContainer \n                    >\n                        <Button\n                            onClick={this.closeEndServiceOverlayFunc}\n                            backgroundColor={Colors.fullWhite}\n                            borderRadius='25px'\n                        >\n                            <Text\n                                dblue16\n                            >\n                                Cancel\n                            </Text>\n                        </Button>\n                        <Button\n                            standardBtn\n                            onClick={this.handleEnd}\n                        >\n                            <Text\n                                white16\n                            >\n                                Yes\n                            </Text>\n                        </Button>\n                    </TemplateNavContainer>\n                </StyledOverlayContentBox>\n           </div>\n          )\n    }\n   \n  }\n\n  export default StyledOverlayEndService;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\n\nconst CustomerCellDiv = styled(NewDiv)`\n    width: 100%\n    height: 80px;\n    background: ${Colors.lighterGray};\n    border-bottom: 1px solid black;\n`\n\nconst CellID = styled(NewDiv)`\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    display: inline-block;\n    float: left;\n    margin-left: 3%;\n    margin-top: 15px;\n\n    svg {\n        width: 100%;\n        height: 100%;\n    }\n`\n\nconst CellInfoLeft = styled(NewDiv)`\n    float: left;\n    display: inline-block;\n    margin-left: 12%;\n    margin-top: 10px;\n    height: 60px;\n    width: 33%;\n    text-align: left;\n\n    @media ${device.tablet} {\n        margin-left: 6%;\n        width: 39%;\n    }\n\n    @media ${device.laptop} {\n        margin-left: 10%;\n        width: 33%;\n    }\n`\n\nconst CellInfoRight = styled(CellInfoLeft)`\n    margin-left: 6%;\n`\n\nclass CustomerCellRow extends Component {\n\n  componentDidMount() {\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n  openCustomerProfile = () => {\n      const { realCustomers, customerid, selectedCustomer, getSelectedCustomer, history } = this.props\n      history.push(`/customers/${customerid}`);\n    const sc = this.search(customerid, realCustomers);\n    getSelectedCustomer(sc);\n    console.log(selectedCustomer);\n  }\n\n  render() {\n      const { customerid, name, phoneNumber1, email } = this.props\n      console.log(this.props)\n    return (\n      <CustomerCellDiv\n        onClick={() => {this.openCustomerProfile() }}\n      >\n          <CellID>\n            <SVG src={userb} />\n          </CellID>\n          <CellInfoLeft>\n              <NewDiv\n              >\n                <Text\n                    inline\n                    lblue20\n                >\n                    Customer Name:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                    acName\n                >\n                    {name}\n                </Text>\n              </NewDiv>\n\n              <NewDiv\n                padding=\"15px 0 0 0\"\n              >\n                <Text\n                    inline\n                    lblue20\n                >\n                    Phone #:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                    acName\n                >\n                    {phoneNumber1}\n                </Text>\n              </NewDiv>\n\n          </CellInfoLeft>\n          <CellInfoRight>\n          <NewDiv>\n                <Text\n                    inline\n                    lblue20\n                >\n                    Email:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                    acEmail\n                >\n                    {email}\n                </Text>\n              </NewDiv>\n\n              <NewDiv\n                padding=\"15px 0 0 0\"\n              >\n                <Text\n                    inline\n                    dblue16\n                    borderBottom\n                >\n                    View More\n                </Text>\n              </NewDiv>\n          </CellInfoRight>\n      </CustomerCellDiv>\n    );\n  }\n}\n\nexport default withRouter(CustomerCellRow);","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\nimport Colors from '../../constants/colors';\nimport { NewDiv } from '../Styled/StyledComponents';\n\nconst StyledBackIcon = styled(NewDiv)`\n@media ${device.tablet} {\n    position: absolute;\n    height: 35px;\n    width: 20px;\n    margin-left: 25px;\n    margin-top: 35px;\n    \n    svg {\n        width: 20px;\n        height: 35px;\n    }\n}\n`\nexport default StyledBackIcon;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {getActiveCustomerServices, getCustomerActiveToMessages} from '../../store/actions/customer'\nimport { createNewToMessage } from '../../store/actions/customer'\nimport './customers.css';\nimport StyledOverlayTemplate from '../Customer/Styled/StyledOverlayTemplate';\nimport StyledOverlayEndService from '../Customer/Styled/StyledOverlayEndService';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport { getSelectedCustomer, getSelectedServiceMessage, getSelectedMessageText, toggleTemplateOverlay, toggleEndServiceOverlay, getCurrentFilter, updateCustomerSearch } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport templatey from '../../rersources/svg/templatey.svg';\nimport senddb from '../../rersources/svg/senddb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { isContext } from 'vm';\n\nconst MessengerContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40%;\n        height: 100vh;\n        position: fixed;\n        left: 0;\n        top: 0;\n        overflow-y: scroll;\n        background: ${Colors.lightBlue};\n        float: left;\n    }\n\n    @media ${device.tabletL} {\n        width: 35%;\n        height: 100vh;\n        position: fixed;\n        left: 0;\n        top: 0;\n        overflow-y: scroll;\n        background: ${Colors.lightBlue};\n        float: left;\n    }\n`\n\nconst MessengerContainerTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 200px;\n        background: ${Colors.lightBlue};\n        border-bottom: 1px solid ${Colors.fullWhite};\n        padding-bottom: 8px;\n    }\n    @media ${device.tabletL} {\n        width: 100%;\n        height: 200px;\n        background: ${Colors.lightBlue};\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst MessengerTopText = styled(NewDiv)`\n    @media ${device.tablet} {\n        max-width: 300px;\n        text-align: center;\n        height: auto;\n        padding-top: 24px;\n    }\n`\n\nconst MessageCell = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 90px;\n        background: ${Colors.lightBlue};\n        float: left;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst MessageCellContentTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 90%;\n        height: 25px;\n        padding: 15px 0px 10px 0px\n    }\n`\n\nconst MessageCellContentBottom = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 90%;\n        height: 40px;\n        padding: 10px 0px\n        text-align: left;\n    }\n`\n\nconst MessengerSearchBar = styled.input`\n    @media ${device.tablet} {\n        width: ${({ width }) => (width|| '100%')};\n        height: ${props => (props.height || '40px')};\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n\n        :focus {\n            outline: none;\n          }\n    } \n`\n\nconst MessengerTextBox = styled.textarea`\n    @media ${device.tablet} {\n        width: ${({ width }) => (width|| '100%')};\n        height: 90px;\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        padding-top: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n        :focus {\n            outline: none;\n          }\n    } \n`\n\nconst MessengerChatContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 60%;\n        height: 100vh;\n        background-color: ${Colors.lighterGray};\n        float: right\n    } \n    @media ${device.tabletL} {\n        width: 65%;\n        height: 100vh;\n        background-color: ${Colors.lighterGray};\n        float: right\n    } \n`\n\nconst MessengerChatTopSec = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 60%;\n        height: 90px;\n        background-color: ${Colors.lighterGray};\n        border-bottom: 1px solid ${Colors.lightBlue};\n        position: fixed;\n        top: 0;\n        text-align: left;\n    } \n\n    @media ${device.tabletL} {\n        width: 65%;\n        height: 90px;\n        background-color: ${Colors.lighterGray};\n        border-bottom: 1px solid ${Colors.lightBlue};\n        position: fixed;\n        top: 0;\n        text-align: left;\n    } \n`\n\nconst MessengerFixedBottom = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 60%;\n        height: 115px;\n        position: fixed;\n        bottom: 0;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    } \n\n    @media ${device.tabletL} {\n        width: 65%;\n        height: 115px;\n        position: fixed;\n        bottom: 0;\n    } \n`\n\nconst ChatMessagesContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin-top: 100px;\n        background-color: ${Colors.lighterGray};\n    } \n`\n\nconst BottomLeftButton = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        padding: 5px;\n        display: inline-block;\n        padding-top: 60px;\n        float: left;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst BottomRightButton = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        padding: 5px;\n        display: inline-block;\n        padding-top: 60px;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst BottomMiddleText = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 80%;\n        height: 100px;\n        padding: 5px 0;\n        display: inline-block;\n    } \n\n    @media ${device.tabletL} {\n        width: 80%;\n        height: 100px;\n        padding: 5px 0;\n        display: inline-block;\n    } \n`\n\nconst ChatToRow = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: auto;\n        clear: both;\n    } \n`\n\nconst ChatMessageToBubble = styled(NewDiv)`\n    @media ${device.tablet} {\n        max-width: 250px;\n        height: auto;\n        padding: 15px 15px;\n        float: right\n        margin-right: 10px;\n        background: ${Colors.lightBlue};\n        border-radius: 30px;\n        margin-bottom: 5px;\n        text-align: left;\n        color: ${Colors.fullWhite};\n    } \n`\n\nclass ChatMessenger extends Component {\n    constructor() {\n        super()\n        this.state = {\n            correctChats: [],\n            correctDisplayedMessages: []\n\n        }\n    }\n  componentDidMount() {\n    const {showNavBar, toggleNavBar, toggleNavToggle, getCustomerActiveToMessages, activeToMessages, selectedServiceMessage, getCurrentFilter, updateCustomerSearch } = this.props\n\n    if (showNavBar === 'block') {\n        toggleNavBar('none')\n        toggleNavToggle(barsw);\n        updateCustomerSearch('')\n    } else {\n        console.log('Not showing....');\n        updateCustomerSearch('')\n    }\n\n    console.log(this.props)\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].serviceid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n  openThisChat = (v) => {\n    const { customerServices, getSelectedServiceMessage, selectedServiceMessage } = this.props\n    const serviceid = v.serviceid\n    const sc = this.search(serviceid, customerServices);\n    getSelectedServiceMessage(sc);\n    console.log(selectedServiceMessage);\n}\n\n    displayOverlay = () => {\n        const { showTemplateOverlay, getSelectedMessageText, selectedMesageText, toggleTemplateOverlay, selectedServiceMessage } = this.props\n        if (showTemplateOverlay === true) {\n            return (\n                <StyledOverlayTemplate\n                    getSelectedMessageText={getSelectedMessageText} \n                    selectedMesageText={selectedMesageText}\n                    toggleTemplateOverlay={toggleTemplateOverlay}\n                    selectedServiceMessage={selectedServiceMessage}\n              />\n            )\n        } else {\n            return (\n                <div></div>\n            )\n        }\n    }\n\n    displayOverlayEnd = () => {\n        const { showEndServiceOverlay, getSelectedMessageText, selectedMesageText, toggleEndServiceOverlay, selectedServiceMessage, history } = this.props\n        if (showEndServiceOverlay === true) {\n            return (\n                <StyledOverlayEndService\n                    getSelectedMessageText={getSelectedMessageText} \n                    selectedMesageText={selectedMesageText}\n                    toggleEndServiceOverlay={toggleEndServiceOverlay}\n                    selectedServiceMessage={selectedServiceMessage}\n                    history={history}\n              />\n            )\n        } else {\n            return (\n                <div></div>\n            )\n        }\n    }\n\n    endService = () => {\n        const { toggleEndServiceOverlay } = this.props\n        toggleEndServiceOverlay(true)\n        console.log('Ending the service....')\n    }\n\n  renderChatCells = () => {\n    var activeServiceArray = []\n    const { customerServices, activeToMessages, getCurrentFilter, search } = this.props\n    console.log(customerServices);\n\n    for (var i=0; i < customerServices.length; i++) {\n        if (customerServices[i].status == true) {\n            activeServiceArray.push(customerServices[i])\n        } else {\n            console.log('Not active');\n        }\n    }\n    var reversedActiveServiceArray = activeServiceArray.reverse()\n\n    var searchedActiveServices;\n\n    if (search === null || search === '') {\n        searchedActiveServices = reversedActiveServiceArray\n      } else {\n        searchedActiveServices = reversedActiveServiceArray.filter((item) => {\n          var name = item.customerName.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = name.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n\n        return searchedActiveServices.map((v) => {\n            var vMessages = []\n            var lastMessage;\n            var formattedTime;\n            var displayedMessage;\n\n            for (var i=0; i < activeToMessages.length; i++) {\n                if (v.serviceid == activeToMessages[i].serviceid) {\n                    vMessages.push(activeToMessages[i])\n                } else {\n                    console.log('Did not match')\n                }\n            }\n\n            if (vMessages.length > 0) {\n                lastMessage = vMessages.slice(-1)[0];\n                displayedMessage = lastMessage.textMessage\n                var jsTime = lastMessage.date\n                var timestamp = jsTime.substring(0, jsTime.length - 3)\n                var newDate = new Date(timestamp*1000);\n                var fHours = newDate.getHours();\n                var fMinutes = '0' + newDate.getMinutes();\n                \n                var ampm = fHours >= 12 ? 'pm' : 'am';\n                fHours = fHours % 12;\n                fHours = fHours ? fHours : 12;\n                formattedTime = fHours + ':' + fMinutes.substr(-2) + ampm;\n\n            } else {\n                formattedTime = '';\n                displayedMessage = 'No Messages sent';\n            }\n\n            return (\n                <MessageCell\n                    onClick={() => this.openThisChat(v)}\n                >\n                    <MessageCellContentTop\n                    >\n                        <Text\n                            dblue22\n                            inline\n                            float='left'\n                            maxWidth='210px'\n                        >\n                            {v.customerName}\n                        </Text>\n                        <Text\n                            dblue16\n                            inline\n                            float='right'\n                            maxWidth='80px'\n                        >\n                            {formattedTime}\n                        </Text>\n                    </MessageCellContentTop>\n                    <MessageCellContentBottom>\n                        <Text\n                            dblue16\n                            ellipsis\n                            maxWidth=\"100%\"\n                        >\n                            {displayedMessage}\n                        </Text>\n                    </MessageCellContentBottom>\n                </MessageCell>\n            )\n        })\n  }\n\n  renderServiceId = () => {\n      const {selectedServiceMessage } = this.props\n      if (selectedServiceMessage) {\n            return (\n                <NewDiv>\n                    <Text\n                        dblue30\n                        padding=\"10px 0 0 10px\"\n                        inline\n                    >\n                        {selectedServiceMessage.customerName}\n                    </Text>\n                    <NewDiv\n                        display='inline-block'\n                        float='right'\n                        margin='15px 15px 0 0'\n                    >\n                        <Button\n                            width='156px'\n                            height='40px'\n                            borderRadius='20px'\n                            backgroundColor={Colors.brightRed}\n                            display='inline-block'\n                            onClick={this.endService}\n                        >\n                            <Text\n                                white20\n                            >\n                                End\n                            </Text>\n                        </Button>\n                        \n                    </NewDiv>\n                </NewDiv>\n            )\n      } else {\n          return (\n              <Text\n                dblue30\n                padding=\"10px 0 0 10px\"\n              >\n                  No Service Selected\n              </Text>\n          )\n      }\n  }\n\n  checkMessageFunc = () => {\n    const { activeToMessages, selectedServiceMessage } = this.props\n\n    if (selectedServiceMessage) {\n        for (var i=0; i < activeToMessages.length; i++) {\n            if (activeToMessages[i].serviceid === selectedServiceMessage.serviceid) {\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n    }\n  }\n\n  renderChatMessages = () => {\n    const { activeToMessages, selectedServiceMessage, getCustomerActiveToMessages } = this.props\n    const displayedToMessages = []\n\n    this.checkMessageFunc()\n\n      if (selectedServiceMessage) {\n        for (var i=0; i < activeToMessages.length; i++) {\n            if (activeToMessages[i].serviceid === selectedServiceMessage.serviceid) {\n                displayedToMessages.push(activeToMessages[i]);\n                console.log(`pushed ${activeToMessages[i]}`);\n            }  else {\n                console.log('did not match');\n            }  \n        }\n        console.log(this.state);\n        console.log(displayedToMessages)\n        console.log(activeToMessages)\n        return displayedToMessages.map((v) => {\n            return (\n                <ChatToRow>\n                        <ChatMessageToBubble>\n                            {v.textMessage}\n                        </ChatMessageToBubble>\n                </ChatToRow>\n            )\n        })\n      } else {\n          return (\n              <div>There are no messages to display</div>\n          )\n      }\n  }\n\n  toggleTemplateTrue = () => {\n      const { toggleTemplateOverlay, selectedServiceMessage } = this.props\n      if (selectedServiceMessage) {\n        toggleTemplateOverlay(true);\n      } else {\n          console.log('There is no selected message');\n      }\n  }\n\n  sendNewMessage = (e, value) => {\n      const { selectedMessageText, createNewToMessage, selectedServiceMessage, getCustomerActiveToMessages, getSelectedMessageText } = this.props\n        e.preventDefault();\n        console.log(value)\n        console.log(selectedMessageText)\n\n        if (selectedServiceMessage) {\n            const info =\n            {\n                textMessage: selectedMessageText,\n                phoneNumber: selectedServiceMessage.phoneNumber,\n                serviceid: selectedServiceMessage.serviceid,\n                vehicleid: selectedServiceMessage.vehicleid,\n                customerid: selectedServiceMessage.customerid,\n                user: selectedServiceMessage.user\n            }\n            createNewToMessage(info);\n        } else {\n            console.log('It cannot be done.')\n        }\n\n        setTimeout(getCustomerActiveToMessages, 2000)\n        setTimeout(this.renderChatMessages, 3000)\n        //window.location.reload()\n        getSelectedMessageText('')\n  }\n\n  handleChange = (e) => {\n      const { getSelectedMessageText } = this.props\n      const messageT = e.target.value\n      getSelectedMessageText(messageT);\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  searchMessageCells = (event) => {\n    const { search, updateCustomerSearch } = this.props\n    var searchText = event.target.value\n    updateCustomerSearch(searchText)\n  }\n\n  historyAndReload = () => {\n    const { history } = this.props\n    history.push('/login');\n  }\n\n  renderNotLoggedIn = () => {\n    return (\n      <div>\n          <MainBG>\n              <Text\n                white35\n                padding='100px 0 50px 0'\n                maxWidth='600px'\n                margin='0 auto'\n              >\n                You are not logged in. Please click the button below to return to the login screen.\n              </Text>\n            <Button\n              standardBtn\n              margin='0 auto'\n              onClick={this.historyAndReload}\n            >\n              <Text\n                buttonText\n              >\n                Login\n              </Text>\n\n            </Button>\n          </MainBG>\n      </div>\n    )\n  }\n\n  render() {\n    const { getSelectedMessageText, selectedMessageText, createNewToMessage, selectedServiceMessage, search } = this.props\n    console.log(createNewToMessage);\n    const newText = \"\"\n    console.log(this.props)\n    const props = this.props\n    const data = props && props.auth ? props.auth.data : null;\n\n    if (data) {\n        return (\n            <div>\n                {this.displayOverlay()}\n                {this.displayOverlayEnd()}\n                <MessengerContainer>\n                    <MessengerContainerTop>\n                        <MessengerTopText>\n                            <Text\n                                white35\n                                padding=\"25px 0\"\n                            >\n                                Current Vehicles\n                            </Text>\n                        </MessengerTopText>\n                        <MessengerSearchBar \n                            width=\"85%\"\n                            placeholder=\"Search...\"\n                            onChange={this.searchMessageCells}\n                            value={search}\n                        />\n                    </MessengerContainerTop>\n                    {this.renderChatCells()}\n                </MessengerContainer>\n                <MessengerChatContainer>\n                    <MessengerChatTopSec>\n                        {this.renderServiceId()}\n                    </MessengerChatTopSec>\n                    <ChatMessagesContainer>\n                        {this.renderChatMessages()}\n                    </ChatMessagesContainer>\n                    <MessengerFixedBottom>\n                        <BottomLeftButton\n                            onClick={() => this.toggleTemplateTrue()}\n                        >\n                            <SVG src={templatey} />\n                        </BottomLeftButton>\n                        <BottomMiddleText>\n                            <form method=\"POST\" onChange={this.handleChange} onSubmit={(e) => this.sendNewMessage(e, this)}>\n                                <MessengerTextBox\n                                    width=\"97%\"\n                                    placeholder=\"Enter Message...\"\n                                    value={selectedMessageText}\n                                    name=\"toMessage\"\n                                />\n                            </form>\n                        </BottomMiddleText>\n                        <BottomRightButton \n                        onClick={(e) => this.sendNewMessage(e, this)}>\n                            <SVG src={senddb} />\n                        </BottomRightButton>\n                    </MessengerFixedBottom>\n                </MessengerChatContainer>\n            </div>\n            );\n        } else {\n            return (\n                this.renderNotLoggedIn()\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => ({\n  realCustomers: state.realCustomers,\n  selectedCustomer: state.environment.selectedCustomer,\n  activeServices: state.activeServices,\n  search: state.environment.search,\n  selectedServiceMessage: state.environment.selectedServiceMessage,\n  selectedMessageText: state.environment.selectedMessageText,\n  showTemplateOverlay: state.environment.showTemplateOverlay,\n  showEndServiceOverlay: state.environment.showEndServiceOverlay,\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getActiveCustomerServices: () => dispatch(getActiveCustomerServices()),\n   getSelectedServiceMessage: (sm) => dispatch(getSelectedServiceMessage(sm)),\n   getSelectedMessageText: (text) => dispatch(getSelectedMessageText(text)),\n   toggleTemplateOverlay: (status) => dispatch(toggleTemplateOverlay(status)),\n   toggleEndServiceOverlay: (status) => dispatch(toggleEndServiceOverlay(status)),\n   getCustomerActiveToMessages: () => dispatch(getCustomerActiveToMessages()),\n   getCurrentFilter: (filter) => dispatch (getCurrentFilter(filter)),\n   updateCustomerSearch: (search) => dispatch (updateCustomerSearch(search))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(ChatMessenger));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport { getSelectedCustomer, updateCustomerSearch, getCurrentFilter } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerSearchBar = styled.input`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n\n        :focus {\n          outline: none;\n        }\n    } \n`\n\nconst CustomerSearchSelectSec = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 672px;\n      margin: 0 auto;\n      margin-top: 30px;\n    } \n`\n\nconst SearchNameBox = styled(NewDiv)`\n    @media ${device.tablet} {\n      text-align: left;\n      width: 242px;\n      display: inline-block;\n    }\n`\n\nconst NameSelectDiv = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 242px;\n      height: 40px;\n      border-radius: 20px;\n      overflow: hidden;\n\n      select {\n        outline: none;\n        border: 0px;\n      }\n    } \n`\n\nconst StyledSelect = styled.select`\n    @media ${device.tablet} {\n      width: 100%;\n      height: 100%\n      font-size: 16px;\n      color: ${Colors.lightGray};\n      -webkit-border-top-right-radius: 15px;\n      -webkit-border-bottom-right-radius: 15px;\n      -moz-border-radius-topright: 15px;\n      -moz-border-radius-bottomright: 15px;\n      border-top-right-radius: 15px;\n      border-bottom-right-radius: 15px;\n    }\n`\n\nconst SearchButton = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 156px;\n      height: 40px;\n      display: inline-block;\n      float: right;\n      margin-top: 30.5px;\n    }\n`\n\nconst AllCsBG = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 100%;\n      background: rgb(0,142,204);\n      background: linear-gradient(90deg, rgba(0,142,204,1) 0%, rgba(89,200,248,1) 100%);\n      height: 300px;\n    }\n`\n\nvar showInfo;\n\nclass AllCustomers extends Component {\n\n  static propTypes = {\n    getRealCustomers: PropTypes.func.isRequired,\n    realCustomers: PropTypes.array.isRequired\n  }\n\n  static defaultProps = {\n    realCustomers: []\n  }\n\n  componentDidMount() {\n    this.props.getRealCustomers();\n    const {showNavBar, toggleNavBar, toggleNavToggle, updateCustomerSearch, history } = this.props\n    if (showNavBar === 'block') {\n      toggleNavBar('none')\n      toggleNavToggle(barsw);\n      updateCustomerSearch('');\n    } else {\n      console.log('Not showing....');\n      updateCustomerSearch('');\n    }\n  }\n\n  searchCustomers = (event) => {\n    const { search, updateCustomerSearch } = this.props\n    var searchText = event.target.value\n    updateCustomerSearch(searchText)\n\n    var s = document.getElementById('search-select');\n    var strSelect = s.options[s.selectedIndex].value\n    console.log(strSelect)\n  }\n\n  updateFilter = (event) => {\n    const { getCurrentFilter } = this.props\n    var cFilter = event.target.value\n    getCurrentFilter(cFilter)\n    console.log(cFilter)\n  }\n\n  renderRows = () => {\n    const { realCustomers, selectedCustomer, getSelectedCustomer, history, search, currentFilter } = this.props\n    console.log(selectedCustomer);\n    const realCustomersReversed = realCustomers.reverse()\n    var filteredCustomers;\n\n    if (currentFilter === 'Name') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var name = item.name.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = name.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n      \n    } else if (currentFilter === 'Phone Number') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var number = item.phoneNumber1.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = number.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n    } else if (currentFilter === 'Email') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var email = item.email.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = email.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n    } else {\n      filteredCustomers = realCustomersReversed\n    }\n\n    return filteredCustomers.map((d) => {\n      console.log(filteredCustomers);\n      console.log(currentFilter)\n      return (\n        <CustomerCellRow\n          key={d.customerid}\n          realCustomers={realCustomers}\n          selectedCustomer={selectedCustomer}\n          getSelectedCustomer={getSelectedCustomer}\n          history={history}\n          {...d}\n        />\n      )\n    })\n  }\n\n  renderNotLoggedIn = () => {\n    const { history } = this.props\n    return (\n      <div>\n          <MainBG>\n              <Text\n                white35\n                padding='100px 0 50px 0'\n                maxWidth='600px'\n                margin='0 auto'\n              >\n                You are not logged in. Please click the button below to return to the login screen.\n              </Text>\n            <Button\n              standardBtn\n              margin='0 auto'\n              onClick={() => history.push('/login')}\n            >\n              <Text\n                buttonText\n              >\n                Login\n              </Text>\n\n            </Button>\n          </MainBG>\n      </div>\n    )\n  }\n\n  render() {\n    const { realCustomers, updateCustomerSearch, search, history, auth, selectedCustomer } = this.props\n    const props = this.props\n    const data = props && props.auth ? props.auth.data : null;\n\n    if (selectedCustomer) {\n      window.location.reload()\n    } else {\n      console.log('No selected customer');\n    }\n\n    if (data) {\n      return (\n        <div>\n          <AllCsBG>\n            <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  All Customers\n                </Text>\n              </MainHeading>\n          <NewDiv\n            width=\"662px\"\n            height=\"40px\"\n          >\n            <CustomerSearchBar \n              placeholder=\"Search\"\n              onChange={this.searchCustomers}\n              value={search}\n            />\n          </NewDiv>\n          <CustomerSearchSelectSec>\n            <SearchNameBox\n              float=\"left\"\n            >\n              <Text\n                padding=\"0 0 15px 0\"\n              >\n                Search By:\n              </Text>\n              <NameSelectDiv>\n                <StyledSelect \n                id=\"search-select\"\n                onChange={this.updateFilter}\n                >\n                  <option>Name</option>\n                  <option>Phone Number</option>\n                  <option>Email</option>\n                  <option>Vin Number</option>\n                </StyledSelect>\n              </NameSelectDiv>\n            </SearchNameBox>\n            <SearchNameBox>\n              <Text\n                padding=\"0 0 15px 0\"\n              >\n                Sort By:\n              </Text>\n              <NameSelectDiv>\n                <StyledSelect>\n                  <option>Default</option>\n                </StyledSelect>\n              </NameSelectDiv>\n            </SearchNameBox>\n            <SearchButton>\n              <Button\n                width=\"100%\"\n                height=\"100%\"\n                borderRadius=\"40px\"\n                standardBtn\n              >\n                <Text\n                >\n                  Search\n                  </Text>\n              </Button>\n            </SearchButton>\n          </CustomerSearchSelectSec>\n        </AllCsBG>\n          <NewDiv\n            width=\"100vw\"\n          >\n              {this.renderRows()}\n          </NewDiv>\n        </div>\n      );\n    } else {\n      return (\n        this.renderNotLoggedIn()\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  realCustomers: state.realCustomers,\n  selectedCustomer: state.environment.selectedCustomer,\n  search: state.environment.search,\n  currentFilter: state.environment.currentFilter,\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getRealCustomers: () => dispatch(getRealCustomers()),\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   updateCustomerSearch: (search) => dispatch (updateCustomerSearch(search)),\n   getCurrentFilter: (filter) => dispatch (getCurrentFilter(filter))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(AllCustomers));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport mailw from '../../rersources/svg/mailw.svg';\nimport carw from '../../rersources/svg/carw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n    \n    @media ${device.laptop} {\n        margin-left: 10%;\n    }\n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n    }\n`\n\nclass CustomerInfo extends Component {\n  componentDidMount() {\n    const { selectedCustomer, getSelectedCustomer, realCustomers, customerVehicles, getRealCustomers } = this.props\n\n    if (!realCustomers || realCustomers.length < 1) {\n        getRealCustomers()\n        setTimeout(this.getCustomerFromParams, 7000)\n    } else {\n        console.log('There is something')\n        console.log(realCustomers)\n    }\n}\n\ngetCustomerFromParams = () => {\n    const { realCustomers, selectedCustomer, getSelectedCustomer } = this.props\n    const {\n        match: { params: { customerid } }\n    } = this.props\n\n    console.log(realCustomers)\n    const sc = this.search(customerid, realCustomers);\n    console.log(sc)\n    getSelectedCustomer(sc);\n}\n\nconsoleLog = () => {\n}\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n    openNewVehicle = () => {\n        const customerid = this.props.selectedCustomer.customerid\n        const history = this.props.history;\n        history.push(`/new-vehicle/${customerid}`);\n    }\n\n    openVehicleDetails = (v) => {\n        const { getSelectedVehicle, selectedVehicle, history, selectedCustomer } = this.props\n        const vehicleid = v.vehicleid\n        console.log(selectedCustomer)\n        getSelectedVehicle(v)\n        console.log(selectedVehicle)\n        const customerid = selectedCustomer.customerid\n        history.push(`/customers/vehicles/${customerid}/${vehicleid}`);\n   //   const sc = this.search(customerid, realCustomers);\n   //   getSelectedCustomer(sc);\n      console.log(v);\n    }\n\n    renderVehicles = () => {\n        const { customerVehicles, selectedCustomer } = this.props\n        const customerid = this.props.selectedCustomer.customerid\n        const newVehicleArray =[]\n         for (var i=0; i < customerVehicles.length; i++) {\n            if (customerVehicles[i].ownerid === customerid) {\n                newVehicleArray.push(customerVehicles[i])\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n        console.log(customerVehicles);\n        console.log(newVehicleArray);\n        const vehicles = newVehicleArray\n        console.log(vehicles);\n        return vehicles.map((v) => {\n            console.log(v);\n            return (\n                <NewDiv>\n                    <Text\n                        dblue22\n                        borderBottom\n                        padding=\"20px 0 5px 0\"\n                        color={Colors.lightBlue}\n                        onClick={() => this.openVehicleDetails(v)}\n                    >\n                        {v.vehicleMake} {v.vehicleModel}\n                    </Text>\n                </NewDiv>\n            )\n        })\n    }\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n    }\n\n    historyAndReload = () => {\n        const { history } = this.props\n        history.push('/login');\n        window.location.reload()\n      }\n    \n    renderNotLoggedIn = () => {\n        return (\n            <div>\n                <MainBG>\n                    <Text\n                    white35\n                    padding='100px 0 50px 0'\n                    maxWidth='600px'\n                    margin='0 auto'\n                    >\n                    You are not logged in. Please click the button below to return to the login screen.\n                    </Text>\n                <Button\n                    standardBtn\n                    margin='0 auto'\n                    onClick={this.historyAndReload}\n                >\n                    <Text\n                    buttonText\n                    >\n                    Login\n                    </Text>\n\n                </Button>\n                </MainBG>\n            </div>\n        )\n    }\n\n  render() {\n    const { realCustomers, selectedCustomer, customerVehicles } = this.props\n    var twonum;\n    if (selectedCustomer) {\n        if (selectedCustomer.phoneNumber2) {\n            twonum = selectedCustomer.phoneNumber2\n        } else {\n            twonum = 'No secondary phone number'\n        }\n    }\n\n    const props = this.props\n    const data = props && props.auth ? props.auth.data : null;\n\n    if (selectedCustomer && data) {\n        return (\n            <MainBG>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Customer Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                         CUSTOMER NAME:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.name}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.phoneNumber1}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER 2:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {twonum}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={mailw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          EMAIL:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.email}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n              <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    height=\"auto\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                            VEHICLES:\n                      </Text>\n                      {this.renderVehicles()}\n                  </InfoEText>\n              </InfoElement>\n              <NewDiv\n                margin=\"0 auto\"\n                width=\"100%\"\n              >\n                  <Button\n                    largeBtn\n                    margin=\"0 auto\"\n                    backgroundColor={Colors.darkBlue}\n                    onClick={() => this.openNewVehicle()}\n                  >\n                    <Text\n                      white20\n                    >\n                      Add New Vehicle\n                    </Text>\n                  </Button>\n              </NewDiv>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getRealCustomers: () => dispatch(getRealCustomers())\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer, getSelectedService } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport mileagew from '../../rersources/svg/mileagew.svg';\nimport servicew from '../../rersources/svg/servicew.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport mailw from '../../rersources/svg/mailw.svg';\nimport carw from '../../rersources/svg/carw.svg';\nimport vinw from '../../rersources/svg/vinw.svg';\nimport licensew from '../../rersources/svg/licensew.svg';\nimport calendarw from '../../rersources/svg/calendarw.svg';\nimport historyw from '../../rersources/svg/historyw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    }\n     \n    @media ${device.laptop} {\n        margin-left: 10%;\n    }\n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n    }\n`\n\nclass VehicleInfo extends Component {\n  componentDidMount() {\n    const { realCustomers } = this.props\n\n    if (!realCustomers || realCustomers.length < 1) {\n        setTimeout(this.getCustomerFromParams, 3000)\n    } else {\n        console.log('There is something')\n        console.log(realCustomers)\n    }\n}\n\ngetCustomerFromParams = () => {\n    const { getSelectedVehicle, getSelectedCustomer, customerVehicles, customerServices, selectedVehicle, realCustomers } = this.props\n    const {\n        match: { params: { vehicleid } }\n    } = this.props\n\n    const {\n        match: { params: { customerid } }\n    } = this.props\n\n    const sv = this.searchV(vehicleid, customerVehicles);\n    const sc = this.searchC(customerid, realCustomers)\n\n    getSelectedVehicle(sv)\n    getSelectedCustomer(sc)\n}\n\n  searchV = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n}\n\nsearchC = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    openServiceScreen = () => {\n        const { getSelectedVehicle, selectedVehicle, history } = this.props\n        const vehicleid = selectedVehicle.vehicleid\n        const customerid = selectedVehicle.ownerid\n        history.push(`/customers/service/${customerid}/${vehicleid}`);\n    }\n\n    openServiceDetails = (v) => {\n        const { history, getSelectedService } = this.props\n        const vehicleid = v.vehicleid\n        const serviceid = v.serviceid\n        const customerid = v.customerid\n        console.log(v)\n        history.push(`/customers/vehicles/${customerid}/${vehicleid}/${serviceid}`);\n        getSelectedService(v);\n      console.log(v);\n      console.log(getSelectedService);\n    }\n\n    renderServices = () => {\n        const { getSelectedVehicle, customerVehicles, customerServices, selectedVehicle } = this.props\n        const newServiceArray = []\n\n        for (var i=0; i < customerServices.length; i++) {\n            if (customerServices[i].vehicleid === selectedVehicle.vehicleid) {\n                newServiceArray.push(customerServices[i]);\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n       const services = newServiceArray\n         console.log(services.length);\n        return services.map((v) => {\n        var jsTime = v.date\n        var timestamp = jsTime.substring(0, jsTime.length - 3)\n        console.log(timestamp);\n        console.log(jsTime);\n        var newDate = new Date(timestamp*1000);\n        var fHours = newDate.getHours();\n        var fMinutes = '0' + newDate.getMinutes();\n\n        var fDay = newDate.getDate();\n        var fMonth = newDate.getMonth();\n        var fYear = newDate.getFullYear();\n        fMonth = fMonth + 1;\n        console.log(fMonth);\n        console.log(fDay);\n        \n        var ampm = fHours >= 12 ? 'pm' : 'am';\n        fHours = fHours % 12;\n        fHours = fHours ? fHours : 12;\n      //  fMinutes = fMinutes < 10 ? '0'+ fMinutes : fMinutes;\n      var formattedTime = fHours + ':' + fMinutes.substr(-2) + ampm;\n      var formattedDate = (`${fMonth}/${fDay}/${fYear}`)\n\n            return (\n                <NewDiv>\n                    <Text\n                        white20\n                        padding=\"20px 0 5px 0\"\n                        onClick={() => this.openServiceDetails(v)}\n                    >\n                        Service - {formattedDate}\n                    </Text>\n                </NewDiv>\n            )\n        })\n    }\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n      }\n\n  render() {\n    const { selectedVehicle, selectedCustomer } = this.props\n    var twonum;\n\n    if (selectedVehicle) {\n        if (selectedVehicle.phoneNumber2) {\n            twonum = selectedVehicle.phoneNumber2\n        } else {\n            twonum = 'No secondary phone number'\n        }\n    }\n\n    if (selectedVehicle && selectedCustomer) {\n        return (\n            <MainBG>\n                <StyledBackIcon\n                onClick={() => this.goBack()}\n                >\n                <SVG src={arrowleftw} />\n            </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Vehicle Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          OWNER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.name}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.phoneNumber1}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER 2:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {twonum}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={calendarw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          YEAR:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleYear}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MAKE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleMake}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MODEL:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleModel}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={mileagew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MILEAGE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleMileage}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={licensew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          LICENSE #:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleLicenseNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={vinw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          VIN #:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleVinNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                <InfoEIcon>\n                      <SVG src={servicew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    height=\"auto\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                            Service History\n                      </Text>\n                      {this.renderServices()}\n                  </InfoEText>\n              </InfoElement>\n              <NewDiv\n                margin=\"0 auto\"\n                width=\"100%\"\n              >\n                  <Button\n                    largeBtn\n                    margin=\"0 auto\"\n                    backgroundColor={Colors.darkBlue}\n                    onClick={() => this.openServiceScreen()}\n                  >\n                    <Text\n                      white20\n                    >\n                      Service This Vehicle\n                    </Text>\n                  </Button>\n              </NewDiv>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   getSelectedService: (service) => dispatch(getSelectedService(service))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(VehicleInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer, getSelectedService } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport detailsw from '../../rersources/svg/detailsw.svg';\nimport mileagew from '../../rersources/svg/mileagew.svg';\nimport pencilw from '../../rersources/svg/pencilw.svg';\nimport calendarw from '../../rersources/svg/calendarw.svg';\nimport historyw from '../../rersources/svg/historyw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n\n    @media ${device.laptop} {\n        margin-left: 10%;\n    }\n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n        max-width: 350px;\n    }\n`\n\nclass ServiceInfo extends Component {\n  componentDidMount() {\n    const { realCustomers } = this.props\n\n    if (!realCustomers || realCustomers.length < 1) {\n        setTimeout(this.getCustomerFromParams, 3000)\n    } else {\n        console.log('There is something')\n        console.log(realCustomers)\n    }\n}\n\ngetCustomerFromParams = () => {\n    const { getSelectedVehicle, getSelectedCustomer, getSelectedService, customerVehicles, customerServices, selectedVehicle, realCustomers } = this.props\n    const {\n        match: { params: { vehicleid } }\n    } = this.props\n\n    const {\n        match: { params: { customerid } }\n    } = this.props\n\n    const {\n        match: { params: { serviceid } }\n    } = this.props\n\n    const sv = this.searchV(vehicleid, customerVehicles);\n    const sc = this.searchC(customerid, realCustomers);\n    const ss = this.searchS(serviceid, customerServices)\n\n    console.log(sv)\n    console.log(ss)\n    console.log(sc)\n\n    getSelectedVehicle(sv)\n    getSelectedCustomer(sc)\n    getSelectedService(ss)\n}\n\n  searchV = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n}\n\nsearchC = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\nsearchS = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].serviceid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n    }\n\n  render() {\n    const { selectedVehicle, selectedCustomer, selectedService } = this.props\n    console.log(this.props.state);\n    var strTime;\n    var strDate;\n\n    if (selectedService) {\n        var jsTime = selectedService.date\n        var timestamp = jsTime.substring(0, jsTime.length - 3)\n        console.log(timestamp);\n        console.log(jsTime);\n        var newDate = new Date(timestamp*1000);\n        var fHours = newDate.getHours();\n        var fMinutes = '0' + newDate.getMinutes();\n\n        var fDay = newDate.getDate();\n        var fMonth = newDate.getMonth();\n        var fYear = newDate.getFullYear();\n        fMonth = fMonth + 1;\n        console.log(fMonth);\n        console.log(fDay);\n        \n        var ampm = fHours >= 12 ? 'pm' : 'am';\n        fHours = fHours % 12;\n        fHours = fHours ? fHours : 12;\n      //  fMinutes = fMinutes < 10 ? '0'+ fMinutes : fMinutes;\n      var formattedTime = fHours + ':' + fMinutes.substr(-2) + ampm;\n      var formattedDate = (`${fMonth}/${fDay}/${fYear}`)\n      //  strDate = (`${fMonth}/${fDay}`);\n\n        return (\n            <MainBG>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Service Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          CUSTOMER NAME\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.customerName}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={calendarw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          DATE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {formattedDate}\n                          &nbsp;\n                          - \n                          &nbsp;\n                          {formattedTime} \n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.phoneNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={mileagew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MILEAGE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.mileage}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={pencilw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          REASON FOR VISIT:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.reason}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={detailsw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          DETAILS:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.details}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   getSelectedService: (service) => dispatch(getSelectedService(service))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(ServiceInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport checkw from '../../rersources/svg/checkw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text'; \n\nconst ConfirmContentContainer = styled.div`\n    @media ${device.tablet} {\n        padding-top: 300px;\n        width: 500px;\n        text-align: center;\n        margin: 0 auto;\n    }\n`\n\nconst ConfirmIconDiv = styled.div`\n    @media ${device.tablet} {\n        width: 200px;\n        height: 200px;\n        margin: 0 auto;  \n    }\n\n    svg {\n        width: 100%\n        height: 100%\n    }\n`\n\nconst ConfirmContentText = styled.div`\n    @media ${device.tablet} {\n        width: 500px;\n        margin: 0 auto;\n        padding-top: 50px;\n        padding-bottom: 50px;\n    }\n`\n\nconst ConfirmButtons = styled.div`\n    @media ${device.tablet} {\n\n    }\n`\n\nclass CustomerConfirmation extends Component {\n    componentDidMount() {\n    }\n\n    search = (id, myArray) => {\n        for (var i=0; i < myArray.length; i++) {\n            if (myArray[i].customerid === id) {\n                return myArray[i];\n            }\n        }\n    }\n\n    openAllVehicles = () => {\n        const { history } = this.props;\n        history.push('/all-customers')\n    }\n    openAddVehicle = () => {\n        const { realCustomers, selectedCustomer, getSelectedCustomer, history } = this.props\n        const currentCus = realCustomers.slice(-1).pop();\n        getSelectedCustomer(currentCus);\n        const customerid = currentCus.customerid\n        history.push(`/new-vehicle/${customerid}`);\n    }\n\n    render() {\n        const { realCustomers, getSelectedCustomer, selectedCustomer } = this.props\n        const props = this.props\n        const data = props && props.auth ? props.auth.data : null;\n\n        if (realCustomers.length > 0 && data) {\n            console.log(realCustomers)\n            const currentCus = realCustomers.slice(-1).pop()\n            console.log(currentCus);\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                            <ConfirmIconDiv>\n                                <SVG src={checkw} />\n                            </ConfirmIconDiv>\n                            <ConfirmContentText>\n                                <Text\n                                    white20\n                                >\n                                    {currentCus.name},\n                                    &nbsp;\n                                The new customer has been added successfully. Would you like to add a vehicle for this customer now?\n                                </Text>\n                        </ConfirmContentText>\n                        <ConfirmButtons>\n                                <Button\n                                    display=\"inline-block\"\n                                    margin=\"0px 5px\"\n                                    width=\"156px\"\n                                    height=\"40px\"\n                                    borderRadius=\"25px\"\n                                    backgroundColor={Colors.fullWhite}\n                                    onClick={() => this.openAllVehicles()}\n                                >\n                                    <Text\n                                        dblue20\n                                    >\n                                        Not Now\n                                    </Text>\n                                </Button>\n                                <Button\n                                    display=\"inline-block\"\n                                    standardBtn\n                                    margin=\"0px 5px\"\n                                    onClick={() => this.openAddVehicle()}\n                                >\n                                    <Text\n                                        white20\n                                    >\n                                        Yes\n                                    </Text>\n                                </Button>\n                            </ConfirmButtons>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                           <p>Loading...</p>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    state: state\n  })\n  \n  const dispatchToProps = (dispatch) => ({\n     \n  })\n  \n  export default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerConfirmation));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport checkw from '../../rersources/svg/checkw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text'; \n\nconst ConfirmContentContainer = styled.div`\n    @media ${device.tablet} {\n        padding-top: 300px;\n        width: 500px;\n        text-align: center;\n        margin: 0 auto;\n    }\n`\n\nconst ConfirmIconDiv = styled.div`\n    @media ${device.tablet} {\n        width: 200px;\n        height: 200px;\n        margin: 0 auto;  \n    }\n\n    svg {\n        width: 100%\n        height: 100%\n    }\n`\n\nconst ConfirmContentText = styled.div`\n    @media ${device.tablet} {\n        width: 500px;\n        margin: 0 auto;\n        padding-top: 50px;\n        padding-bottom: 50px;\n    }\n`\n\nconst ConfirmButtons = styled.div`\n    @media ${device.tablet} {\n\n    }\n`\n\nclass VehicleConfirmation extends Component {\n    componentDidMount() {\n    }\n\n    search = (id, myArray) => {\n        for (var i=0; i < myArray.length; i++) {\n            if (myArray[i].customerid === id) {\n                return myArray[i];\n            }\n        }\n    }\n\n    openAllVehicles = () => {\n        const { history, selectedVehicle, getSelectedVehicle, customerVehicles, selectedCustomer } = this.props\n        history.push('/all-customers');\n    }\n    openAddService = () => {\n        const { realCustomers, selectedCustomer, getSelectedVehicle, history, customerVehicles, selectedVehicle, getSelectedCustomer } = this.props\n        const currentV = customerVehicles.slice(-1).pop();\n\n        const {\n            match: { params: { customerid } }\n        } = this.props\n\n        const vehicleid = currentV.vehicleid\n        const currentCustomer = this.search(customerid, realCustomers)\n\n        getSelectedVehicle(currentV);\n        getSelectedCustomer(currentCustomer)\n    \n\n        console.log(selectedCustomer)\n        console.log(realCustomers)\n\n        history.push(`/customers/service/${customerid}/${vehicleid}`);\n    }\n\n    render() {\n        const { realCustomers, getSelectedCustomer, selectedCustomer } = this.props\n\n        if (realCustomers.length > 0) {\n            console.log(realCustomers)\n            const currentCus = realCustomers.slice(-1).pop()\n            console.log(currentCus);\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                            <ConfirmIconDiv>\n                                <SVG src={checkw} />\n                            </ConfirmIconDiv>\n                            <ConfirmContentText>\n                                <Text\n                                    white20\n                                >\n                                The new vehicle has been added successfully. Would you like to service this customer now?\n                                </Text>\n                        </ConfirmContentText>\n                        <ConfirmButtons>\n                                <Button\n                                    display=\"inline-block\"\n                                    margin=\"0px 5px\"\n                                    width=\"156px\"\n                                    height=\"40px\"\n                                    borderRadius=\"25px\"\n                                    backgroundColor={Colors.fullWhite}\n                                    onClick={() => this.openAllVehicles()}\n                                >\n                                    <Text\n                                        dblue20\n                                    >\n                                        Not Now\n                                    </Text>\n                                </Button>\n                                <Button\n                                    display=\"inline-block\"\n                                    standardBtn\n                                    margin=\"0px 5px\"\n                                    onClick={() => this.openAddService()}\n                                >\n                                    <Text\n                                        white20\n                                    >\n                                        Yes\n                                    </Text>\n                                </Button>\n                            </ConfirmButtons>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                           <p>Loading...</p>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    state: state\n  })\n  \n  const dispatchToProps = (dispatch) => ({\n     \n  })\n  \n  export default withRouter(connect(mapStateToProps, dispatchToProps)(VehicleConfirmation));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {userLogin} from '../../store/actions/customer'\nimport './customers.css';\n\nclass UserLogin extends Component {\n\n  static propTypes = {\n    userLogin: PropTypes.func.isRequired,\n    resSend: PropTypes.string.isRequired\n  }\n\n  static defaultProps = {\n    resSend: ''\n  }\n\n  componentWillMount() {\n    this.props.userLogin();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h2>Res Send User Login</h2>\n        <p>{this.props.resSend}</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  resSend: state.resSend\n})\n\nconst dispatchToProps = (dispatch) => ({\n   userLogin: () => dispatch(userLogin())\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(UserLogin);","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Colors from '../constants/colors';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\n//import ReactSVG from 'react-svg';\nimport SVG from 'react-inlinesvg';\n\nconst FormField = styled.input`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 0px 10px 10px 0px;\n    padding: 0;\n    padding-left: 10px;\n    font-size: 16px;\n\n    @media ${device.tablet} {\n        width: ${({ width }) => (width || '345px')};\n        height: 50px;\n        float: right;\n        margin: 0 auto;\n    }\n`\n\nconst FormFieldContainer = styled.div`\n\n    @media ${device.tablet} {\n        width: ${({ width }) => (width || '417px')};\n        height: 50px;\n        margin-bottom: 50px;\n    }\n\n    border-radius: 10px;\n    -webkit-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    -moz-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n`\n\nconst FormFieldLeft = styled.div`\n    border-radius: 10px 0px 0px 10px;\n    width: 61px;\n    height: 50px;\n    background-color: ${Colors.fullWhite};\n    float: left;\n`\n\nconst FormFieldSplit = styled.div`\n    width: 1px;\n    height: 50px;\n    background: ${Colors.lightBlue};\n    float: left;\n`\n\nconst FormIconContainer = styled(NewDiv)`\n    width: 33px;\n    height: 33px;\n    margin: 0 auto;\n    margin-top: 8px;\n\n    svg {\n        width: 33px;\n        height: 33px;\n    }\n`\n\nexport default ({ input, label, svg, placeholder, defaultValue, value, fieldWidth, containerWidth, meta: { error, touched } }) => {\n    console.log(defaultValue);\n    return (\n        <FormFieldContainer\n            width={containerWidth}\n        >\n                <FormFieldLeft>\n                    <FormIconContainer\n                    >\n                        <SVG src={svg} />\n                    </FormIconContainer>\n                </FormFieldLeft>\n                <FormFieldSplit />\n                <FormField {...input} placeholder={placeholder} value={value} defaultValue={defaultValue} width={fieldWidth} /> <br/>\n                {touched && error}\n        </FormFieldContainer>\n    )\n}\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport emailb from '../../rersources/svg/emailb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport SVG from 'react-inlinesvg';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport StyledBackIcon from './Styled/StyledBackIcon';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          min-height: 100px;\n          margin: 0 auto;  \n    }\n`\n\nconst FIELDS = [\n  {\n    label: 'Customer Name', name: 'cname', svg: userb, placeholder: 'Enter Customer Name...', noValueError: 'You must provide a customer name'\n  },\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter Phone Number...', noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Secondary Phone Number', name: 'pnumber2', svg: phoneb, placeholder: 'Enter Secondary Phone Number', noValueError: 'You must provide a secondary phone number'\n  },\n  {\n    label: 'Customer Email', name: 'email', svg: emailb, placeholder: 'Enter Email...', noValueError: 'You must provide a email address'\n  },\n]\n\nclass AddCustomer extends Component {\n  componentDidMount() {\n    const {showNavBar, toggleNavBar, toggleNavToggle } = this.props\n    if (showNavBar === 'block') {\n      toggleNavBar('none')\n      toggleNavToggle(barsw);\n    } else {\n      console.log('Not showing....');\n    }\n  }\n\n  historyAndReload = () => {\n    const { history } = this.props\n    history.push('/login');\n    window.location.reload()\n  }\n\n  renderNotLoggedIn = () => {\n    return (\n      <div>\n          <MainBG>\n              <Text\n                white35\n                padding='100px 0 50px 0'\n                maxWidth='600px'\n                margin='0 auto'\n              >\n                You are not logged in. Please click the button below to return to the login screen.\n              </Text>\n            <Button\n              standardBtn\n              margin='0 auto'\n              onClick={this.historyAndReload}\n            >\n              <Text\n                buttonText\n              >\n                Login\n              </Text>\n\n            </Button>\n          </MainBG>\n      </div>\n    )\n  }\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          type=\"text\" \n          name={field.name} \n          placeholder={field.placeholder}\n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  refreshWindow = () => {\n    window.location.reload()\n  }\n\n  addNewCustomer = (values) => {\n      const { createNewCustomer, history, realCustomers } = this.props\n      console.log(realCustomers);\n      createNewCustomer(values);\n      history.push('/new-customer/confirmation');\n      setTimeout(this.refreshWindow, 1000)\n  }\n\n  render() {\n    const { createNewCustomer, history } = this.props\n    console.log(createNewCustomer);\n    const props = this.props\n    const data = props && props.auth ? props.auth.data : null;\n\n    if (data) {\n      return (\n        <div>\n            <MainBG>\n              <StyledBackIcon\n                  onClick={() => this.goBack()}\n              >\n                  <SVG src={arrowleftw} />\n              </StyledBackIcon>\n                <MainHeading>\n                  <Text\n                    mainHeading\n                    padding=\"30px 0 50px 0\"\n                  >\n                    Enter The Fields Below\n                  </Text>\n                </MainHeading>\n              <FormContainer\n              >\n                  <form onSubmit={this.props.handleSubmit(values => this.addNewCustomer(values))}>\n                    {this.renderFields()}\n                    <Button\n                      standardBtn\n                      margin=\"0 auto\"\n                      type=\"submit\"\n                    >\n                      <Text\n                        buttonText\n                      >\n                        Submit\n                      </Text>\n                    </Button>\n                  </form>\n              </FormContainer>\n            </MainBG>\n        </div>\n      );\n    } else {\n      return (\n        this.renderNotLoggedIn()\n      )\n    }\n  }\n}\n\nconst validate = (values, props) => {\n  //const { realCustomers } = this.props\n  const errors = {};\n\n  if (!values.cname) {\n    errors.cname = 'ou must provide a customer name'\n  }\n\n  if (!values.email) {\n    errors.email = 'You must provide an email'\n  }\n\n  if (!values.pnumber) {\n    errors.pnumber = 'You must provide a phone number'\n  }\n\n  if (!values.pnumber) {\n    errors.pnumber2 = 'You must provide a secondary phone number'\n  }\n\n \n  for (var i=0; i < props.realCustomers.length; i++) {\n    if (values.email == props.realCustomers[i].email) {\n      errors.email = 'This email is already in use'\n      console.log('ERROR');\n    } else {\n      console.log('SUCCESS');\n    }\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newCustomerForm'\n})(AddCustomer)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport numberb from '../../rersources/svg/numberb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { getSelectedVehicle } from '../../store/reducers/environment';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          min-height: 100px;\n          margin: 0 auto;  \n    }\n`\n\nconst DetailsTextarea = styled.textarea`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 10px;\n    padding: 0;\n    padding-left: 10px;\n    padding-top: 10px;\n    font-size: 16px;\n\n  @media ${device.tablet} {\n    width: 500px;\n    height: 250px;\n    margin: 0 auto;\n    margin-bottom: 50px;  \n  }\n`\n\nconst FIELDS = []\n\nclass AddService extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      currentDetailsText: ''\n    }\n\n    this.updateTextarea = this.updateTextarea.bind(this)\n  }\n\n  componentDidMount() {\n    const { selectedCustomer, selectedVehicle, getRealCustomers, realCustomers } = this.props\n    console.log(selectedVehicle)\n    console.log(selectedCustomer)\n\n    if (!selectedCustomer) {\n      setTimeout(this.getCustomerFromParams, 3000)\n    } else {\n        console.log('There is something')\n        console.log(realCustomers)\n    }\n  }\n\n  historyAndReload = () => {\n    const { history } = this.props\n    history.push('/login');\n    window.location.reload()\n  }\n\n  renderNotLoggedIn = () => {\n    return (\n      <div>\n          <MainBG>\n              <Text\n                white35\n                padding='100px 0 50px 0'\n                maxWidth='600px'\n                margin='0 auto'\n              >\n                You are not logged in. Please click the button below to return to the login screen.\n              </Text>\n            <Button\n              standardBtn\n              margin='0 auto'\n              onClick={this.historyAndReload}\n            >\n              <Text\n                buttonText\n              >\n                Login\n              </Text>\n\n            </Button>\n          </MainBG>\n      </div>\n    )\n  }\n\n  searchc = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n  }\n\n  searchv = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n  }\n  \n  getCustomerFromParams = () => {\n      const { realCustomers, selectedCustomer, customerVehicles, getSelectedCustomer, getSelectedVehicle } = this.props\n      const {\n          match: { params: { customerid } }\n      } = this.props\n\n      const {\n        match: { params: { vehicleid } }\n    } = this.props\n\n      const sc = this.searchc(customerid, realCustomers);\n      const sv = this.searchv(vehicleid, customerVehicles);\n\n      console.log(sc)\n      \n      getSelectedCustomer(sc);\n      getSelectedVehicle(sv);\n  }\n\n  renderFields = () => {\n    const { selectedCustomer, selectedVehicle } = this.props\n    console.log(selectedCustomer)\n    console.log(selectedVehicle)\n\n    if (selectedCustomer && selectedVehicle) {\n      console.log(selectedVehicle)\n      const name = {\n        label: 'Name', name: 'name', svg: userb, placeholder: 'Enter name...', noValueError: 'You must provide a name', defaultValue: selectedCustomer.name\n      }\n  \n      const vMileage = {\n        label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter mileage...', noValueError: 'You must provide the mileage', defaultValue: selectedVehicle.vehicleMileage\n      }\n  \n      const number = {\n        label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...', noValueError: 'You must provide a phone number', defaultValue: selectedCustomer.phoneNumber1\n      }\n  \n     const reason = {\n        label: 'Reason For Visit', name: 'reason', svg: pencilb, placeholder: 'Enter reason...', noValueError: 'You must provide a reason for visit'\n     }\n  \n      const tNumber = {\n        label: 'Tag Number', name: 'tnumber', svg: numberb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number'\n      }\n  \n      if (FIELDS.length < 1) {\n        FIELDS.push(name)\n        FIELDS.push(vMileage)\n        FIELDS.push(number)\n        FIELDS.push(reason)\n        FIELDS.push(tNumber)\n      }\n    }\n\n    if (selectedCustomer && selectedVehicle) {\n      return FIELDS.map(field => {\n        return(\n          <Field \n            key={field.name}\n            label={field.label} \n            type=\"text\" \n            name={field.name} \n            component={TextField} \n            fieldWidth=\"428px\"\n            containerWidth=\"500px\" \n            placeholder={field.placeholder}\n            value='value'\n            defaultValue={field.defaultValue}\n            svg={field.svg}\n        />\n        )  \n      });\n    } else {\n        return (\n          <div>Loading.....</div>\n        )\n    }\n  }\n\n  renderDetailsField = () => {\n    console.log('Here is the details textarea....')\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  updateTextarea = (e) => {\n    const newDetailsText = e.target.value\n    this.setState({ currentDetailsText: newDetailsText});\n    console.log(this.state.currentDetailsText)\n  }\n\n  refreshWindow = () => {\n    window.location.reload()\n  }\n\n  render() {\n    const { createNewService, selectedCustomer, selectedVehicle } = this.props\n    const props = this.props\n    const currentDetailsText = this.state.currentDetailsText\n\n    const data = props && props.auth ? props.auth.data : null;\n\n    const createBody = (values, props) => {\n      const history = this.props.history;\n        let dataa = {\n          values: values,\n          props: props,\n          detailsText: currentDetailsText\n        }\n\n        var myJSON = JSON.stringify(dataa)\n\n        console.log(`Here is the data ${myJSON}`)\n        createNewService(dataa);\n        history.push('/customers/chat/service');\n        setTimeout(this.refreshWindow, 1000)\n    }\n\n    if (data) {\n      return (\n        <div>\n        <MainBG>\n          <StyledBackIcon\n              onClick={() => this.goBack()}\n          >\n             <SVG src={arrowleftw} />\n          </StyledBackIcon>\n            <MainHeading>\n              <Text\n                mainHeading\n                padding=\"30px 0 50px 0\"\n              >\n                Enter The Fields Below\n              </Text>\n            </MainHeading>\n          <FormContainer\n          >\n              <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n                {this.renderFields()}\n                <DetailsTextarea \n                  value={this.state.currentDetailsText}\n                  onChange={this.updateTextarea}\n                  placeholder='Enter Details...'\n                />\n                <Button\n                  standardBtn\n                  margin=\"0 auto\"\n                  type=\"submit\"\n                >\n                  <Text\n                    buttonText\n                  >\n                    Submit\n                  </Text>\n                </Button>\n              </form>\n          </FormContainer>\n        </MainBG>\n    </div>\n      );\n    } else {\n      return (\n        this.renderNotLoggedIn()\n      )\n    }\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = 'Please confirm customer name by selecting the text field.'\n  }\n\n  if (!values.pnumber) {\n    errors.pnumber = 'Please confirm customer phone number by selecting the text field.'\n  }\n\n  if (!values.reason) {\n    errors.reason = 'You must provide a reason for service.'\n  }\n\n  if (!values.tnumber) {\n    errors.ptnumber = 'You must provide a tag number'\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newServiceForm'\n})(AddService)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport calendarb from '../../rersources/svg/calendarb.svg';\nimport carb from '../../rersources/svg/carb.svg';\nimport licenseb from '../../rersources/svg/licenseb.svg';\nimport vinb from '../../rersources/svg/vinb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          min-height: 100px;\n          margin: 0 auto;  \n    }\n`\n\nconst FIELDS = []\n\nclass AddVehicle extends Component {\n  componentDidMount() {\n    const { selectedCustomer, realCustomers, getRealCustomers } = this.props\n\n    if (!selectedCustomer) {\n        setTimeout(this.getCustomerFromParams, 3000)\n    } else {\n        console.log('There is something')\n        console.log(realCustomers)\n    }\n}\n\nsearch = (id, myArray) => {\n  for (var i=0; i < myArray.length; i++) {\n      if (myArray[i].customerid === id) {\n          return myArray[i];\n      }\n  }\n}\n\ngetCustomerFromParams = () => {\n    const { realCustomers, selectedCustomer, getSelectedCustomer } = this.props\n\n    const {\n        match: { params: { customerid } }\n    } = this.props\n\n    console.log(realCustomers)\n    console.log(this.props)\n    const sc = this.search(customerid, realCustomers);\n    console.log(sc)\n    getSelectedCustomer(sc);\n}\n\n  renderFields = () => {\n    const { selectedCustomer } = this.props\n\n    if (selectedCustomer) {\n      const number = {\n        label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...', noValueError: 'You must provide a phone number', defaultValue: selectedCustomer.phoneNumber1\n      }\n  \n      const number2 = {\n        label: 'Secondary Phone Number', name: 'pnumber2', svg: phoneb, placeholder: 'Enter secondary phone number...',  noValueError: 'You must provide a secondary phone number', defaultValue: selectedCustomer.phoneNumber2\n      }\n  \n      const vYear = {\n        label: 'Vehicle Year', name: 'vyear', svg: calendarb, placeholder: 'Enter vehicle year...', noValueError: 'You must provide a vehicle year'\n      }\n  \n      const vMake = {\n        label: 'Vehicle Make', name: 'vmake', svg: carb, placeholder: 'Enter vehicle make...', noValueError: 'You must provide a vehicle make'\n      }\n  \n      const vModel = {\n        label: 'Vehicle Model', name: 'vmodel', svg: carb, placeholder: 'Enter vehicle model..', noValueError: 'You must provide a vehicle model'\n      }\n  \n      const licenseP = {\n        label: 'License Plate Number', name: 'lpnumber', svg: licenseb, placeholder: 'Enter license plate number...', noValueError: 'You must provide a license plate number'\n      }\n  \n      const vVin = {\n        label: 'Vehicle Vin Number', name: 'vnumber', svg: vinb, placeholder: 'Enter vehicle vin number...', noValueError: 'You must provide a vin number'\n      }\n  \n      const vMileage = {\n        label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter mileage...', noValueError: 'You must provide the mileage'\n      }\n  \n      if (FIELDS.length < 1) {\n        FIELDS.push(number)\n        FIELDS.push(number2)\n        FIELDS.push(vYear)\n        FIELDS.push(vMake)\n        FIELDS.push(vModel)\n        FIELDS.push(licenseP)\n        FIELDS.push(vVin)\n        FIELDS.push(vMileage)\n    }\n  }\n\n    console.log(selectedCustomer)\n\n    if (selectedCustomer) {\n      return FIELDS.map(field => {\n        return(\n          <Field \n            key={field.name}\n            label={field.label} \n            type=\"text\" \n            name={field.name} \n            component={TextField} \n            fieldWidth=\"428px\"\n            containerWidth=\"500px\" \n            placeholder={field.placeholder}\n            value='value'\n            defaultValue={field.defaultValue}\n            svg={field.svg}\n        />\n        )  \n      });\n    } else {\n      return (\n        <div>\n          Loading.......\n        </div>\n      )\n    }\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history, selectedCustomer } = this.props\n    console.log(this.props)\n    console.log(`Here is the selected customer ${selectedCustomer}`);\n    history.go(-1)\n  }\n\n  historyAndReload = () => {\n    const { history } = this.props\n    history.push('/login');\n    window.location.reload()\n  }\n\n  renderNotLoggedIn = () => {\n    return (\n      <div>\n          <MainBG>\n              <Text\n                white35\n                padding='100px 0 50px 0'\n                maxWidth='600px'\n                margin='0 auto'\n              >\n                You are not logged in. Please click the button below to return to the login screen.\n              </Text>\n            <Button\n              standardBtn\n              margin='0 auto'\n              onClick={this.historyAndReload}\n            >\n              <Text\n                buttonText\n              >\n                Login\n              </Text>\n\n            </Button>\n          </MainBG>\n      </div>\n    )\n  }\n\n  refreshWindow = () => {\n    window.location.reload()\n  }\n\n  render() {\n    const { createNewVehicle, selectedCustomer, customerid } = this.props\n    console.log(this.props);\n    console.log(selectedCustomer);\n    const props = this.props\n    const data = props && props.auth ? props.auth.data : null;\n\n    const createBody = (values, props) => {\n      const history = props.history\n        let dataa = {\n          values: values,\n          props: props\n        }\n        console.log('creating new vehicle.....')\n        createNewVehicle(dataa);\n        console.log(history)\n        history.push(`/new-vehicle/${selectedCustomer.customerid}/confirmation`);\n        setTimeout(this.refreshWindow, 1000);\n    }\n\n    if (data) {\n      return (\n            <div>\n            <MainBG>\n              <StyledBackIcon\n                  onClick={() => this.goBack()}\n              >\n                <SVG src={arrowleftw} />\n              </StyledBackIcon>\n                <MainHeading>\n                  <Text\n                    mainHeading\n                    padding=\"30px 0 50px 0\"\n                  >\n                    Enter The Fields Below\n                  </Text>\n                </MainHeading>\n              <FormContainer\n              >\n                  <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n                    {this.renderFields()}\n                    <Button\n                      standardBtn\n                      margin=\"0 auto\"\n                      type=\"submit\"\n                    >\n                      <Text\n                        buttonText\n                      >\n                        Submit\n                      </Text>\n                    </Button>\n                  </form>\n              </FormContainer>\n            </MainBG>\n        </div>\n      );\n    } else {\n      return (\n        this.renderNotLoggedIn()\n      )\n    }\n  }\n}\n\nconst validate = (values, props, field) => {\n  const errors = {};\n\n  if (!values.cname) {\n    errors.cname = 'You must provide a customer name'\n  }\n\n  if (!values.vyear) {\n    errors.vyear = 'You must provide a vehicle year'\n  }\n\n  if (!values.vmake) {\n    errors.vmake = 'You must provide a vehicle make'\n  }\n\n  if (!values.vmodel) {\n    errors.vmodel = 'You must provide a vehicle model'\n  }\n\n  if (!values.lpnumber) {\n    errors.lpnumber = 'You must provide a license number'\n  }\n\n  if (!values.vnumber) {\n    errors.vnumber = 'You must provide a vin number'\n  }\n\n  if (!values.mileage) {\n    errors.mileage = 'You must provide vehicle mileage'\n  }\n\n  if (!values.pnumber) {\n    errors.pnumber = 'Please confirm phone number by selecting the text field.'\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newVehicleForm'\n})(AddVehicle)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewUser } from '../../store/actions/customer';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport Colors from '../constants/colors';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport { MainBG, NewDiv } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst RegisterContainer = styled(NewDiv)`\n  @media ${device.tablet} {\n    width: 418px;\n    height: 700px;\n    margin: 0 auto;\n  } \n\n`\n\n\nconst FIELDS = [\n  {\n    label: 'Email', name: 'email', svg: userb, placeholder: 'Enter Email....', noValueError: 'You must provide a email address'\n  },\n  {\n    label: 'Password', name: 'password', svg: lockb, placeholder: 'Enter Password....', noValueError: 'You must provide a password'\n  },\n  {\n    label: 'Confirm Password', name: 'password2', svg: lockb, placeholder: 'Confirm Password....', noValueError: 'Please confirm your password'\n  },\n  {\n    label: 'Company Name', name: 'companyName', svg: lockb, placeholder: 'Enter Company Name....', noValueError: 'Please enter a name for your company'\n  }\n]\n\nclass RegisterUser extends Component {\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          placeholder={field.placeholder}\n          type=\"text\" \n          name={field.name} \n          component={TextField}\n          fieldWidth=\"345px\"\n          containerWidth=\"417px\" \n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  handleNewUser = (values) => {\n    const { createNewUser, history } = this.props\n    createNewUser(values);\n  //  history.push('/login')\n  }\n\n  render() {\n    const { createNewUser } = this.props\n    return (\n      <div>\n          <MainBG>\n            <RegisterContainer\n            >\n              <NewDiv\n                padding=\"200px 0 56px 0\"\n              >\n                  <img src = { mainLogo } />\n                </NewDiv>\n                <form onSubmit={this.props.handleSubmit(values => this.handleNewUser(values))}>\n                  {this.renderFields()}\n                  <Button\n                    width=\"416px\"\n                    height=\"50px\"\n                    backgroundColor={Colors.darkBlue}\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Sign Up\n                    </Text>\n                  </Button>\n                </form>\n            </RegisterContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n    console.log(values);\n     if (values.password != values.password2) {\n         errors.password2 = 'Passwords do not match'\n    };\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newUserForm'\n})(RegisterUser)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewUser } from '../../store/actions/customer';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport { MainBG, NewDiv } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport colors from '../constants/colors';\n\nconst LoginContainer = styled(NewDiv)`\n  @media ${device.tablet} {\n    width: 418px;\n    height: 700px;\n    margin: 0 auto;\n  } \n\n`\n\nconst FIELDS = [\n  {\n    label: 'Email', name: 'email', placeholder: 'Enter Email....', svg: userb, noValueError: 'You must provide a email address'\n  },\n  {\n    label: 'Password', name: 'password', placeholder: 'Enter Password....', svg: lockb, noValueError: 'You must provide a password'\n  }\n]\n\nclass LoginUser extends Component {\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          type=\"text\" \n          name={field.name} \n          placeholder={field.placeholder}\n          component={TextField} \n      />\n      )  \n    });\n  }\n\n  handleLoginSubmit = (values) => {\n    const { userLogin, history } = this.props\n    userLogin(values);\n   // window.location.reload()\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  render() {\n    const { userLogin, logoutUser } = this.props\n    return (\n      <div>\n          <MainBG>\n            <LoginContainer\n            >\n              <NewDiv\n                padding=\"200px 0 56px 0\"\n              >\n                  <img src = { mainLogo } />\n                </NewDiv>\n                <form onSubmit={this.props.handleSubmit(values => this.handleLoginSubmit(values))}>\n                  {this.renderFields()}\n                  <Button\n                    width=\"416px\"\n                    height=\"50px\"\n                    backgroundColor={colors.darkBlue}\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Sign In\n                    </Text>\n                  </Button>\n                </form>\n            </LoginContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n    console.log(values);\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'userLoginForm'\n})(LoginUser)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport numberb from '../../rersources/svg/numberb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst DetailsTextarea = styled.textarea`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 10px;\n    padding: 0;\n    padding-left: 10px;\n    padding-top: 10px;\n    font-size: 16px;\n\n  @media ${device.tablet} {\n    width: 500px;\n    height: 250px;\n    margin: 0 auto;\n    margin-bottom: 50px;  \n  }\n`\n\nclass EndService extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      currentDetailsText: ''\n    }\n    this.updateTextarea = this.updateTextarea.bind(this)\n  }\n\n  componentDidMount() {\n      const { selectedServiceMessage } = this.props\n      this.setState({ currentDetailsText: selectedServiceMessage.details })\n  }\n\n  renderFields = () => {\n    const { selectedCustomer, selectedServiceMessage } = this.props\n\n    const FIELDS = [\n        {\n          label: 'Name', name: 'name', svg: userb, placeholder: 'Enter name...', noValueError: 'You must provide a name', defaultValue: selectedServiceMessage.customerName\n        },\n        {\n          label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter vehicle mileage...', noValueError: 'You must provide a value for mileage', defaultValue: selectedServiceMessage.mileage\n        },\n        {\n          label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...',  noValueError: 'You must provide a phone number', defaultValue: selectedServiceMessage.phoneNumber\n        },\n        {\n          label: 'Reason For Visit', name: 'reason', svg: pencilb, placeholder: 'Enter reason...', noValueError: 'You must provide a reason for visit', defaultValue: selectedServiceMessage.reason\n        },\n        {\n          label: 'Tag Number', name: 'tnumber', svg: numberb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number', defaultValue: selectedServiceMessage.tagNumber\n        }\n      ]\n\n\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          type=\"text\" \n          name={field.name} \n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n          placeholder={field.placeholder}\n          defaultValue={field.defaultValue}\n          value=\"value\"\n          svg={field.svg}\n      />\n      )  \n    });\n  }\n\n  renderDetailsField = () => {\n    console.log('Here is the details textarea....')\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  updateTextarea = (e) => {\n    const newDetailsText = e.target.value\n    this.setState({ currentDetailsText: newDetailsText});\n    console.log(this.state.currentDetailsText)\n  }\n\n  refreshWindow = () => {\n    window.location.reload()\n  }\n\n  render() {\n    const { selectedCustomer, selectedVehicle, selectedServiceText, selectedServiceMessage, updateService } = this.props\n    const props = this.props\n    const currentDetailsText = this.state.currentDetailsText\n\n    console.log(selectedServiceMessage)\n\n    const createBody = (values, props) => {\n      const history = this.props.history;\n        let dataa = {\n          values: values,\n          props: props,\n          detailsText: currentDetailsText\n        }\n\n        var myJSON = JSON.stringify(dataa)\n\n        console.log(`Here is the data ${myJSON}`)\n        updateService(dataa);\n        history.push('/customers/chat/service')\n        setTimeout(this.refreshWindow, 1000)\n    }\n\n    return (\n      <div>\n      <MainBG>\n          <MainHeading>\n            <Text\n              mainHeading\n              padding=\"30px 0 50px 0\"\n            >\n              Confirm Information Below\n            </Text>\n          </MainHeading>\n        <FormContainer\n        >\n            <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n              {this.renderFields()}\n              <DetailsTextarea \n                value={this.state.currentDetailsText}\n                onChange={this.updateTextarea}\n                placeholder='Enter Details...'\n              />\n              <Button\n                standardBtn\n                margin=\"0 auto\"\n                type=\"submit\"\n              >\n                <Text\n                  buttonText\n                >\n                  Submit\n                </Text>\n              </Button>\n            </form>\n        </FormContainer>\n      </MainBG>\n  </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.mileage) {\n    errors.mileage = 'Please confirm mileage by selecting the text field.'\n  }\n\n  return errors\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newServiceForm'\n})(EndService)","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors';\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport plusw from '../../../rersources/svg/plusw.svg';\nimport pointw from '../../../rersources/svg/pointw.svg';\nimport phonebookw from '../../../rersources/svg/phonebookw.svg';\nimport settingsw from '../../../rersources/svg/settingsw.svg';\nimport returnw from '../../../rersources/svg/returnw.svg';\nimport barsw from '../../../rersources/svg/barsw.svg';\nimport { NewDiv } from '../Styled/StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\n\nexport const MainNavContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        background-color: ${Colors.black};\n        width: 100%;\n        opacity: .8;\n        z-index: 90;\n        display: ${({ display }) => (display || 'none')};\n        position: fixed;\n        top: 0;\n        bottom: 0;\n    }\n`\n\nexport const HeaderContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        background-color: ${Colors.lightBlue};\n        float: left;\n        position: fixed;\n        height: 100vh;\n        z-index: 100;\n        display: ${({ display }) => (display || 'none')};\n        border-bottom-right-radius: 20px;\n        border-top-right-radius: 20px;\n    } \n`\n\nexport const HeaderTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        height: 207px;\n        padding-top: 15px;\n        background-color: ${Colors.fullWhite};\n        border-top-right-radius: 20px;\n    } \n`\n\nexport const HeaderTopImg = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100px;\n        height: 100px;\n        border-radius: 50px;\n        margin: 0 auto;\n        background: ${Colors.darkBlue};\n    }\n`\n\nexport const HeaderTopText = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 92%;\n        margin: 0 auto;\n        margin-top: 15px;\n    }\n`\n\nexport const HeaderLIContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        height: 70px;\n        width: 100%\n        border-bottom: 1px solid white;\n        background: ${Colors.lightBlue};\n    }\n`\n\nexport const LILeft = styled(NewDiv)`\n    @media ${device.tablet} {\n        float: left;\n        width: 80px;\n        height: 70px;\n    }\n`\n\nexport const LIRight = styled(NewDiv)`\n    @media ${device.tablet} {\n        float: right;\n        width: 243px;\n        height: 70px;\n        text-align: left;\n        line-height: 70px;\n    }\n`\n\nexport const NavLIIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding-top: 20px;\n        width: 30px;\n        height: 30px;\n        margin: 0 auto;\n\n       svg {\n           width: 30px;\n           height: 30px;\n       } \n    }\n`\n\nexport const NavToggleIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        height: 50px;\n        width: 50px;\n        position: fixed;\n        bottom: 35px;\n        left: 25px;\n        display: ${({ display }) => (display || 'none')};\n        z-index: 999;\n\n        svg {\n            height: 50px;\n            width: 50px;\n        }\n    }\n`\n\nclass StyledNavBar extends Component  {\n\n    handleLogout = () => {\n        const { logoutUser, history } = this.props\n        console.log('Handling logout....')\n        logoutUser();\n        history.push('/')\n        const reload = () => {\n            window.location.reload()\n        }\n        setTimeout(reload, 2000)\n    }\n\n    render() {\n        const { renderContent, toggleNavBar, toggleNavToggle, fetchUser, showNavBar, showNavToggle, auth } = this.props\n        const data = this.props && this.props.auth ? this.props.auth.data: null\n        var companyName;\n        if (data) {\n            companyName = data.email\n        } else {\n            companyName = 'No Company Name'\n        }\n        console.log(showNavToggle);\n        console.log(showNavBar);\n        const toggleNav = () => {\n            if (showNavBar === 'block') {\n                toggleNavBar('none')\n                toggleNavToggle(barsw);\n            } else {\n                toggleNavBar('block');\n                toggleNavToggle(returnw);\n            }\n        }\n        return (\n          <div>\n              <MainNavContainer \n                display={showNavBar}\n              />\n            <HeaderContainer\n                display={showNavBar}\n            >\n                <HeaderTop>\n                      <HeaderTopImg />\n                      <HeaderTopText>\n                          <Text\n                            lblue22\n                            padding=\"10px 0 0 0\"\n                            maxWidth=\"300px\"\n                          >\n                              {companyName}\n                          </Text>\n                          <Text\n                            gray30\n                            padding=\"10px 0 0 0\"\n                          >\n                              Welcome\n                          </Text>\n                      </HeaderTopText>\n                </HeaderTop>\n                <Link to ='/new-customer'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={plusw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              New Customer\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/customers/chat/service'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={pointw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              Current Vehicles\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/all-customers'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={phonebookw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              All Customers\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                  <HeaderLIContainer\n                    onClick={this.handleLogout}\n                  >\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={settingsw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              {renderContent()}\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n            </HeaderContainer>\n             <NavToggleIcon\n             onClick={toggleNav}\n             display='block'\n           >\n               <SVG src={showNavToggle} />\n           </NavToggleIcon>\n           </div>\n          )\n    }\n   \n  }\n\n  export default withRouter(StyledNavBar);\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\n\nclass CustomerService extends Component {\n\n  componentDidMount() {\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    openServiceCustomer = () => {\n        const { history } = this.props\n        history.push(`/new-vehicle`);\n    }\n\n  render() {\n    const realCustomers = this.props.state.realCustomers\n    const selectedCustomer = this.props.selectedCustomer\n\n    console.log(realCustomers.length)\n    console.log(selectedCustomer);\n    console.log(this.props);\n\n    if (realCustomers.length >= 1) {\n        return (\n            <div>\n              <h2>Customer Service</h2>\n              <Button onClick={() => this.openServiceCustomer()}>\n                  Add Vehicle\n              </Button>\n            </div>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerService));","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Provider } from 'react-redux'\nimport logo from './logo.svg'\nimport mainLogo from './rersources/mainLogo.png';\nimport './App.css';\nimport store from './store';\nimport history from './history';\nimport Customers from './components/Customer/customers';\nimport ChatMessenger from './components/Customer/ChatMessenger';\nimport AllCustomers from './components/Customer/AllCustomers';\nimport CustomerInfo from './components/Customer/CustomerInfo';\nimport VehicleInfo from './components/Customer/VehicleInfo';\nimport ServiceInfo from './components/Customer/ServiceInfo';\nimport CustomerConfirmation from './components/Customer/CustomerConfirmation';\nimport VehicleConfirmation from './components/Customer/VehicleConfirmation';\nimport UserLogin from './components/Customer/userLogin';\nimport AddCustomer from './components/Customer/AddCustomer';\nimport AddService from './components/Customer/AddService';\nimport AddVehicle from './components/Customer/AddVehicle';\nimport RegisterUser from './components/Customer/RegisterUser';\nimport LoginUser from './components/Customer/LoginUser';\nimport EndService from './components/Customer/EndService';\nimport StyledNavBar from './components/Customer/Styled/StyledNavBar';\nimport CustomerService from './components/Customer/CustomerService';\nimport { connect } from 'react-redux';\n\nimport { createNewCustomer, createNewUser, createNewVehicle, userLogin, logoutUser, fetchUser, getRealCustomers, getCustomerVehicles, createNewService, getCustomerServices, createNewToMessage, getCustomerActiveToMessages, updateService } from './store/actions/customer';\nimport { toggleNavBar, toggleNavToggle, getSelectedCustomer, getSelectedVehicle, getCurrentEmailId } from './store/reducers/environment';\n\nimport styled from 'styled-components';\n\nimport { BrowserRouter as Router, Route, Link, withRouter, Switch } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\n\nconst Code = () => {\n  return (\n    <div>\n      Code Code Code\n    </div>\n  )\n}\n\nclass App extends Component {\n\n  componentDidMount() {\n    const { fetchUser, getRealCustomers, getCustomerVehicles, getCustomerServices, getCustomerActiveToMessages } = this.props;\n    getRealCustomers();\n    getCustomerVehicles();\n    getCustomerServices();\n    fetchUser();\n    getCustomerActiveToMessages();\n  }\n\n  renderContent = () => {\n    const props = this.props\n    const auth = this.props.auth\n    const data = props && props.auth ? props.auth.data : null;\n    switch (data) {\n      case null:\n        return 'Still deciding';\n      case false:\n        return 'Login';\n      case '':\n        return 'Login';\n      default:\n        return 'Logout';\n    }\n  }\n\n  renderCorrectPage = () => {\n    const props = this.props\n    const auth = this.props.auth\n    const data = props && props.auth ? props.auth.data: null\n\n    const userLogin = this.props.userLogin;\n    const logoutUser = this.props.logoutUser;\n    const getSelectedCustomer = this.props.getSelectedCustomer;\n    const environment = this.props.environment;\n\n    switch (data) {\n      case null:\n        console.log('null');\n        return (\n          <LoginUser\n           userLogin={userLogin}\n            logoutUser={logoutUser}\n          />\n        )\n      case false:\n          console.log('false');\n          return (\n            <LoginUser\n              userLogin={userLogin}\n              logoutUser={logoutUser}\n              history={history}\n           />\n        )\n      case '':\n          console.log('empty');\n          return (\n            <LoginUser\n              userLogin={userLogin}\n              logoutUser={logoutUser}\n              history={history}\n           />\n        )\n      default:\n          console.log('default');\n        return (\n            <AllCustomers\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              history={history}\n             />\n        )\n\n    }\n  }\n\n  render () {\n    const createNewCustomer = this.props.createNewCustomer;\n    const createNewUser = this.props.createNewUser;\n    const createNewVehicle = this.props.createNewVehicle;\n    const createNewService = this.props.createNewService;\n    const updateService = this.props.updateService;\n    const createNewToMessage = this.props.createNewToMessage;\n    const userLogin = this.props.userLogin;\n    const logoutUser = this.props.logoutUser;\n    const toggleNavBar = this.props.toggleNavBar;\n    const toggleNavToggle = this.props.toggleNavToggle;\n    const getSelectedCustomer = this.props.getSelectedCustomer;\n    const getSelectedVehicle = this.props.getSelectedVehicle;\n    const getRealCustomers = this.props.getRealCustomers;\n    const getCurrentEmailId = this.props.getCurrentEmailId\n    const environment = this.props.environment;\n    const realCustomers = this.props.state.realCustomers;\n    const customerVehicles = this.props.state.customerVehicles;\n    const customerServices = this.props.state.customerServices;\n    const activeToMessages = this.props.state.activeToMessages;\n    const auth = this.props.auth;\n;\n    console.log(this.props);\n    console.log(this.props.environment);\n    console.log(realCustomers);\n    console.log(customerVehicles);\n    console.log(customerServices);\n    console.log(activeToMessages)\n\n    return (\n          <div className=\"App\">\n            <StyledNavBar\n              renderContent={this.renderContent} \n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              fetchUser={fetchUser}\n              showNavBar={environment.showNavBar}\n              showNavToggle={environment.showNavToggle}\n              logoutUser={logoutUser}\n              history={history}\n              auth={auth}\n            />\n            <Switch>\n            <Route exact path=\"/\" \n            render={(props) => \n            <div>\n                {this.renderCorrectPage()}\n              </div>\n                }\n             />\n            <Route exact path=\"/login\" \n            render={(props) => <div>\n              {this.renderCorrectPage()}\n            </div> }\n            history={history}\n             />\n            <Route exact path=\"/register\" \n            render={(props) => <RegisterUser\n            createNewUser={createNewUser}\n            history={history}\n             />  }\n             />\n            <Route exact path=\"/new-customer\" \n            render={(props) => <AddCustomer\n            createNewCustomer={createNewCustomer}\n            toggleNavBar={toggleNavBar}\n            toggleNavToggle={toggleNavToggle}\n            showNavBar={environment.showNavBar}\n            history={history}\n            realCustomers={realCustomers}\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            getCurrentEmailId={getCurrentEmailId}\n            auth={auth}\n            \n             />  }\n             />\n             <Route exact path=\"/new-vehicle/:customerid\" \n            render={(props) => <AddVehicle\n            {...props}\n            createNewVehicle={createNewVehicle}\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            getRealCustomers={getRealCustomers}\n            realCustomers={realCustomers}\n            auth={auth}\n            history={history}\n\n             />  }\n             />\n             <Route exact path=\"/new-service\" \n            render={(props) => <AddService\n            createNewService={createNewService}\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            customerVehicles={customerVehicles}\n            getSelectedVehicle={getSelectedVehicle}\n            getSelectedCustomer={getSelectedCustomer}\n            auth={auth}\n            history={history}\n\n             />  }\n             />\n             <Route exact path=\"/end-service\" \n            render={(props) => <EndService\n            selectedServiceMessage={environment.selectedServiceMessage}\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            updateService={updateService}\n            auth={auth}\n            history={history}\n\n             />  }\n             />\n             <Route exact path=\"/new-customer/confirmation\" \n            render={(props) => <CustomerConfirmation\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            realCustomers={realCustomers}\n            auth={auth}\n            history={history}\n\n             />  }\n             />\n\n            <Route exact path=\"/new-vehicle/:customerid/confirmation\" \n            render={(props) => <VehicleConfirmation\n            {...props}\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            getSelectedCustomer={getSelectedCustomer}\n            realCustomers={realCustomers}\n            customerVehicles={customerVehicles}\n            getSelectedVehicle={getSelectedVehicle}\n            auth={auth}\n            history={history}\n\n             />  }\n             />\n\n            <Route exact path=\"/all-customers\" \n            render={(props) => <AllCustomers\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              history={history}\n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              showNavBar={environment.showNavBar}\n              auth={auth}\n\n             />  }\n             />\n             <Route exact path=\"/customers/:customerid\" \n              render={(props) => <CustomerInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n              auth={auth}\n\n             />  }\n             />\n             <Route exact path=\"/customers/vehicles/:customerid/:vehicleid\" \n              render={(props) => <VehicleInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n              customerServices={customerServices}\n              auth={auth}\n\n             />  }\n             />\n             <Route exact path=\"/customers/vehicles/:customerid/:vehicleid/:serviceid\" \n              render={(props) => <ServiceInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n              customerServices={customerServices}\n              selectedService={environment.selectedService}\n              auth={auth}\n\n             />  }\n             />\n             <Route exact path=\"/customers/service/:customerid/:vehicleid\" \n              render={(props) => <AddService\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              selectedVehicle={environment.selectedVehicle}\n              customerVehicles={customerVehicles}\n              getSelectedVehicle={getSelectedVehicle}\n              realCustomers={realCustomers}\n              history={history}\n              createNewService={createNewService}\n              auth={auth}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/chat/service\" \n              render={(props) => <ChatMessenger\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              selectedVehicle={environment.selectedVehicle}\n              realCustomers={realCustomers}\n              history={history}\n              customerServices={customerServices}\n              createNewToMessage={createNewToMessage}\n              activeToMessages={activeToMessages}\n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              showNavBar={environment.showNavBar}\n              auth={auth}\n\n             />  }\n             />\n            <Route exact path=\"/settings\" component={Code} />\n            <Route exact path=\"/logout\" component={Code} logoutUser={logoutUser} />\n            </Switch>\n          </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { \n        auth: state.auth,\n        environment: state.environment,\n        state: state\n      }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createNewCustomer: (values) => dispatch(createNewCustomer(values)),\n    createNewUser: (values) => dispatch(createNewUser(values)),\n    createNewVehicle: (values) => dispatch(createNewVehicle(values)),\n    createNewService: (values) => dispatch(createNewService(values)),\n    updateService: (values) => dispatch(updateService(values)),\n    createNewToMessage: (value) => dispatch(createNewToMessage(value)),\n    userLogin: (values) => dispatch(userLogin(values)),\n    logoutUser: (values) => dispatch(logoutUser(values)),\n    fetchUser: (values) => dispatch(fetchUser(values)),\n    toggleNavBar: (display) => dispatch(toggleNavBar(display)),\n    toggleNavToggle: (display) => dispatch(toggleNavToggle(display)),\n    getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n    getSelectedVehicle: (vehicle) => dispatch(getSelectedVehicle(vehicle)),\n    getCurrentEmailId: (email) => dispatch(getCurrentEmailId(email)),\n    getRealCustomers: () => dispatch(getRealCustomers()),\n    getCustomerVehicles: () => dispatch(getCustomerVehicles()),\n    getCustomerServices: () => dispatch(getCustomerServices()),\n    getCustomerActiveToMessages: () => dispatch(getCustomerActiveToMessages())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport history from './history';\n\nimport { Provider } from 'react-redux';\n//import reducers from './reducers';\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter\n            history={history}\n        >\n            <App \n                history={history}\n            />\n        </BrowserRouter>\n    </Provider>, \n    document.querySelector('#root')\n);\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/barsw.03d3330b.svg\";","module.exports = __webpack_public_path__ + \"static/media/phoneb.cbe528a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/mainLogo.546207c0.png\";","module.exports = __webpack_public_path__ + \"static/media/userw.60f972be.svg\";","module.exports = __webpack_public_path__ + \"static/media/phonew.1d986067.svg\";","module.exports = __webpack_public_path__ + \"static/media/mileageb.096767ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencilb.fc4dabf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/carw.8e8e5ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/closer.e4f6d492.svg\";","module.exports = __webpack_public_path__ + \"static/media/mileagew.f795afec.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendarw.702919de.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkw.ed1b0bd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/numberb.10d41aa2.svg\";","module.exports = __webpack_public_path__ + \"static/media/mailw.1bafb9c5.svg\";"],"sourceRoot":""}