{"version":3,"sources":["rersources/svg/carb.svg","rersources/svg/settingsw.svg","rersources/svg/historyw.svg","rersources/svg/templatey.svg","rersources/svg/senddb.svg","rersources/svg/licensew.svg","rersources/svg/detailsw.svg","rersources/svg/mileagew.svg","rersources/svg/pencilw.svg","rersources/svg/emailb.svg","rersources/svg/calendarb.svg","rersources/svg/licenseb.svg","rersources/svg/userb.svg","rersources/svg/vinb.svg","rersources/svg/plusw.svg","rersources/svg/pointw.svg","rersources/svg/phonebookw.svg","rersources/svg/returnw.svg","logo.svg","rersources/svg/lockb.svg","rersources/svg/arrowleftw.svg","store/reducers/customer.js","store/actions/constants.js","store/reducers/environment.js","store/reducers/realCustomer.js","store/reducers/customerVehicle.js","store/reducers/customerService.js","store/reducers/customerToMessage.js","store/reducers/index.js","store/reducers/auth.js","store/index.js","history.js","store/actions/customer.js","components/Customer/customers.js","components/Customer/Styled/StyledMediaQuery.jsx","components/constants/colors.js","components/Customer/Styled/StyledComponents.jsx","components/Customer/Styled/Button.jsx","components/Customer/Styled/Text.jsx","components/Customer/Styled/StyledOverlayTemplate.jsx","components/Customer/Styled/StyledOverlayEndService.jsx","components/Customer/CustomerCellRow.js","components/Customer/Styled/StyledBackIcon.jsx","components/Customer/ChatMessenger.js","components/Customer/AllCustomers.js","components/Customer/CustomerInfo.js","components/Customer/VehicleInfo.js","components/Customer/ServiceInfo.js","components/Customer/CustomerConfirmation.js","components/Customer/VehicleConfirmation.js","components/Customer/userLogin.js","components/Customer/TextField.js","components/Customer/AddCustomer.js","components/Customer/AddService.js","components/Customer/AddVehicle.js","components/Customer/RegisterUser.js","components/Customer/LoginUser.js","components/Customer/EndService.js","components/Customer/Styled/StyledNavBar.jsx","components/Customer/CustomerService.js","App.js","registerServiceWorker.js","index.js","rersources/svg/phoneb.svg","rersources/svg/barsw.svg","rersources/mainLogo.png","rersources/svg/userw.svg","rersources/svg/phonew.svg","rersources/svg/mileageb.svg","rersources/svg/hashb.svg","rersources/svg/pencilb.svg","rersources/svg/carw.svg","rersources/svg/closer.svg","rersources/svg/calendarw.svg","rersources/svg/checkw.svg","rersources/svg/mailw.svg","rersources/svg/vinw.svg"],"names":["module","exports","__webpack_require__","p","customerReducer","state","arguments","length","undefined","_ref","type","payload","initialState","showNavBar","showNavToggle","barsw","selectedCustomer","selectedVehicle","selectedService","selectedServiceMesssage","selectedMessageText","showTemplateOverlay","showEndServiceOverlay","currentEmailId","search","currentFilter","getSelectedCustomer","customer","GET_SELECTED_CUSTOMER","TOGGLE_NAV_BAR","TOGGLE_NAV_TOGGLE","GET_SELECTED_VEHICLE","GET_SELECTED_SERVICE","GET_SELECTED_SERVICE_MESSAGE","GET_SELECTED_MESSAGE_TEXT","TOGGLE_TEMPLATE_OVERLAY","TOGGLE_END_SERVICE_OVERLAY","GET_CURRENT_EMAIL_ID","UPDATE_CUSTOMER_SEARCH","GET_CURRENT_FILTER","customerRealReducer","customerVehicleReducer","customerServiceReducer","customerActiveToMessageReducer","combineReducers","environment","action","Object","objectSpread","display","vehicle","service","selectedServiceMessage","sm","text","status","email","filter","customers","activeToMessages","realCustomers","customerVehicles","customerServices","activeServices","customerActiveServiceReducer","auth","form","reduxForm","middleware","thunk","withDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","apply","createBrowserHistory","getRealCustomers","dispatch","fetch","then","res","json","getCustomerActiveToMessages","userLogin","values","_ref7","asyncToGenerator","regenerator_default","a","mark","_callee7","wrap","_context7","prev","next","axios","post","sent","location","reload","console","log","data","stop","_x7","this","fetchUser","_ref8","_callee8","_context8","get","_x8","Customers","props","getCustomers","react_default","createElement","map","key","id","firstName","lastName","Component","defaultProps","connect","size","device","mobileS","concat","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","colors","fullWhite","lightGray","lighterGray","lightBlue","darkBlue","black","brightRed","NewDiv","styled","div","_templateObject","width","_ref2","height","_ref3","margin","_ref4","padding","_ref5","border","_ref6","borderRadius","textAlign","zIndex","_ref9","float","_ref10","_ref11","background","MainBG","_templateObject2","MainHeading","_templateObject3","Button","button","Button_templateObject","color","Colors","backgroundColor","is","Button_templateObject2","Button_templateObject3","_templateObject4","_templateObject5","_templateObject6","Text","Text_templateObject","lineHeight","maxWidth","fontWeight","fontStyle","fontFamily","Text_templateObject2","Text_templateObject3","Text_templateObject4","Text_templateObject5","Text_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","propTypes","PropTypes","string","largeText","bool","subtext","subtitle","error","gray","pointer","underline","inline","StyledOverlayContainer","StyledOverlayTemplate_templateObject","StyledOverlayContentBox","StyledOverlayTemplate_templateObject2","OverlayContentContainer","StyledOverlayTemplate_templateObject3","CustomerInputMessage","input","StyledOverlayTemplate_templateObject4","CustomerInputMessageLarge","textarea","StyledOverlayTemplate_templateObject5","TemplateNavContainer","StyledOverlayTemplate_templateObject6","CloseTemplateOverlay","StyledOverlayTemplate_templateObject7","StyledOverlayTemplate","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleNew","e","value","preventDefault","template1","text1","customerName","text2","newText","customText","onSubmit","assertThisInitialized","Styled_Text","white20","onChange","handleChange","bind","name","Styled_Button","standardBtn","onClick","_this$props","getSelectedMessageText","toggleTemplateOverlay","template2","_this$props2","template3","_this$props3","template4","_this$props4","closeTemplateOverlayFunc","forwardTemplate","messageTemplates","templateNumber","setState","backTemplate","event","target","currentTemplate","lib_default","src","closer","dblue16","white16","StyledOverlayEndService_templateObject","StyledOverlayEndService_templateObject2","StyledOverlayEndService_templateObject3","StyledOverlayEndService_templateObject4","StyledOverlayEndService_templateObject5","StyledOverlayEndService_templateObject6","StyledOverlayEndService_templateObject7","StyledOverlayEndService","handleEnd","history","toggleEndServiceOverlay","push","closeEndServiceOverlayFunc","StyledOverlayEndService_StyledOverlayContainer","StyledOverlayEndService_StyledOverlayContentBox","StyledOverlayEndService_CloseTemplateOverlay","dblue22","StyledOverlayEndService_TemplateNavContainer","CustomerCellDiv","CustomerCellRow_templateObject","CellID","CustomerCellRow_templateObject2","CellInfoLeft","CustomerCellRow_templateObject3","CellInfoRight","CustomerCellRow_templateObject4","CustomerCellRow","myArray","i","customerid","openCustomerProfile","_this2","phoneNumber1","lblue20","acName","borderBottom","withRouter","StyledBackIcon","StyledBackIcon_templateObject","MessengerContainer","ChatMessenger_templateObject","MessengerContainerTop","ChatMessenger_templateObject2","MessengerTopText","ChatMessenger_templateObject3","MessageCell","ChatMessenger_templateObject4","MessageCellContentTop","ChatMessenger_templateObject5","MessageCellContentBottom","ChatMessenger_templateObject6","MessengerSearchBar","ChatMessenger_templateObject7","MessengerTextBox","ChatMessenger_templateObject8","MessengerChatContainer","ChatMessenger_templateObject9","MessengerChatTopSec","ChatMessenger_templateObject10","MessengerFixedBottom","ChatMessenger_templateObject11","ChatMessagesContainer","ChatMessenger_templateObject12","BottomLeftButton","ChatMessenger_templateObject13","BottomRightButton","ChatMessenger_templateObject14","BottomMiddleText","ChatMessenger_templateObject15","ChatToRow","ChatMessenger_templateObject16","ChatMessageToBubble","ChatMessenger_templateObject17","ChatMessenger","serviceid","openThisChat","v","getSelectedServiceMessage","displayOverlay","selectedMesageText","Styled_StyledOverlayTemplate","displayOverlayEnd","Styled_StyledOverlayEndService","endService","renderChatCells","activeServiceArray","reverse","lastMessage","vMessages","slice","ellipsis","textMessage","renderServiceId","dblue30","checkMessageFunc","_this$props5","renderChatMessages","_this$props6","displayedToMessages","toggleTemplateTrue","_this$props7","sendNewMessage","_this$props8","createNewToMessage","phoneNumber","vehicleid","user","forceUpdate","correctChats","_this$props9","toggleNavBar","toggleNavToggle","go","_this$props10","Styled_StyledBackIcon","goBack","arrowleftw","white35","placeholder","templatey","method","senddb","getActiveCustomerServices","customerActiveServices","CustomerSearchBar","AllCustomers_templateObject","CustomerSearchSelectSec","AllCustomers_templateObject2","SearchNameBox","AllCustomers_templateObject3","NameSelectDiv","AllCustomers_templateObject4","StyledSelect","select","AllCustomers_templateObject5","SearchButton","AllCustomers_templateObject6","AllCsBG","AllCustomers_templateObject7","AllCustomers","searchCustomers","updateCustomerSearch","s","document","getElementById","strSelect","options","selectedIndex","updateFilter","getCurrentFilter","cFilter","renderRows","filteredCustomers","realCustomersReversed","item","toLowerCase","filterVal","match","number","d","Customer_CustomerCellRow","assign","mainHeading","CustomerInfo_templateObject","InfoElement","CustomerInfo_templateObject2","InfoEIcon","CustomerInfo_templateObject3","InfoEText","CustomerInfo_templateObject4","marginLeft","CustomerInfo","openNewVehicle","openVehicleDetails","getSelectedVehicle","renderVehicles","newVehicleArray","ownerid","vehicles","vehicleMake","vehicleModel","params","sc","userw","customerIE","phonew","mailw","carw","largeBtn","VehicleInfo_templateObject","VehicleInfo_templateObject2","VehicleInfo_templateObject3","VehicleInfo_templateObject4","VehicleInfo","openServiceScreen","openServiceDetails","getSelectedService","renderServices","newServiceArray","services","VehicleInfo_InfoElement","VehicleInfo_InfoEIcon","VehicleInfo_InfoEText","phoneNumber2","calendarw","vehicleYear","licensew","vehicleLicenseNumber","vinw","vehicleVinNumber","ServiceInfo_templateObject","ServiceInfo_templateObject2","ServiceInfo_templateObject3","ServiceInfo_templateObject4","ServiceInfo","jsTime","date","timestamp","substring","newDate","Date","fHours","getHours","fMinutes","getMinutes","fDay","getDate","fMonth","getMonth","fYear","getFullYear","ampm","formattedTime","substr","formattedDate","ServiceInfo_InfoElement","ServiceInfo_InfoEIcon","ServiceInfo_InfoEText","mileagew","mileage","pencilw","reason","detailsw","details","ConfirmContentContainer","CustomerConfirmation_templateObject","ConfirmIconDiv","CustomerConfirmation_templateObject2","ConfirmContentText","CustomerConfirmation_templateObject3","ConfirmButtons","CustomerConfirmation_templateObject4","CustomerConfirmation","openAllVehicles","openAddVehicle","pop","currentCus","checkw","dblue20","VehicleConfirmation_templateObject","VehicleConfirmation_templateObject2","VehicleConfirmation_templateObject3","VehicleConfirmation_templateObject4","VehicleConfirmation","openAddService","VehicleConfirmation_ConfirmContentContainer","VehicleConfirmation_ConfirmIconDiv","VehicleConfirmation_ConfirmContentText","VehicleConfirmation_ConfirmButtons","UserLogin","resSend","FormField","TextField_templateObject","FormFieldContainer","TextField_templateObject2","FormFieldLeft","TextField_templateObject3","FormFieldSplit","TextField_templateObject4","FormIconContainer","TextField_templateObject5","TextField","svg","label","defaultValue","fieldWidth","containerWidth","_ref3$meta","meta","touched","FormContainer","AddCustomer_templateObject","FIELDS","userb","noValueError","phoneb","emailb","AddCustomer","renderFields","field","Field","component","handleInputChange","addNewCustomer","createNewCustomer","handleSubmit","buttonText","validate","errors","forEach","AddService_templateObject","DetailsTextarea","AddService_templateObject2","mileageb","pencilb","hashb","AddService","renderDetailsField","updateTextarea","newDetailsText","currentDetailsText","createNewService","AddService_FormContainer","dataa","detailsText","myJSON","JSON","stringify","createBody","AddVehicle_templateObject","calendarb","carb","licenseb","vinb","AddVehicle","createNewVehicle","AddVehicle_FormContainer","RegisterContainer","RegisterUser_templateObject","lockb","RegisterUser","handleNewUser","createNewUser","mainLogo","password","password2","LoginContainer","LoginUser_templateObject","LoginUser","handleLoginSubmit","logoutUser","EndService_templateObject","EndService_templateObject2","EndService","tagNumber","selectedServiceText","updateService","EndService_FormContainer","EndService_DetailsTextarea","MainNavContainer","StyledNavBar_templateObject","HeaderContainer","StyledNavBar_templateObject2","HeaderTop","StyledNavBar_templateObject3","HeaderTopImg","StyledNavBar_templateObject4","HeaderTopText","StyledNavBar_templateObject5","HeaderLIContainer","StyledNavBar_templateObject6","LILeft","StyledNavBar_templateObject7","LIRight","StyledNavBar_templateObject8","NavLIIcon","StyledNavBar_templateObject9","NavToggleIcon","StyledNavBar_templateObject10","StyledNavBar","handleLogout","companyName","renderContent","lblue22","gray30","react_router_dom","to","plusw","navItem","pointw","phonebookw","settingsw","returnw","CustomerService","openServiceCustomer","Code","App","renderCorrectPage","Customer_LoginUser","Customer_AllCustomers","getCustomerVehicles","getCustomerServices","getCurrentEmailId","className","Styled_StyledNavBar","react_router","exact","path","render","Customer_RegisterUser","Customer_AddCustomer","Customer_AddVehicle","Customer_AddService","Customer_EndService","Customer_CustomerConfirmation","Customer_VehicleConfirmation","Customer_CustomerInfo","Customer_VehicleInfo","Customer_ServiceInfo","Customer_ChatMessenger","_callee","_context","_x","_callee3","_context3","_x3","_callee2","_context2","_x2","_callee4","_context4","_x4","_callee5","_context5","_x5","_callee6","_context6","_x6","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","es","store","src_App_0","querySelector","URL","process","origin","addEventListener","response","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dc0aadc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carb.3154024e.svg\";","module.exports = __webpack_public_path__ + \"static/media/settingsw.923e5774.svg\";","module.exports = __webpack_public_path__ + \"static/media/historyw.ee726142.svg\";","module.exports = __webpack_public_path__ + \"static/media/templatey.be1a3992.svg\";","module.exports = __webpack_public_path__ + \"static/media/senddb.0cb7205c.svg\";","module.exports = __webpack_public_path__ + \"static/media/licensew.ec0917c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/detailsw.1a5681fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/mileagew.f795afec.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencilw.9c7b621e.svg\";","module.exports = __webpack_public_path__ + \"static/media/emailb.49db445e.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendarb.a503a49e.svg\";","module.exports = __webpack_public_path__ + \"static/media/licenseb.7c356553.svg\";","module.exports = __webpack_public_path__ + \"static/media/userb.ea158943.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinb.036b5b43.svg\";","module.exports = __webpack_public_path__ + \"static/media/plusw.3538fda8.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointw.4ed024ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/phonebookw.38f17819.svg\";","module.exports = __webpack_public_path__ + \"static/media/returnw.9a134c4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/lockb.726d79e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowleftw.a55b94fb.svg\";","import {GET_CUSTOMERS} from '../actions/constants'\n\nconst customerReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_CUSTOMERS:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerReducer;\n","export const GET_CUSTOMERS = \"GET_CUSTOMERS\";\nexport const GET_REAL_CUSTOMERS = \"GET_REAL_CUSTOMERS\";\nexport const UPDATE_CUSTOMER = \"REMOVE_CUSTOMER\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const GET_VEHICLES = \"GET_VEHICLES\";\nexport const GET_SERVICES = \"GET_SERVICES\";\nexport const GET_ACTIVE_SERVICES = \"GET_ACTIVE_SERVICES\";\nexport const GET_ACTIVE_TO_MESSAGES = \"GET_ACTIVE_TO_MESSAGES\";\n","import lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\n\n// Reducer\nconst initialState = {\n    showNavBar: 'none',\n    showNavToggle: barsw,\n    selectedCustomer: null,\n    selectedVehicle: null,\n    selectedService: null,\n    selectedServiceMesssage: null,\n    selectedMessageText: null,\n    showTemplateOverlay: false,\n    showEndServiceOverlay: false,\n    currentEmailId: '',\n    search: '',\n    currentFilter: 'Name'\n};\n\nexport function toggleNavBar(display) {\n    return {\n        type: TOGGLE_NAV_BAR,\n        display\n    }\n}\n\nexport function toggleNavToggle(display) {\n    return {\n        type: TOGGLE_NAV_TOGGLE,\n        display\n    }\n}\n\nexport function getSelectedCustomer(customer) {\n    return {\n        type: GET_SELECTED_CUSTOMER,\n        customer\n    }\n}\n\nexport function getSelectedVehicle(vehicle) {\n    return {\n        type: GET_SELECTED_VEHICLE,\n        vehicle\n    }\n}\n\nexport function getSelectedService(service) {\n    return {\n        type: GET_SELECTED_SERVICE,\n        service\n    }\n}\n\nexport function getSelectedServiceMessage(sm) {\n    return {\n        type: GET_SELECTED_SERVICE_MESSAGE,\n        sm\n    }\n}\n\nexport function getSelectedMessageText(text) {\n    return {\n        type: GET_SELECTED_MESSAGE_TEXT,\n        text\n    }\n}\n\nexport function toggleTemplateOverlay(status) {\n    return {\n        type: TOGGLE_TEMPLATE_OVERLAY,\n        status\n    }\n}\n\nexport function toggleEndServiceOverlay(status) {\n    return {\n        type: TOGGLE_END_SERVICE_OVERLAY,\n        status\n    }\n}\n\nexport function getCurrentEmailId(email) {\n    return {\n        type: GET_CURRENT_EMAIL_ID,\n        email\n    }\n}\n\nexport function updateCustomerSearch(search) {\n    return {\n        type: UPDATE_CUSTOMER_SEARCH,\n        search\n    }\n}\n\nexport function getCurrentFilter(filter) {\n    return {\n        type: GET_CURRENT_FILTER,\n        filter\n    }\n}\n\nconst TOGGLE_NAV_BAR = 'TOGGLE_NAV_BAR';\nconst TOGGLE_NAV_TOGGLE = 'TOGGLE_NAV_TOGGLE';  \nconst GET_SELECTED_CUSTOMER = 'GET_SELECTED_CUSTOMER';\nconst GET_SELECTED_VEHICLE = 'GET_SELECTED_VEHICLE';\nconst GET_SELECTED_SERVICE = 'GET_SELECTED_SERVICE';\nconst GET_SELECTED_SERVICE_MESSAGE = 'GET_SELECTED_SERVICE_MESSAGE';\nconst GET_SELECTED_MESSAGE_TEXT = 'GET_SELECTED_MESSAGE_TEXT';\nconst TOGGLE_TEMPLATE_OVERLAY = 'TOGGLE_TEMPLATE_OVERLAY';\nconst TOGGLE_END_SERVICE_OVERLAY = 'TOGGLE_END_SERVICE_OVERLAY';\nconst GET_CURRENT_EMAIL_ID = 'GET_CURRENT_EMAIL_ID';\nconst UPDATE_CUSTOMER_SEARCH = 'UPDATE_CUSTOMER_SEARCH';\nconst GET_CURRENT_FILTER = 'GET_CURRENT_FILTER';\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n    case TOGGLE_NAV_BAR:\n        return {\n            ...state,\n            showNavBar: action.display\n        }\n    case TOGGLE_NAV_TOGGLE:\n        return {\n            ...state,\n            showNavToggle: action.display\n        }\n    case GET_SELECTED_CUSTOMER:\n        return {\n            ...state,\n            selectedCustomer: action.customer\n        }\n    case GET_SELECTED_VEHICLE:\n        return {\n            ...state,\n            selectedVehicle: action.vehicle\n        }\n    case GET_SELECTED_SERVICE:\n        return {\n            ...state,\n            selectedService: action.service\n        }\n    case GET_SELECTED_SERVICE_MESSAGE:\n        return {\n            ...state,\n            selectedServiceMessage: action.sm\n        }\n    case GET_SELECTED_MESSAGE_TEXT:\n        return {\n            ...state,\n            selectedMessageText: action.text\n        }\n    case TOGGLE_TEMPLATE_OVERLAY:\n        return {\n            ...state,\n            showTemplateOverlay: action.status\n        }\n    case TOGGLE_END_SERVICE_OVERLAY:\n        return {\n            ...state,\n            showEndServiceOverlay: action.status\n        }\n    case GET_CURRENT_EMAIL_ID:\n        return {\n            ...state,\n            currentEmailId: action.email\n        }\n    case UPDATE_CUSTOMER_SEARCH:\n        return {\n            ...state,\n            search: action.search\n        }\n    case GET_CURRENT_FILTER:\n        return {\n            ...state,\n            currentFilter: action.filter\n        }\n    default:\n        return state;\n    }\n}\n","import {GET_REAL_CUSTOMERS} from '../actions/constants'\n\nconst customerRealReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_REAL_CUSTOMERS:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerRealReducer;","import {GET_VEHICLES} from '../actions/constants'\n\nconst customerVehicleReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_VEHICLES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerVehicleReducer;","import {GET_SERVICES} from '../actions/constants'\n\nconst customerServiceReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_SERVICES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerServiceReducer;","import {GET_ACTIVE_TO_MESSAGES} from '../actions/constants'\n\nconst customerActiveToMessageReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_ACTIVE_TO_MESSAGES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerActiveToMessageReducer;","import {combineReducers} from 'redux';\nimport customerReducer from './customer';\nimport auth from './auth';\nimport environment from './environment';\nimport { reducer as reduxForm } from 'redux-form';\nimport customerRealReducer from './realCustomer';\nimport customerVehicleReducer from './customerVehicle';\nimport customerServiceReducer from './customerService';\nimport customerActiveServiceReducer from './customerService';\nimport customerActiveToMessageReducer from './customerToMessage';\n\nexport default combineReducers({\n  environment: environment,\n  customers: customerReducer,\n  activeToMessages: customerActiveToMessageReducer,\n  realCustomers: customerRealReducer,\n  customerVehicles: customerVehicleReducer,\n  customerServices: customerServiceReducer,\n  activeServices: customerActiveServiceReducer,\n  auth: auth,\n  form: reduxForm\n});\n","import {FETCH_USER} from '../actions/constants'\n\nexport default function(state = null, action) {\n    switch (action.type) {\n        case FETCH_USER:\n            return action.payload || false;\n        default:\n            return state;\n    }\n}","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleware = [\n  thunk\n]\nconst withDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(rootReducer, withDevTools(\n  applyMiddleware(...middleware)\n))\n","import { createBrowserHistory, createHashHistory } from 'history';\n\nexport default createBrowserHistory();","import axios from 'axios';\nimport {GET_CUSTOMERS, UPDATE_CUSTOMER, GET_REAL_CUSTOMERS, FETCH_USER, GET_VEHICLES, GET_SERVICES, GET_ACTIVE_SERVICES, GET_ACTIVE_TO_MESSAGES} from './constants';\n\nexport const getCustomers = () => dispatch => {\n  return fetch('/api/customers')\n    .then(res => res.json())\n    .then(customers => dispatch({type: GET_CUSTOMERS, payload: customers}))\n}\n\nexport const getRealCustomers = () => dispatch => {\n  return fetch('/all-customers')\n    .then(res => res.json())\n    .then(realCustomers => dispatch({type: GET_REAL_CUSTOMERS, payload: realCustomers}))\n}\n\nexport const getCustomerVehicles = () => dispatch => {\n  return fetch('/customer-vehicles')\n  .then(res => res.json())\n  .then(customerVehicles => dispatch({type: GET_VEHICLES, payload: customerVehicles}))\n}\n\nexport const getCustomerServices = () => dispatch => {\n  return fetch('/customer/vehicles-services')\n  .then(res => res.json())\n  .then(customerServices => dispatch({type: GET_SERVICES, payload: customerServices}))\n}\n\nexport const getActiveCustomerServices = () => dispatch => {\n  return fetch('/customers/chat/service')\n  .then(res => res.json())\n  .then(customerActiveServices => dispatch({type: GET_ACTIVE_SERVICES, payload: customerActiveServices}))\n}\n\nexport const getCustomerActiveToMessages = () => dispatch => {\n  return fetch('/customers/chat/service/messages')\n  .then(res => res.json())\n  .then(activeToMessages => dispatch({type: GET_ACTIVE_TO_MESSAGES, payload: activeToMessages}))\n}\n\nexport const createNewCustomer = (values) => async dispatch => {\n  const res = await axios.post('/new-customer', values);\n  console.log('Here is the new customer nfndfnsdfnskdhfkshdf')\n  dispatch({type: GET_CUSTOMERS, payload: res.data});\n  window.location.reload();\n}\n\nexport const createNewVehicle = (dataa) => async dispatch => {\n  const res = await axios.post('/new-vehicle', dataa);\n  dispatch({type: GET_CUSTOMERS, payload: res.data});\n}\n\nexport const createNewUser = (values) => async dispatch => {\n  const res = await axios.post('/register', values);\n  console.log('Here is the new user being added.')\n  dispatch({type: UPDATE_CUSTOMER, payload: res.data})\n}\n\nexport const createNewService = (dataa) => async dispatch => {\n  const res = await axios.post('/customers/service/:customerid', dataa);\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const updateService = (dataa) => async dispatch => {\n  const res = await axios.post('/end-service', dataa);\n  console.log('Updating the service!')\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const createNewToMessage = (value) => async dispatch => {\n  console.log(value)\n  const res = await axios.post('/customers/chat/service', value);\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const userLogin = (values) => async dispatch => {\n  const res = await axios.post('/login', values);\n  window.location.reload();\n  console.log('Here is the new user being logged in.')\n  dispatch({type: UPDATE_CUSTOMER, payload: res.data})\n}\n\nexport const logoutUser = () => dispatch => {\n  return fetch('/logout')\n  .then(res => res.json())\n    .then(customers => dispatch({type: GET_CUSTOMERS, payload: customers}))\n};\n\nexport const fetchUser = () => async dispatch => {\n   const res = await axios.get('/current_user')\n    dispatch({ type: FETCH_USER, payload: res });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nclass Customers extends Component {\n\n  static propTypes = {\n    getCustomers: PropTypes.func.isRequired,\n    customers: PropTypes.array.isRequired\n  }\n\n  static defaultProps = {\n    customers: []\n  }\n\n  componentWillMount() {\n    this.props.getCustomers();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h2>Customers</h2>\n        <ul>\n        {this.props.customers.map(customer =>\n          <li key={customer.id}>{customer.firstName} {customer.lastName}</li>\n        )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getCustomers: () => dispatch(getCustomers())\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(Customers);\n","//StyledMediaQuery\n\nconst size = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '834px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px'\n}\n\n\nexport const device = {\n    mobileS: `(min-width: ${size.mobileS})`,\n    mobileM: `(min-width: ${size.mobileM})`,\n    mobileL: `(min-width: ${size.mobileL})`,\n    tablet: `(min-width: ${size.tablet})`,\n    laptop: `(min-width: ${size.laptop})`,\n    laptopL: `(min-width: ${size.laptopL})`,\n    desktop: `(min-width: ${size.desktop})`,\n    desktopL: `(min-width: ${size.desktop})`\n};","export default {\n\tfullWhite: '#ffffff',\n\tlightGray: '#A0A0A0',\n    lighterGray: '#DEDEDE',\n    lightBlue: '#008ECC',\n    darkBlue: '#004A6A',\n    black: '#000000',\n    brightRed: '#F20B37'\n};","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\n\nexport const NewDiv = styled.div`\n\twidth: ${({ width }) => (width || 'auto')};\n\theight: ${({ height }) => (height || 'auto')};\n\tmargin: ${({ margin }) => (margin || 'auto')};\n\tpadding: ${({ padding }) => (padding || '0')};\n\tborder: ${({ border }) => (border || 'none')};\n\tborder-radius: ${({ borderRadius }) => (borderRadius || 'none')};\n\ttext-align: ${({ textAlign }) => (textAlign || 'auto')};\n\tz-index: ${({ zIndex }) => (zIndex || 'auto')};\n\tfloat: ${({ float }) => (float || 'none')};\n    display: ${({ display }) => (display || 'block')};\n    background: ${({ background }) => (background || 'none')};\n`\n\nexport const MainBG = styled.div`\n    width: 100%;\n    background: rgb(0,142,204);\n\tbackground: linear-gradient(90deg, rgba(0,142,204,1) 0%, rgba(89,200,248,1) 100%);\n\theight: 1200px;\n\n    @media ${device.tablet} {\n        \n    }\n`\n\nexport const MainHeading = styled(NewDiv)`\n\t@media ${device.tablet} {\n\t\tmax-width: 500px;\n\t\tmargin: 0 auto;\n\t}\n`","import React from 'react'\nimport styled from 'styled-components'\nimport is from 'styled-is';\n\nimport Colors from '../../constants/colors'\n\nimport { device } from './StyledMediaQuery';\n\n\nconst Button = styled.button`\n    border-radius: ${({ borderRadius }) => (borderRadius || '10px')};\n    color: ${({ color }) => (color || Colors.fullWhite)};\n    border: ${({ border }) => (border || 'none')};;\n    width: ${({ width }) => (width || '150px')};\n    height: ${({ height }) => (height || '40px')};\n    margin ${({ margin }) => (margin || '0')}; \n    padding ${({ padding }) => (padding || '0')}; \n    background-color: ${({ backgroundColor }) => (backgroundColor || 'initial')};\n    display: ${({ display }) => (display || 'flex')};\n    -webkit-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    -moz-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    transition: all ease .3s;\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    :hover{\n        box-shadow: 0 6px 12px 0 rgba(0,0,0,0.20), 0 1px 4px 0 rgba(0,0,0,0.30);\n    }\n    :active{\n        box-shadow: 0 2px 4px 0 rgba(0,0,0,0.20), 0 1px 3px 0 rgba(0,0,0,0.30);\n    }\n\n    ${is('primary')`\n\n    `}\n    ${is('secondary')`\n\n    `}\n    ${is('invalid')`\n        background-color: ${Colors.fullWhite};\n    `}\n    \n    ${is('standardBtn')`\n        width: 156px;\n        height: 40px;\n        border-radius: 20px;\n        background-color: ${Colors.darkBlue};\n    `}\n\n    ${is('largeBtn')`\n        width: 328px;\n        height: 40px;\n        border-radius: 50px;\n        background-color: ${Colors.darkBlue};\n    `}\n\n\n`\nexport default Button\n","import React from 'react'\nimport styled from 'styled-components'\nimport is from 'styled-is';\nimport PropTypes from 'prop-types';\n\nimport Colors from '../../constants/colors'\n\nimport { device } from './StyledMediaQuery';\n\nconst Text = styled.p`\n\tfont-size: 16px;\n\tline-height: ${({ lineHeight }) => (lineHeight || '16px')};\n\tcolor: ${({ color }) => (color || Colors.fullWhite)};\n\tmargin: ${props => (props.margin || '0')};\n\tpadding: ${props => (props.padding || '0')};\n    max-width: ${props => (props.maxWidth || 'none')};\n    font-weight: ${({ fontWeight }) => (fontWeight || 'normal')};\n    font-style: ${({ fontStyle }) => (fontStyle || 'normal ')};\n\tfont-family: ${({ fontFamily }) => (fontFamily || 'Helvetica')};\n\tbackground: ${({ background }) => (background || 'none')};\n\tfloat: ${({ float }) => (float || 'none')};\n\n\t${is('mainHeading')`\n\t\tfont-size: 40px;\n\t\tline-height: 44px;\n\t\tfont-weight: bold;\n\n\t\t@media ${device.mobileS} {\n\t\t\tfont-size: 40px;\n\t\t\tline-height: 44px;\n\t\t}\n    `}\n    \n    ${is('buttonText')`\n        font-size: 22px;\n    `}\n\n    ${is('navItem')`\n        line-height: 70px;\n        font-size: 22px;\n\t`}\n\t\n\t${is('inline')`\n        display: inline-block;\n\t`}\n\t\n\t${is('lblue20')`\n\t\tfont-size: 20px;\n\t\tline-height: 20px;\n\t\tcolor: ${Colors.lightBlue};\n\t`}\n\n\t${is('lblue22')`\n\t\tfont-size: 22px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.lightBlue};\n\t`}\n\t\n\t${is('dblue16')`\n\t\tfont-size: 16px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue22')`\n\t\tfont-size: 22px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue20')`\n\t\tfont-size: 20px;\n\t\tline-height: 20px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue30')`\n\t\tfont-size: 30px;\n\t\tline-height: 26px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('white20')`\n\t\tfont-size: 20px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.fullWhite};\n\t`}\n\n\t${is('white35')`\n\t\tfont-size: 35px;\n\t\tline-height: 35px;\n\t\tcolor: ${Colors.fullWhite};\n\t\tfont-style: medium;\n\t`}\n\n\t${is('gray30')`\n\t\tfont-size: 30px;\n\t\tline-height: 30px;\n\t\tcolor: ${Colors.lightGray};\n\t\tfont-style: medium;\n\t`}\n\t\n\t${is('customerIE')`\n\t\tline-height: 40px;\n\t`}\n\n\t${is('borderBottom')`\n\t\tborder-bottom: 1px solid ${Colors.darkBlue};\n\t`}\n\n\t${is('ellipsis')`\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tvertical-align: bottom;\n\t`}\n\n\t${is('acName')`\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tvertical-align: bottom;\n\n\t\t@media ${device.mobileS} {\n\t\t\tmax-width: 100px;\n\t\t\twidth: 100px;\n\t\t}\n\t`}\n\n`\n/**\n\tThis styled case was moved to WelcomeStyledComponents since it's only used in that partifulcar instance and not elsewhere\n\t${is('employeeDetail')`\n\t\tline-height: 30px;\n\t\tfont-size: 16px;\n\t`}\n\n`\n\n**/\n\nText.propTypes = {\n\t/** Color of the text displayed */\n\tcolor: PropTypes.string,\n\t/** Margins that should be added, needs to be in short hand syntax ex margin: top right bottom left; */\n\tmargin: PropTypes.string,\n\t//* Max width that a text can take */\n\tmaxWidth: PropTypes.string,\n\t//* Font weight of the text */\n\tfontWeight: PropTypes.string,\n\t//* Font style of the text; ex: italic, normal & oblique */\n\tfontStyle: PropTypes.string,\n\t//* Font family to be used */\n\tfontFamily: PropTypes.string,\n\t//* if the text should be increased to largeText size */\n\tlargeText: PropTypes.bool,\n\t//* If the text should be reduced to subtext size */\n\tsubtext: PropTypes.bool,\n\t//* If the text should be reudeced to subtitle size */\n\tsubtitle: PropTypes.bool,\n\t//* If the text is supposed to reprsent an error displayed */\n\terror: PropTypes.bool,\n\t//* If the text should be the website defualt gray color */\n\tgray: PropTypes.bool,\n\t//* If the text reprsents a action */\n\tpointer: PropTypes.bool,\n\t//* If the text reprsents a link */\n\tunderline: PropTypes.bool,\n\t//* If the text needs to be placed on same line */\n\tinline: PropTypes.bool,\n}\n\nexport default Text","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from './StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors'\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport closer from '../../../rersources/svg/closer.svg';\nimport { NewDiv } from './StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\nimport { toggleTemplateOverlay } from '../../../store/reducers/environment';\nimport { createNewCustomer } from '../../../store/actions/customer';\n\n\nconst StyledOverlayContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background: black;\n        opacity: .8;\n        position: fixed;\n        z-index: 1000;\n    }\n`\n\nconst StyledOverlayContentBox = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 500px;\n        height: 550px;\n        background: rgb(89,200,248);\n        background: linear-gradient(180deg, rgba(89,200,248,1) 0%, rgba(255,255,255,1) 100%);\n        position: fixed\n        left: 50%;\n        margin-left: -250px;\n        margin-top: 150px;\n        z-index: 2000;\n    }\n`\n\nconst OverlayContentContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding: 50px 50px 0px 50px;\n    }\n`\n\nconst CustomerInputMessage = styled.input`\n    @media ${device.tablet} {\n        width: 200px;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst CustomerInputMessageLarge = styled.textarea`\n    @media ${device.tablet} {\n        width: 300px;\n        height: 100px !important;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst TemplateNavContainer = styled.div`\n    @media ${device.tablet} {\n        bottom: 75px;\n        position: absolute;\n        margin-left: auto;\n        margin-right: auto;\n        left: 0;\n        right: 0;\n        width: 325px;\n        display: flex\n        justify-content: space-between;\n        align-items: center;\n    }\n`\n\nconst CloseTemplateOverlay = styled.div`\n    @media ${device.tablet} {\n        width: 50px;\n        height: 50px;\n        margin-top: 25px;\n        margin-left: 25px;\n\n        svg {\n            height: 100%;\n            width: 100%;\n        }\n    }\n`\n\nclass StyledOverlayTemplate extends Component  {\n    constructor() {\n        super()\n        this.state = { \n            customText: '',\n            templateNumber: 0\n        }\n\n            this.forwardTemplate = this.forwardTemplate.bind(this);\n            this.backTemplate = this.backTemplate.bind(this);\n  //      this.handleChange = this.handleChange.bind(this)\n  //      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentDidMount() {\n    }\n\n    handleChange(event) {\n        const input = event.target.value\n        this.setState({ customText: input})\n        console.log(this.state)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n    }\n\n    handleNew = (e, value) => {\n        e.preventDefault()\n        console.log(value)\n    }\n\n    template1 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName}, thank you for bringing in your vehicle.`;\n        const text2 = 'We have now started on your vehicle. You will receive a real time update for each service.';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n    \n    template2 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName},`;\n        const text2 = 'we have completed your';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n    \n    template3 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName}, your vehicle is now ready for pickup.`;\n        const text2 = 'We are looking forward to seeing you soon, thank you.';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n\n\n    template4 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName},`;\n        const newText = `${text1} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessageLarge \n                            type=\"textarea\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n\n    closeTemplateOverlayFunc = () => {\n        const { toggleTemplateOverlay } = this.props\n        toggleTemplateOverlay(false);\n    }\n\n\n    forwardTemplate = () => {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n\n        if (this.state.templateNumber < messageTemplates.length - 1) {\n            this.setState({\n                templateNumber: this.state.templateNumber + 1\n            })\n        } else {\n            this.setState({\n                templateNumber: 0\n            })\n        }\n    }\n\n    backTemplate = () => {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n\n        if (this.state.templateNumber > 0) {\n            this.setState({\n                templateNumber: this.state.templateNumber - 1\n            })\n        } else {\n            this.setState({\n                templateNumber: messageTemplates.length - 1\n            })\n        }\n    }\n\n\n    render() {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n        var currentTemplate = messageTemplates[this.state.templateNumber]\n\n        const { getSelectedMessageText } = this.props\n\n        return (\n            <div>\n                <StyledOverlayContainer>\n                </StyledOverlayContainer>\n                <StyledOverlayContentBox>\n                    <CloseTemplateOverlay\n                        onClick={this.closeTemplateOverlayFunc}\n                    >\n                        <SVG src={closer} />\n                    </CloseTemplateOverlay>\n                    {currentTemplate()}\n                    <TemplateNavContainer\n                        \n                    >\n                        <Button\n                            onClick={this.backTemplate}\n                            backgroundColor={Colors.fullWhite}\n                            borderRadius='25px'\n                        >\n                            <Text\n                                dblue16\n                            >\n                                Go Back\n                            </Text>\n                        </Button>\n                        <Button\n                            standardBtn\n                            onClick={this.forwardTemplate}\n                        >\n                            <Text\n                                white16\n                            >\n                                Go Forward\n                            </Text>\n                        </Button>\n                    </TemplateNavContainer>\n                </StyledOverlayContentBox>\n           </div>\n          )\n    }\n   \n  }\n\n  export default StyledOverlayTemplate;","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from './StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors'\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport closer from '../../../rersources/svg/closer.svg';\nimport { NewDiv } from './StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\nimport { toggleTemplateOverlay } from '../../../store/reducers/environment';\nimport { createNewCustomer } from '../../../store/actions/customer';\n\n\nconst StyledOverlayContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background: black;\n        opacity: .8;\n        position: fixed;\n        z-index: 1000;\n    }\n`\n\nconst StyledOverlayContentBox = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 500px;\n        height: 550px;\n        background: rgb(89,200,248);\n        background: linear-gradient(180deg, rgba(89,200,248,1) 0%, rgba(255,255,255,1) 100%);\n        position: fixed\n        left: 50%;\n        margin-left: -250px;\n        margin-top: 150px;\n        z-index: 2000;\n    }\n`\n\nconst OverlayContentContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding: 50px 50px 0px 50px;\n    }\n`\n\nconst CustomerInputMessage = styled.input`\n    @media ${device.tablet} {\n        width: 200px;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst CustomerInputMessageLarge = styled.textarea`\n    @media ${device.tablet} {\n        width: 300px;\n        height: 100px !important;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst TemplateNavContainer = styled.div`\n    @media ${device.tablet} {\n        bottom: 225px;\n        position: absolute;\n        margin-left: auto;\n        margin-right: auto;\n        left: 0;\n        right: 0;\n        width: 325px;\n        display: flex\n        justify-content: space-between;\n        align-items: center;\n    }\n`\n\nconst CloseTemplateOverlay = styled.div`\n    @media ${device.tablet} {\n        width: 50px;\n        height: 50px;\n        margin-top: 25px;\n        margin-left: 25px;\n\n        svg {\n            height: 100%;\n            width: 100%;\n        }\n    }\n`\n\nclass StyledOverlayEndService extends Component  {\n\n    componentDidMount() {\n    }\n\n    handleChange(event) {\n        const input = event.target.value\n        this.setState({ customText: input})\n        console.log(this.state)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n    }\n\n    handleEnd = (e, value) => {\n        e.preventDefault()\n        const { history, toggleEndServiceOverlay } = this.props\n        toggleEndServiceOverlay(false);\n        history.push('/end-service');\n    }\n\n    closeEndServiceOverlayFunc = () => {\n        const { toggleEndServiceOverlay } = this.props\n        toggleEndServiceOverlay(false);\n    }\n\n    render() {\n        const { getSelectedMessageText } = this.props\n        return (\n            <div>\n                <StyledOverlayContainer>\n                </StyledOverlayContainer>\n                <StyledOverlayContentBox>\n                    <CloseTemplateOverlay\n                        onClick={this.closeEndServiceOverlayFunc}\n                    >\n                        <SVG src={closer} />\n                    </CloseTemplateOverlay>\n                    <NewDiv\n                        width='350px'\n                        margin='0 auto'\n                    >\n                        <Text\n                            margin='125px 0 0 0'\n                            dblue22\n                        >\n                            Are you sure you would like to end this conversation?\n                        </Text>\n                    </NewDiv>\n                    <TemplateNavContainer \n                    >\n                        <Button\n                            onClick={this.closeEndServiceOverlayFunc}\n                            backgroundColor={Colors.fullWhite}\n                            borderRadius='25px'\n                        >\n                            <Text\n                                dblue16\n                            >\n                                Cancel\n                            </Text>\n                        </Button>\n                        <Button\n                            standardBtn\n                            onClick={this.handleEnd}\n                        >\n                            <Text\n                                white16\n                            >\n                                Yes\n                            </Text>\n                        </Button>\n                    </TemplateNavContainer>\n                </StyledOverlayContentBox>\n           </div>\n          )\n    }\n   \n  }\n\n  export default StyledOverlayEndService;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\n\nconst CustomerCellDiv = styled(NewDiv)`\n    width: 100%\n    height: 80px;\n    background: ${Colors.lighterGray};\n    border-bottom: 1px solid black;\n`\n\nconst CellID = styled(NewDiv)`\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    background: ${Colors.lightBlue};\n    display: inline-block;\n    float: left;\n    margin-left: 20px;\n    margin-top: 15px;\n`\n\nconst CellInfoLeft = styled(NewDiv)`\n    float: left;\n    display: inline-block;\n    margin-left: 100px;\n    margin-top: 10px;\n    height: 60px;\n    width: 275px;\n    text-align: left;\n`\n\nconst CellInfoRight = styled(CellInfoLeft)`\n    margin-left: 50px;\n`\n\nclass CustomerCellRow extends Component {\n\n  componentDidMount() {\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n  openCustomerProfile = () => {\n      const { realCustomers, customerid, selectedCustomer, getSelectedCustomer, history } = this.props\n      history.push(`/customers/${customerid}`);\n    const sc = this.search(customerid, realCustomers);\n    getSelectedCustomer(sc);\n    console.log(selectedCustomer);\n  }\n\n  render() {\n      const { customerid, name, phoneNumber1, email } = this.props\n      console.log(this.props)\n    return (\n      <CustomerCellDiv\n        onClick={() => {this.openCustomerProfile() }}\n      >\n          <CellID>\n          </CellID>\n          <CellInfoLeft>\n              <NewDiv\n                width=\"275px\"\n              >\n                <Text\n                    inline\n                    lblue20\n                >\n                    Customer Name:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                    acName\n                >\n                    {name}\n                </Text>\n              </NewDiv>\n\n              <NewDiv\n                padding=\"15px 0 0 0\"\n              >\n                <Text\n                    inline\n                    lblue20\n                >\n                    Phone #:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                >\n                    {phoneNumber1}\n                </Text>\n              </NewDiv>\n\n          </CellInfoLeft>\n          <CellInfoRight>\n          <NewDiv>\n                <Text\n                    inline\n                    lblue20\n                >\n                    Email:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                >\n                    {email}\n                </Text>\n              </NewDiv>\n\n              <NewDiv\n                padding=\"15px 0 0 0\"\n              >\n                <Text\n                    inline\n                    dblue16\n                    borderBottom\n                >\n                    View More\n                </Text>\n              </NewDiv>\n          </CellInfoRight>\n      </CustomerCellDiv>\n    );\n  }\n}\n\nexport default withRouter(CustomerCellRow);","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\nimport Colors from '../../constants/colors';\nimport { NewDiv } from '../Styled/StyledComponents';\n\nconst StyledBackIcon = styled(NewDiv)`\n@media ${device.tablet} {\n    position: absolute;\n    height: 35px;\n    width: 20px;\n    margin-left: 25px;\n    margin-top: 35px;\n    \n    svg {\n        width: 20px;\n        height: 35px;\n    }\n}\n`\nexport default StyledBackIcon;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {getActiveCustomerServices, getCustomerActiveToMessages} from '../../store/actions/customer'\nimport { createNewToMessage } from '../../store/actions/customer'\nimport './customers.css';\nimport StyledOverlayTemplate from '../Customer/Styled/StyledOverlayTemplate';\nimport StyledOverlayEndService from '../Customer/Styled/StyledOverlayEndService';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport { getSelectedCustomer, getSelectedServiceMessage, getSelectedMessageText, toggleTemplateOverlay, toggleEndServiceOverlay } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport templatey from '../../rersources/svg/templatey.svg';\nimport senddb from '../../rersources/svg/senddb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { isContext } from 'vm';\n\nconst MessengerContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        height: 100vh;\n        position: fixed;\n        left: 0;\n        top: 0;\n        overflow-y: scroll;\n        background: ${Colors.lightBlue};\n        float: left;\n    }\n`\n\nconst MessengerContainerTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        height: 190px;\n        background: ${Colors.lightBlue};\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst MessengerTopText = styled(NewDiv)`\n    @media ${device.tablet} {\n        max-width: 175px;\n        text-align: center;\n        height: auto;\n    }\n`\n\nconst MessageCell = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 90px;\n        background: ${Colors.lightBlue};\n        float: left;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst MessageCellContentTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 90%;\n        height: 25px;\n        padding: 15px 0px 10px 0px\n    }\n`\n\nconst MessageCellContentBottom = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 90%;\n        height: 40px;\n        padding: 10px 0px\n        text-align: left;\n    }\n`\n\nconst MessengerSearchBar = styled.input`\n    @media ${device.tablet} {\n        width: ${({ width }) => (width|| '100%')};\n        height: ${props => (props.height || '40px')};\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n    } \n`\n\nconst MessengerTextBox = styled.textarea`\n    @media ${device.tablet} {\n        width: ${({ width }) => (width|| '100%')};\n        height: 90px;\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        padding-top: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n        :focus {\n            outline: none;\n          }\n    } \n`\n\nconst MessengerChatContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 511px;\n        height: 100vh;\n        background-color: ${Colors.lighterGray};\n        float: right\n    } \n`\n\nconst MessengerChatTopSec = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 511px;\n        height: 90px;\n        background-color: ${Colors.lighterGray};\n        border-bottom: 1px solid ${Colors.lightBlue};\n        position: fixed;\n        top: 0;\n        text-align: left;\n    } \n`\n\nconst MessengerFixedBottom = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 511px;\n        height: 115px;\n        position: fixed;\n        bottom: 0;\n    } \n`\n\nconst ChatMessagesContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin-top: 100px;\n        background-color: ${Colors.lighterGray};\n    } \n`\n\nconst BottomLeftButton = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        padding: 5px;\n        display: inline-block;\n        padding-top: 60px;\n        float: left;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst BottomRightButton = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        padding: 5px;\n        display: inline-block;\n        padding-top: 60px;\n        float: right;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst BottomMiddleText = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 400px;\n        height: 100px;\n        padding: 5px 0;\n        display: inline-block;\n    } \n`\n\nconst ChatToRow = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: auto;\n    } \n`\n\nconst ChatMessageToBubble = styled(NewDiv)`\n    @media ${device.tablet} {\n        max-width: 250px;\n        height: auto;\n        padding: 15px 15px;\n        float: right\n        margin-right: 10px;\n        background: ${Colors.lightBlue};\n        border-radius: 30px;\n        margin-bottom: 5px;\n        text-align: left;\n        color: ${Colors.fullWhite};\n    } \n`\n\nclass ChatMessenger extends Component {\n    constructor() {\n        super()\n        this.state = {\n            correctChats: []\n        }\n    }\n  componentDidMount() {\n    const {showNavBar, toggleNavBar, toggleNavToggle, getCustomerActiveToMessages, activeToMessages, selectedServiceMessage } = this.props\n\n    if (showNavBar === 'block') {\n        toggleNavBar('none')\n        toggleNavToggle(barsw);\n    } else {\n        console.log('Not showing....');\n    }\n\n    console.log(this.props)\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].serviceid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n  openThisChat = (v) => {\n    const { customerServices, getSelectedServiceMessage, selectedServiceMessage } = this.props\n    const serviceid = v.serviceid\n    const sc = this.search(serviceid, customerServices);\n    getSelectedServiceMessage(sc);\n    console.log(selectedServiceMessage);\n}\n\n    displayOverlay = () => {\n        const { showTemplateOverlay, getSelectedMessageText, selectedMesageText, toggleTemplateOverlay, selectedServiceMessage } = this.props\n        if (showTemplateOverlay === true) {\n            return (\n                <StyledOverlayTemplate\n                    getSelectedMessageText={getSelectedMessageText} \n                    selectedMesageText={selectedMesageText}\n                    toggleTemplateOverlay={toggleTemplateOverlay}\n                    selectedServiceMessage={selectedServiceMessage}\n              />\n            )\n        } else {\n            return (\n                <div></div>\n            )\n        }\n    }\n\n    displayOverlayEnd = () => {\n        const { showEndServiceOverlay, getSelectedMessageText, selectedMesageText, toggleEndServiceOverlay, selectedServiceMessage, history } = this.props\n        if (showEndServiceOverlay === true) {\n            return (\n                <StyledOverlayEndService\n                    getSelectedMessageText={getSelectedMessageText} \n                    selectedMesageText={selectedMesageText}\n                    toggleEndServiceOverlay={toggleEndServiceOverlay}\n                    selectedServiceMessage={selectedServiceMessage}\n                    history={history}\n              />\n            )\n        } else {\n            return (\n                <div></div>\n            )\n        }\n    }\n\n    endService = () => {\n        const { toggleEndServiceOverlay } = this.props\n        toggleEndServiceOverlay(true)\n        console.log('Ending the service....')\n    }\n\n  renderChatCells = () => {\n    var activeServiceArray = []\n    const { customerServices, activeToMessages } = this.props\n    console.log(customerServices);\n\n    for (var i=0; i < customerServices.length; i++) {\n        if (customerServices[i].status == true) {\n            activeServiceArray.push(customerServices[i])\n        } else {\n            console.log('Not active');\n        }\n        console.log(activeServiceArray)\n    }\n    activeServiceArray.reverse()\n\n        return activeServiceArray.map((v) => {\n            var vMessages = []\n            var lastMessage;\n\n            for (var i=0; i < activeToMessages.length; i++) {\n                if (v.serviceid == activeToMessages[i].serviceid) {\n                    vMessages.push(activeToMessages[i])\n                } else {\n                    console.log('Did not match')\n                }\n            }\n\n            if (vMessages.length > 0) {\n                lastMessage = vMessages.slice(-1)[0]\n            } else {\n                lastMessage = 'No messages sent.'\n            }\n\n            return (\n                <MessageCell\n                    onClick={() => this.openThisChat(v)}\n                >\n                    <MessageCellContentTop\n                    >\n                        <Text\n                            dblue22\n                            inline\n                            float='left'\n                            maxWidth='210px'\n                        >\n                            {v.customerName}\n                        </Text>\n                        <Text\n                            dblue16\n                            inline\n                            float='right'\n                            maxWidth='80px'\n                        >\n                            /\n                        </Text>\n                    </MessageCellContentTop>\n                    <MessageCellContentBottom>\n                        <Text\n                            dblue16\n                            ellipsis\n                            maxWidth=\"100%\"\n                        >\n                            {lastMessage.textMessage}\n                        </Text>\n                    </MessageCellContentBottom>\n                </MessageCell>\n            )\n        })\n  }\n\n  renderServiceId = () => {\n      const {selectedServiceMessage } = this.props\n      if (selectedServiceMessage) {\n            return (\n                <NewDiv>\n                    <Text\n                        dblue30\n                        padding=\"10px 0 0 10px\"\n                        inline\n                    >\n                        {selectedServiceMessage.customerName}\n                    </Text>\n                    <NewDiv\n                        display='inline-block'\n                        float='right'\n                        margin='15px 15px 0 0'\n                    >\n                        <Button\n                            width='156px'\n                            height='40px'\n                            borderRadius='20px'\n                            backgroundColor={Colors.brightRed}\n                            display='inline-block'\n                            onClick={this.endService}\n                        >\n                            <Text\n                                white20\n                            >\n                                End\n                            </Text>\n                        </Button>\n                        \n                    </NewDiv>\n                </NewDiv>\n            )\n      } else {\n          return (\n              <Text\n                dblue30\n                padding=\"10px 0 0 10px\"\n              >\n                  No Service Selected\n              </Text>\n          )\n      }\n  }\n\n  checkMessageFunc = () => {\n    const { activeToMessages, selectedServiceMessage } = this.props\n\n    if (selectedServiceMessage) {\n        for (var i=0; i < activeToMessages.length; i++) {\n            if (activeToMessages[i].serviceid === selectedServiceMessage.serviceid) {\n\n   //     this.setState({ correctChats: [...this.state.correctChats, activeToMessages[i]] })\n   // this.setState(prevState => ({ correctChats: [ activeToMessages[i], ...prevState.correctChats]}))\n\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n    }\n\n  }\n\n  renderChatMessages = () => {\n    const { activeToMessages, selectedServiceMessage } = this.props\n    const displayedToMessages = []\n\n    this.checkMessageFunc()\n\n      if (selectedServiceMessage) {\n        for (var i=0; i < activeToMessages.length; i++) {\n            if (activeToMessages[i].serviceid === selectedServiceMessage.serviceid) {\n                displayedToMessages.push(activeToMessages[i]);\n\n    //this.setState(prevState => ({ correctChats: [ activeToMessages[i], ...prevState.correctChats]}))\n\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n        console.log(this.state);\n\n        return displayedToMessages.map((v) => {\n            return (\n                <ChatToRow>\n                    <ChatMessageToBubble>\n                        {v.textMessage}\n                    </ChatMessageToBubble>\n                </ChatToRow>\n            )\n        })\n      } else {\n          return (\n              <div>There are no messages to display</div>\n          )\n      }\n  }\n\n  toggleTemplateTrue = () => {\n      const { toggleTemplateOverlay, selectedServiceMessage } = this.props\n      if (selectedServiceMessage) {\n        toggleTemplateOverlay(true);\n      } else {\n          console.log('There is no selected message');\n      }\n      \n  }\n\n  sendNewMessage = (e, value) => {\n      const { selectedMessageText, createNewToMessage, selectedServiceMessage } = this.props\n        e.preventDefault();\n        console.log(value)\n        console.log(selectedMessageText)\n\n        if (selectedServiceMessage) {\n            const info =\n            {\n                textMessage: selectedMessageText,\n                phoneNumber: selectedServiceMessage.phoneNumber,\n                serviceid: selectedServiceMessage.serviceid,\n                vehicleid: selectedServiceMessage.vehicleid,\n                customerid: selectedServiceMessage.customerid,\n                user: selectedServiceMessage.user\n            }\n            createNewToMessage(info);\n            this.forceUpdate();\n        } else {\n            console.log('It cannot be done.')\n        }\n\n        window.location.reload()\n  }\n\n  handleChange = (e) => {\n      const { getSelectedMessageText } = this.props\n      const messageT = e.target.value\n      getSelectedMessageText(messageT);\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  render() {\n    const { getSelectedMessageText, selectedMessageText, createNewToMessage, selectedServiceMessage } = this.props\n    console.log(createNewToMessage);\n    const newText = \"akjshdkjashdkjahsdkhasdkj\"\n    console.log(this.props)\n\n    return (\n      <div>\n          {this.displayOverlay()}\n          {this.displayOverlayEnd()}\n        <MessengerContainer>\n            <MessengerContainerTop>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n                <MessengerTopText>\n                    <Text\n                        white35\n                        padding=\"25px 0\"\n                    >\n                        Current Vehicles\n                    </Text>\n                </MessengerTopText>\n                <MessengerSearchBar \n                    width=\"85%\"\n                    placeholder=\"Search...\"\n                />\n            </MessengerContainerTop>\n            {this.renderChatCells()}\n        </MessengerContainer>\n        <MessengerChatContainer>\n            <MessengerChatTopSec>\n                {this.renderServiceId()}\n            </MessengerChatTopSec>\n            <ChatMessagesContainer>\n                {this.renderChatMessages()}\n            </ChatMessagesContainer>\n            <MessengerFixedBottom>\n                <BottomLeftButton\n                    onClick={() => this.toggleTemplateTrue()}\n                >\n                    <SVG src={templatey} />\n                </BottomLeftButton>\n                <BottomMiddleText>\n                    <form method=\"POST\" onChange={this.handleChange} onSubmit={(e) => this.sendNewMessage(e, this)}>\n                        <MessengerTextBox\n                            width=\"97%\"\n                            placeholder=\"Enter Messege...\"\n                            value={selectedMessageText}\n                            name=\"toMessage\"\n                        />\n                    </form>\n                </BottomMiddleText>\n                <BottomRightButton \n                onClick={(e) => this.sendNewMessage(e, this)}>\n                    <SVG src={senddb} />\n                </BottomRightButton>\n            </MessengerFixedBottom>\n        </MessengerChatContainer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  realCustomers: state.realCustomers,\n  selectedCustomer: state.environment.selectedCustomer,\n  activeServices: state.activeServices,\n  selectedServiceMessage: state.environment.selectedServiceMessage,\n  selectedMessageText: state.environment.selectedMessageText,\n  showTemplateOverlay: state.environment.showTemplateOverlay,\n  showEndServiceOverlay: state.environment.showEndServiceOverlay,\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getActiveCustomerServices: () => dispatch(getActiveCustomerServices()),\n   getSelectedServiceMessage: (sm) => dispatch(getSelectedServiceMessage(sm)),\n   getSelectedMessageText: (text) => dispatch(getSelectedMessageText(text)),\n   toggleTemplateOverlay: (status) => dispatch(toggleTemplateOverlay(status)),\n   toggleEndServiceOverlay: (status) => dispatch(toggleEndServiceOverlay(status)),\n   getCustomerActiveToMessages: (status) => dispatch(getCustomerActiveToMessages)\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(ChatMessenger));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport { getSelectedCustomer, updateCustomerSearch, getCurrentFilter } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerSearchBar = styled.input`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n\n        :focus {\n          outline: none;\n        }\n    } \n`\n\nconst CustomerSearchSelectSec = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 672px;\n      margin: 0 auto;\n      margin-top: 30px;\n    } \n`\n\nconst SearchNameBox = styled(NewDiv)`\n    @media ${device.tablet} {\n      text-align: left;\n      width: 242px;\n      display: inline-block;\n    }\n`\n\nconst NameSelectDiv = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 242px;\n      height: 40px;\n      border-radius: 20px;\n      overflow: hidden;\n\n      select {\n        outline: none;\n        border: 0px;\n      }\n    } \n`\n\nconst StyledSelect = styled.select`\n    @media ${device.tablet} {\n      width: 100%;\n      height: 100%\n      font-size: 16px;\n      color: ${Colors.lightGray};\n      -webkit-border-top-right-radius: 15px;\n      -webkit-border-bottom-right-radius: 15px;\n      -moz-border-radius-topright: 15px;\n      -moz-border-radius-bottomright: 15px;\n      border-top-right-radius: 15px;\n      border-bottom-right-radius: 15px;\n    }\n`\n\nconst SearchButton = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 156px;\n      height: 40px;\n      display: inline-block;\n      float: right;\n      margin-top: 30.5px;\n    }\n`\n\nconst AllCsBG = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 100%;\n      background: rgb(0,142,204);\n      background: linear-gradient(90deg, rgba(0,142,204,1) 0%, rgba(89,200,248,1) 100%);\n      height: 300px;\n    }\n`\n\nclass AllCustomers extends Component {\n\n  static propTypes = {\n    getRealCustomers: PropTypes.func.isRequired,\n    realCustomers: PropTypes.array.isRequired\n  }\n\n  static defaultProps = {\n    realCustomers: []\n  }\n\n  componentDidMount() {\n    this.props.getRealCustomers();\n    const {showNavBar, toggleNavBar, toggleNavToggle } = this.props\n    if (showNavBar === 'block') {\n      toggleNavBar('none')\n      toggleNavToggle(barsw);\n    } else {\n      console.log('Not showing....');\n    }\n  }\n\n  searchCustomers = (event) => {\n    const { search, updateCustomerSearch } = this.props\n    var searchText = event.target.value\n    updateCustomerSearch(searchText)\n\n    var s = document.getElementById('search-select');\n    var strSelect = s.options[s.selectedIndex].value\n\n    console.log(strSelect)\n  }\n\n  updateFilter = (event) => {\n    const { getCurrentFilter } = this.props\n    var cFilter = event.target.value\n    getCurrentFilter(cFilter)\n    console.log(cFilter)\n  }\n\n  renderRows = () => {\n    const { realCustomers, selectedCustomer, getSelectedCustomer, history, search, currentFilter } = this.props\n    console.log(selectedCustomer);\n\n    const realCustomersReversed = realCustomers.reverse()\n\n    var filteredCustomers;\n\n    if (currentFilter === 'Name') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var name = item.name.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = name.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n      \n    } else if (currentFilter === 'Phone Number') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var number = item.phoneNumber1.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = number.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n    } else if (currentFilter === 'Email') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var email = item.email.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = email.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n    } else {\n      filteredCustomers = realCustomersReversed\n    }\n\n    return filteredCustomers.map((d) => {\n      console.log(filteredCustomers);\n      console.log(currentFilter)\n      return (\n        <CustomerCellRow\n          key={d.customerid}\n          realCustomers={realCustomers}\n          selectedCustomer={selectedCustomer}\n          getSelectedCustomer={getSelectedCustomer}\n          history={history}\n          {...d}\n        />\n      )\n    })\n  }\n\n  render() {\n    const { realCustomers, updateCustomerSearch, search } = this.props\n\n    return (\n      <div>\n        <AllCsBG>\n          <MainHeading>\n              <Text\n                mainHeading\n                padding=\"30px 0 50px 0\"\n              >\n                All Customers\n              </Text>\n            </MainHeading>\n        <NewDiv\n          width=\"662px\"\n          height=\"40px\"\n        >\n          <CustomerSearchBar \n            placeholder=\"Search\"\n            onChange={this.searchCustomers}\n            value={search}\n          />\n        </NewDiv>\n        <CustomerSearchSelectSec>\n          <SearchNameBox\n            float=\"left\"\n          >\n            <Text\n              padding=\"0 0 15px 0\"\n            >\n              Search By:\n            </Text>\n            <NameSelectDiv>\n              <StyledSelect \n              id=\"search-select\"\n              onChange={this.updateFilter}\n              >\n                <option>Name</option>\n                <option>Phone Number</option>\n                <option>Email</option>\n                <option>Vin Number</option>\n              </StyledSelect>\n            </NameSelectDiv>\n          </SearchNameBox>\n          <SearchNameBox>\n            <Text\n              padding=\"0 0 15px 0\"\n            >\n              Sort By:\n            </Text>\n            <NameSelectDiv>\n              <StyledSelect>\n                <option>Default</option>\n              </StyledSelect>\n            </NameSelectDiv>\n          </SearchNameBox>\n          <SearchButton>\n            <Button\n              width=\"100%\"\n              height=\"100%\"\n              borderRadius=\"40px\"\n              standardBtn\n            >\n              <Text\n              >\n                Search\n                </Text>\n            </Button>\n          </SearchButton>\n        </CustomerSearchSelectSec>\n      </AllCsBG>\n        <NewDiv\n          width=\"100vw\"\n        >\n            {this.renderRows()}\n        </NewDiv>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  realCustomers: state.realCustomers,\n  selectedCustomer: state.environment.selectedCustomer,\n  search: state.environment.search,\n  currentFilter: state.environment.currentFilter,\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getRealCustomers: () => dispatch(getRealCustomers()),\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   updateCustomerSearch: (search) => dispatch (updateCustomerSearch(search)),\n   getCurrentFilter: (filter) => dispatch (getCurrentFilter(filter))\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(AllCustomers);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport mailw from '../../rersources/svg/mailw.svg';\nimport carw from '../../rersources/svg/carw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n    }\n`\n\nclass CustomerInfo extends Component {\n  componentDidMount() {\n    const { selectedCustomer, getSelectedCustomer, realCustomers, customerVehicles, getRealCustomers } = this.props\n\n    getRealCustomers()\n\n    const {\n        match: { params: { customerid } }\n    } = this.props\n\n    const sc = this.search(customerid, realCustomers);\n    if (realCustomers.length > 1) {\n        console.log(getSelectedCustomer);\n        getSelectedCustomer(sc);\n        console.log(sc);\n    } else {\n        console.log('error');\n    }\n}\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n    openNewVehicle = () => {\n        const customerid = this.props.selectedCustomer.customerid\n        const history = this.props.history;\n        history.push(`/new-vehicle`);\n    }\n\n    openVehicleDetails = (v) => {\n        const { getSelectedVehicle, selectedVehicle, history } = this.props\n        const vehicleid = v.vehicleid\n        getSelectedVehicle(v)\n        console.log(selectedVehicle)\n        history.push(`/customers/vehicles/${vehicleid}`);\n   //   const sc = this.search(customerid, realCustomers);\n   //   getSelectedCustomer(sc);\n      console.log(v);\n    }\n\n    renderVehicles = () => {\n        const { customerVehicles, selectedCustomer } = this.props\n        const customerid = this.props.selectedCustomer.customerid\n        const newVehicleArray =[]\n         for (var i=0; i < customerVehicles.length; i++) {\n            if (customerVehicles[i].ownerid === customerid) {\n                newVehicleArray.push(customerVehicles[i])\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n        console.log(customerVehicles);\n        console.log(newVehicleArray);\n        const vehicles = newVehicleArray\n        console.log(vehicles);\n        return vehicles.map((v) => {\n            console.log(v);\n            return (\n                <NewDiv>\n                    <Text\n                        dblue22\n                        borderBottom\n                        padding=\"20px 0 5px 0\"\n                        color={Colors.lightBlue}\n                        onClick={() => this.openVehicleDetails(v)}\n                    >\n                        {v.vehicleMake} {v.vehicleModel}\n                    </Text>\n                </NewDiv>\n            )\n        })\n    }\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n    }\n\n  render() {\n    const { realCustomers, selectedCustomer, customerVehicles } = this.props\n    if (realCustomers.length >= 1) {\n\n        return (\n            <MainBG>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Customer Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                         CUSTOMER NAME:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.name}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.phoneNumber1}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={mailw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          EMAIL:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.email}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n              <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    height=\"auto\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                            VEHICLES:\n                      </Text>\n                      {this.renderVehicles()}\n                  </InfoEText>\n              </InfoElement>\n              <NewDiv\n                margin=\"0 auto\"\n                width=\"100%\"\n              >\n                  <Button\n                    largeBtn\n                    margin=\"0 auto\"\n                    backgroundColor={Colors.darkBlue}\n                    onClick={() => this.openNewVehicle()}\n                  >\n                    <Text\n                      white20\n                    >\n                      Add New Vehicle\n                    </Text>\n                  </Button>\n              </NewDiv>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   getRealCustomers: () => dispatch(getRealCustomers())\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer, getSelectedService } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport mailw from '../../rersources/svg/mailw.svg';\nimport carw from '../../rersources/svg/carw.svg';\nimport vinw from '../../rersources/svg/vinw.svg';\nimport licensew from '../../rersources/svg/licensew.svg';\nimport calendarw from '../../rersources/svg/calendarw.svg';\nimport historyw from '../../rersources/svg/historyw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n    }\n`\n\nclass VehicleInfo extends Component {\n  componentDidMount() {\n    const { getSelectedVehicle, customerVehicles, customerServices, selectedVehicle } = this.props\n    const {\n        match: { params: { vehicleid } }\n    } = this.props\n\n    const sc = this.search(vehicleid, customerServices);\n\n    if (customerServices.length > 1) {\n   //     getSelectedVehicle(sc);\n        console.log('selecteing customer')\n    } else {\n        console.log('error');\n    }\n}\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    openServiceScreen = () => {\n        const { getSelectedVehicle, selectedVehicle, history } = this.props\n        const customerid = selectedVehicle.ownerid\n        history.push(`/customers/service/${customerid}`);\n    }\n\n    openServiceDetails = (v) => {\n        const { history, getSelectedService } = this.props\n        const vehicleid = v.vehicleid\n        const serviceid = v.serviceid\n        history.push(`/customers/vehicles/${vehicleid}/${serviceid}`);\n        getSelectedService(v);\n      console.log(v);\n      console.log(getSelectedService);\n    }\n\n    renderServices = () => {\n        const { getSelectedVehicle, customerVehicles, customerServices, selectedVehicle } = this.props\n        const newServiceArray = []\n\n        for (var i=0; i < customerServices.length; i++) {\n            if (customerServices[i].vehicleid === selectedVehicle.vehicleid) {\n                newServiceArray.push(customerServices[i]);\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n       const services = newServiceArray\n         console.log(services.length);\n        return services.map((v) => {\n            return (\n                <NewDiv>\n                    <Text\n                        white20\n                        padding=\"20px 0 5px 0\"\n                        onClick={() => this.openServiceDetails(v)}\n                    >\n                        Service - {v.vehicleid}\n                    </Text>\n                </NewDiv>\n            )\n        })\n    }\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n      }\n\n  render() {\n    const { selectedVehicle, selectedCustomer } = this.props\n\n    if (selectedVehicle) {\n        return (\n            <MainBG>\n                <StyledBackIcon\n                onClick={() => this.goBack()}\n                >\n                <SVG src={arrowleftw} />\n            </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Vehicle Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          OWNER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.ownerid}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.phoneNumber1}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER 2:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.phoneNumber2}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={calendarw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          YEAR:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleYear}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MAKE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleMake}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MODEL:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleModel}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={licensew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          LICENSE #:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleLicenseNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={vinw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          VIN #:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleVinNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n              <InfoEIcon>\n                      <SVG src={vinw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    height=\"auto\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                            Service History\n                      </Text>\n                      {this.renderServices()}\n                  </InfoEText>\n              </InfoElement>\n              <NewDiv\n                margin=\"0 auto\"\n                width=\"100%\"\n              >\n                  <Button\n                    largeBtn\n                    margin=\"0 auto\"\n                    backgroundColor={Colors.darkBlue}\n                    onClick={() => this.openServiceScreen()}\n                  >\n                    <Text\n                      white20\n                    >\n                      Service This Vehicle\n                    </Text>\n                  </Button>\n              </NewDiv>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   getSelectedService: (service) => dispatch(getSelectedService(service))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(VehicleInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport detailsw from '../../rersources/svg/detailsw.svg';\nimport mileagew from '../../rersources/svg/mileagew.svg';\nimport pencilw from '../../rersources/svg/pencilw.svg';\nimport calendarw from '../../rersources/svg/calendarw.svg';\nimport historyw from '../../rersources/svg/historyw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n        max-width: 350px;\n    }\n`\n\nclass ServiceInfo extends Component {\n  componentDidMount() {\n    const { getSelectedVehicle, customerVehicles, customerServices, selectedVehicle } = this.props\n    const {\n        match: { params: { vehicleid } }\n    } = this.props\n}\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n    }\n\n  render() {\n    const { selectedVehicle, selectedCustomer, selectedService } = this.props\n    console.log(this.props.state);\n    var strTime;\n    var strDate;\n\n    if (selectedService) {\n        var jsTime = selectedService.date\n        var timestamp = jsTime.substring(0, jsTime.length - 3)\n        console.log(timestamp);\n        console.log(jsTime);\n        var newDate = new Date(timestamp*1000);\n        var fHours = newDate.getHours();\n        var fMinutes = '0' + newDate.getMinutes();\n\n\n        var fDay = newDate.getDate();\n        var fMonth = newDate.getMonth();\n        var fYear = newDate.getFullYear();\n        fMonth = fMonth + 1;\n        console.log(fMonth);\n        console.log(fDay);\n        \n      \n        var ampm = fHours >= 12 ? 'pm' : 'am';\n        fHours = fHours % 12;\n        fHours = fHours ? fHours : 12;\n      //  fMinutes = fMinutes < 10 ? '0'+ fMinutes : fMinutes;\n      var formattedTime = fHours + ':' + fMinutes.substr(-2) + ampm;\n      var formattedDate = (`${fMonth}/${fDay}/${fYear}`)\n      //  strDate = (`${fMonth}/${fDay}`);\n\n\n\n        return (\n            <MainBG>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Service Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          CUSTOMER NAME\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.customerName}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={calendarw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          DATE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {formattedDate}\n                          &nbsp;\n                          - \n                          &nbsp;\n                          {formattedTime} \n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.phoneNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={mileagew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MILEAGE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.mileage}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={pencilw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          REASON FOR VISIT:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.reason}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={detailsw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          DETAILS:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.details}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(ServiceInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport checkw from '../../rersources/svg/checkw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text'; \n\nconst ConfirmContentContainer = styled.div`\n    @media ${device.tablet} {\n        padding-top: 300px;\n        width: 500px;\n        text-align: center;\n        margin: 0 auto;\n    }\n`\n\nconst ConfirmIconDiv = styled.div`\n    @media ${device.tablet} {\n        width: 200px;\n        height: 200px;\n        margin: 0 auto;  \n    }\n\n    svg {\n        width: 100%\n        height: 100%\n    }\n`\n\nconst ConfirmContentText = styled.div`\n    @media ${device.tablet} {\n        width: 500px;\n        margin: 0 auto;\n        padding-top: 50px;\n        padding-bottom: 50px;\n    }\n`\n\nconst ConfirmButtons = styled.div`\n    @media ${device.tablet} {\n\n    }\n`\n\nclass CustomerConfirmation extends Component {\n    componentDidMount() {\n    }\n\n    search = (id, myArray) => {\n        for (var i=0; i < myArray.length; i++) {\n            if (myArray[i].customerid === id) {\n                return myArray[i];\n            }\n        }\n    }\n\n    openAllVehicles = () => {\n        const { history } = this.props;\n        history.push('/all-customers')\n    }\n    openAddVehicle = () => {\n        const { realCustomers, selectedCustomer, getSelectedCustomer, history } = this.props\n        const currentCus = realCustomers.slice(-1).pop();\n        getSelectedCustomer(currentCus);\n        history.push(`/new-vehicle`);\n    }\n\n    render() {\n        const { realCustomers, getSelectedCustomer, selectedCustomer } = this.props\n\n        if (realCustomers.length > 0) {\n            console.log(realCustomers)\n            const currentCus = realCustomers.slice(-1).pop()\n            console.log(currentCus);\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                            <ConfirmIconDiv>\n                                <SVG src={checkw} />\n                            </ConfirmIconDiv>\n                            <ConfirmContentText>\n                                <Text\n                                    white20\n                                >\n                                    {currentCus.name},\n                                    &nbsp;\n                                The new customer has been added successfully. Would you like to add a vehicle for this customer now?\n                                </Text>\n                        </ConfirmContentText>\n                        <ConfirmButtons>\n                                <Button\n                                    display=\"inline-block\"\n                                    margin=\"0px 5px\"\n                                    width=\"156px\"\n                                    height=\"40px\"\n                                    borderRadius=\"25px\"\n                                    backgroundColor={Colors.fullWhite}\n                                    onClick={() => this.openAllVehicles()}\n                                >\n                                    <Text\n                                        dblue20\n                                    >\n                                        Not Now\n                                    </Text>\n                                </Button>\n                                <Button\n                                    display=\"inline-block\"\n                                    standardBtn\n                                    margin=\"0px 5px\"\n                                    onClick={() => this.openAddVehicle()}\n                                >\n                                    <Text\n                                        white20\n                                    >\n                                        Yes\n                                    </Text>\n                                </Button>\n                            </ConfirmButtons>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                           <p>Loading...</p>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    state: state\n  })\n  \n  const dispatchToProps = (dispatch) => ({\n     \n  })\n  \n  export default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerConfirmation));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport checkw from '../../rersources/svg/checkw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text'; \n\nconst ConfirmContentContainer = styled.div`\n    @media ${device.tablet} {\n        padding-top: 300px;\n        width: 500px;\n        text-align: center;\n        margin: 0 auto;\n    }\n`\n\nconst ConfirmIconDiv = styled.div`\n    @media ${device.tablet} {\n        width: 200px;\n        height: 200px;\n        margin: 0 auto;  \n    }\n\n    svg {\n        width: 100%\n        height: 100%\n    }\n`\n\nconst ConfirmContentText = styled.div`\n    @media ${device.tablet} {\n        width: 500px;\n        margin: 0 auto;\n        padding-top: 50px;\n        padding-bottom: 50px;\n    }\n`\n\nconst ConfirmButtons = styled.div`\n    @media ${device.tablet} {\n\n    }\n`\n\nclass VehicleConfirmation extends Component {\n    componentDidMount() {\n    }\n\n    search = (id, myArray) => {\n        for (var i=0; i < myArray.length; i++) {\n            if (myArray[i].customerid === id) {\n                return myArray[i];\n            }\n        }\n    }\n\n    openAllVehicles = () => {\n        const { history, selectedVehicle, getSelectedVehicle, customerVehicles, selectedCustomer } = this.props\n        history.push('/all-customers');\n    }\n    openAddService = () => {\n        const { realCustomers, selectedCustomer, getSelectedVehicle, history, customerVehicles, selectedVehicle } = this.props\n        const currentCus = customerVehicles.slice(-1).pop();\n        getSelectedVehicle(currentCus);\n        history.push('/new-service');\n    }\n\n    render() {\n        const { realCustomers, getSelectedCustomer, selectedCustomer } = this.props\n\n        if (realCustomers.length > 0) {\n            console.log(realCustomers)\n            const currentCus = realCustomers.slice(-1).pop()\n            console.log(currentCus);\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                            <ConfirmIconDiv>\n                                <SVG src={checkw} />\n                            </ConfirmIconDiv>\n                            <ConfirmContentText>\n                                <Text\n                                    white20\n                                >\n                                The new vehicle has been added successfully. Would you like to service this customer now?\n                                </Text>\n                        </ConfirmContentText>\n                        <ConfirmButtons>\n                                <Button\n                                    display=\"inline-block\"\n                                    margin=\"0px 5px\"\n                                    width=\"156px\"\n                                    height=\"40px\"\n                                    borderRadius=\"25px\"\n                                    backgroundColor={Colors.fullWhite}\n                                    onClick={() => this.openAllVehicles()}\n                                >\n                                    <Text\n                                        dblue20\n                                    >\n                                        Not Now\n                                    </Text>\n                                </Button>\n                                <Button\n                                    display=\"inline-block\"\n                                    standardBtn\n                                    margin=\"0px 5px\"\n                                    onClick={() => this.openAddService()}\n                                >\n                                    <Text\n                                        white20\n                                    >\n                                        Yes\n                                    </Text>\n                                </Button>\n                            </ConfirmButtons>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                           <p>Loading...</p>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    state: state\n  })\n  \n  const dispatchToProps = (dispatch) => ({\n     \n  })\n  \n  export default withRouter(connect(mapStateToProps, dispatchToProps)(VehicleConfirmation));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {userLogin} from '../../store/actions/customer'\nimport './customers.css';\n\nclass UserLogin extends Component {\n\n  static propTypes = {\n    userLogin: PropTypes.func.isRequired,\n    resSend: PropTypes.string.isRequired\n  }\n\n  static defaultProps = {\n    resSend: ''\n  }\n\n  componentWillMount() {\n    this.props.userLogin();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h2>Res Send User Login</h2>\n        <p>{this.props.resSend}</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  resSend: state.resSend\n})\n\nconst dispatchToProps = (dispatch) => ({\n   userLogin: () => dispatch(userLogin())\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(UserLogin);","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Colors from '../constants/colors';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\n//import ReactSVG from 'react-svg';\nimport SVG from 'react-inlinesvg';\n\nconst FormField = styled.input`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 0px 10px 10px 0px;\n    padding: 0;\n    padding-left: 10px;\n    font-size: 16px;\n\n    @media ${device.tablet} {\n        width: ${({ width }) => (width || '345px')};\n        height: 50px;\n        float: right;\n        margin: 0 auto;\n    }\n`\n\nconst FormFieldContainer = styled.div`\n\n    @media ${device.tablet} {\n        width: ${({ width }) => (width || '417px')};\n        height: 50px;\n        margin-bottom: 50px;\n    }\n\n    border-radius: 10px;\n    -webkit-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    -moz-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n`\n\nconst FormFieldLeft = styled.div`\n    border-radius: 10px 0px 0px 10px;\n    width: 61px;\n    height: 50px;\n    background-color: ${Colors.fullWhite};\n    float: left;\n`\n\nconst FormFieldSplit = styled.div`\n    width: 1px;\n    height: 50px;\n    background: ${Colors.lightBlue};\n    float: left;\n`\n\nconst FormIconContainer = styled(NewDiv)`\n    width: 33px;\n    height: 33px;\n    margin: 0 auto;\n    margin-top: 8px;\n\n    svg {\n        width: 33px;\n        height: 33px;\n    }\n`\n\nexport default ({ input, label, svg, placeholder, defaultValue, value, fieldWidth, containerWidth, meta: { error, touched } }) => {\n    console.log(defaultValue);\n    return (\n        <FormFieldContainer\n            width={containerWidth}\n        >\n                <FormFieldLeft>\n                    <FormIconContainer\n                    >\n                        <SVG src={svg} />\n                    </FormIconContainer>\n                </FormFieldLeft>\n                <FormFieldSplit />\n                <FormField {...input} placeholder={placeholder} value={value} defaultValue={defaultValue} width={fieldWidth} /> <br/>\n                {touched && error}\n        </FormFieldContainer>\n    )\n}\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport emailb from '../../rersources/svg/emailb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport SVG from 'react-inlinesvg';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport StyledBackIcon from './Styled/StyledBackIcon';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst FIELDS = [\n  {\n    label: 'Customer Name', name: 'cname', svg: userb, placeholder: 'Enter Customer Name...', noValueError: 'You must provide a customer name'\n  },\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter Phone Number...', noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Secondary Phone Number', name: 'pnumber2', svg: phoneb, placeholder: 'Enter Secondary Phone Number', noValueError: 'You must provide a secondary phone number'\n  },\n  {\n    label: 'Customer Email', name: 'email', svg: emailb, placeholder: 'Enter Email...', noValueError: 'You must provide a email address'\n  },\n]\n\nclass AddCustomer extends Component {\n  componentDidMount() {\n    const {showNavBar, toggleNavBar, toggleNavToggle } = this.props\n    if (showNavBar === 'block') {\n      toggleNavBar('none')\n      toggleNavToggle(barsw);\n    } else {\n      console.log('Not showing....');\n    }\n  }\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          type=\"text\" \n          name={field.name} \n          placeholder={field.placeholder}\n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  addNewCustomer = (values) => {\n      const { createNewCustomer, history, realCustomers } = this.props\n      console.log(realCustomers);\n      createNewCustomer(values);\n      history.push('/new-customer/confirmation');\n      window.location.reload();\n  }\n\n  render() {\n    const { createNewCustomer } = this.props\n    console.log(createNewCustomer);\n    return (\n      <div>\n          <MainBG>\n            <StyledBackIcon\n                onClick={() => this.goBack()}\n            >\n                <SVG src={arrowleftw} />\n            </StyledBackIcon>\n              <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Enter The Fields Below\n                </Text>\n              </MainHeading>\n            <FormContainer\n            >\n                <form onSubmit={this.props.handleSubmit(values => this.addNewCustomer(values))}>\n                  {this.renderFields()}\n                  <Button\n                    standardBtn\n                    margin=\"0 auto\"\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Submit\n                    </Text>\n                  </Button>\n                </form>\n            </FormContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values, props) => {\n  //const { realCustomers } = this.props\n  const errors = {};\n\n  console.log(values);\n  console.log(props);\n  console.log(values.email);\n  console.log(props.realCustomers);\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n  });\n\n  for (var i=0; i < props.realCustomers.length; i++) {\n    if (values.email == props.realCustomers[i].email) {\n      errors.email = 'This email is already in use'\n      console.log('ERROR');\n    } else {\n      console.log('SUCCESS');\n    }\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newCustomerForm'\n})(AddCustomer)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport hashb from '../../rersources/svg/hashb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst DetailsTextarea = styled.textarea`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 10px;\n    padding: 0;\n    padding-left: 10px;\n    padding-top: 10px;\n    font-size: 16px;\n\n  @media ${device.tablet} {\n    width: 500px;\n    height: 250px;\n    margin: 0 auto;\n    margin-bottom: 50px;  \n  }\n`\n\nconst FIELDS = [\n  {\n    label: 'Name', name: 'name', svg: userb, placeholder: 'Enter name...', noValueError: 'You must provide a name'\n  },\n  {\n    label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter vehicle mileage...', noValueError: 'You must provide a value for mileage'\n  },\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...',  noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Reason For Visit', name: 'reason', svg: pencilb, placeholder: 'Enter reason...', noValueError: 'You must provide a reason for visit'\n  },\n  {\n    label: 'Tag Number', name: 'tnumber', svg: hashb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number'\n  }\n]\n\nclass AddService extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      currentDetailsText: ''\n    }\n\n    this.updateTextarea = this.updateTextarea.bind(this)\n  }\n\n  renderFields = () => {\n    const selectedCustomer = this.props.selectedCustomer\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          type=\"text\" \n          name={field.name} \n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n          placeholder={field.placeholder}\n          svg={field.svg}\n      />\n      )  \n    });\n  }\n\n  renderDetailsField = () => {\n    console.log('Here is the details textarea....')\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  updateTextarea = (e) => {\n    const newDetailsText = e.target.value\n    this.setState({ currentDetailsText: newDetailsText});\n    console.log(this.state.currentDetailsText)\n  }\n\n  render() {\n    const { createNewService, selectedCustomer, selectedVehicle } = this.props\n    const props = this.props\n    const currentDetailsText = this.state.currentDetailsText\n\n    const createBody = (values, props) => {\n      const history = this.props.history;\n        let dataa = {\n          values: values,\n          props: props,\n          detailsText: currentDetailsText\n        }\n\n        var myJSON = JSON.stringify(dataa)\n\n        console.log(`Here is the data ${myJSON}`)\n        createNewService(dataa);\n        history.push('/customers/chat/service')\n        window.location.reload();\n    }\n\n    return (\n      <div>\n      <MainBG>\n        <StyledBackIcon\n            onClick={() => this.goBack()}\n        >\n           <SVG src={arrowleftw} />\n        </StyledBackIcon>\n          <MainHeading>\n            <Text\n              mainHeading\n              padding=\"30px 0 50px 0\"\n            >\n              Enter The Fields Below\n            </Text>\n          </MainHeading>\n        <FormContainer\n        >\n            <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n              {this.renderFields()}\n              <DetailsTextarea \n                value={this.state.currentDetailsText}\n                onChange={this.updateTextarea}\n                placeholder='Enter Details...'\n              />\n              <Button\n                standardBtn\n                margin=\"0 auto\"\n                type=\"submit\"\n              >\n                <Text\n                  buttonText\n                >\n                  Submit\n                </Text>\n              </Button>\n            </form>\n        </FormContainer>\n      </MainBG>\n  </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newServiceForm'\n})(AddService)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport calendarb from '../../rersources/svg/calendarb.svg';\nimport carb from '../../rersources/svg/carb.svg';\nimport licenseb from '../../rersources/svg/licenseb.svg';\nimport vinb from '../../rersources/svg/vinb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport hashb from '../../rersources/svg/hashb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst FIELDS = [\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...', noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Secondary Phone Number', name: 'pnumber2', svg: phoneb, placeholder: 'Enter secondary phone number...',  noValueError: 'You must provide a secondary phone number'\n  },\n  {\n    label: 'Vehicle Year', name: 'vyear', svg: calendarb, placeholder: 'Enter vehicle year...', noValueError: 'You must provide a vehicle year'\n  },\n  {\n    label: 'Vehicle Make', name: 'vmake', svg: carb, placeholder: 'Enter vehicle make...', noValueError: 'You must provide a vehicle make'\n  },\n  {\n    label: 'Vehicle Model', name: 'vmodel', svg: carb, placeholder: 'Enter vehicle model..', noValueError: 'You must provide a vehicle model'\n  },\n  {\n    label: 'License Plate Number', name: 'lpnumber', svg: licenseb, placeholder: 'Enter license plate number...', noValueError: 'You must provide a license plate number'\n  },\n  {\n    label: 'Vehicle Vin Number', name: 'vnumber', svg: vinb, placeholder: 'Enter vehicle vin number...', noValueError: 'You must provide a vin number'\n  },\n  {\n    label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter mileage...', noValueError: 'You must provide the mileage'\n  },\n  {\n    label: 'Tag Number', name: 'tnumber', svg: hashb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number'\n  },\n]\n\nclass AddVehicle extends Component {\n  componentDidMount() {\n    const { getSelectedCustomer, realCustomers } = this.props\n\n  }\n\n  renderFields = () => {\n    const selectedCustomer = this.props.selectedCustomer\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          type=\"text\" \n          name={field.name} \n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n          placeholder={field.placeholder}\n          svg={field.svg}\n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history, selectedCustomer } = this.props\n    console.log(this.props)\n    console.log(`Here is the selected customer ${selectedCustomer}`);\n    history.go(-1)\n  }\n\n  render() {\n    const { createNewVehicle, selectedCustomer } = this.props\n    console.log(this.props);\n    console.log(selectedCustomer);\n    const props = this.props\n\n    const createBody = (values, props) => {\n      const history = props.history\n        let dataa = {\n          values: values,\n          props: props\n        }\n        createNewVehicle(dataa);\n        console.log(history)\n        history.push('/new-vehicle/confirmation');\n        window.location.reload();\n    }\n\n    return (\n      <div>\n      <MainBG>\n        <StyledBackIcon\n            onClick={() => this.goBack()}\n        >\n           <SVG src={arrowleftw} />\n        </StyledBackIcon>\n          <MainHeading>\n            <Text\n              mainHeading\n              padding=\"30px 0 50px 0\"\n            >\n              Enter The Fields Below\n            </Text>\n          </MainHeading>\n        <FormContainer\n        >\n            <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n              {this.renderFields()}\n              <Button\n                standardBtn\n                margin=\"0 auto\"\n                type=\"submit\"\n              >\n                <Text\n                  buttonText\n                >\n                  Submit\n                </Text>\n              </Button>\n            </form>\n        </FormContainer>\n      </MainBG>\n  </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newVehicleForm'\n})(AddVehicle)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewUser } from '../../store/actions/customer';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport Colors from '../constants/colors';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport { MainBG, NewDiv } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst RegisterContainer = styled(NewDiv)`\n  @media ${device.tablet} {\n    width: 418px;\n    height: 700px;\n    margin: 0 auto;\n  } \n\n`\n\n\nconst FIELDS = [\n  {\n    label: 'Email', name: 'email', svg: userb, placeholder: 'Enter Email....', noValueError: 'You must provide a email address'\n  },\n  {\n    label: 'Password', name: 'password', svg: lockb, placeholder: 'Enter Password....', noValueError: 'You must provide a password'\n  },\n  {\n    label: 'Confirm Password', name: 'password2', svg: lockb, placeholder: 'Confirm Password....', noValueError: 'Please confirm your password'\n  },\n  {\n    label: 'Company Name', name: 'companyName', svg: lockb, placeholder: 'Enter Company Name....', noValueError: 'Please enter a name for your company'\n  }\n]\n\nclass RegisterUser extends Component {\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          placeholder={field.placeholder}\n          type=\"text\" \n          name={field.name} \n          component={TextField}\n          fieldWidth=\"345px\"\n          containerWidth=\"417px\" \n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  handleNewUser = (values) => {\n    const { createNewUser, history } = this.props\n    createNewUser(values);\n  //  history.push('/login')\n  }\n\n  render() {\n    const { createNewUser } = this.props\n    return (\n      <div>\n          <MainBG>\n            <RegisterContainer\n            >\n              <NewDiv\n                padding=\"200px 0 56px 0\"\n              >\n                  <img src = { mainLogo } />\n                </NewDiv>\n                <form onSubmit={this.props.handleSubmit(values => this.handleNewUser(values))}>\n                  {this.renderFields()}\n                  <Button\n                    width=\"416px\"\n                    height=\"50px\"\n                    backgroundColor={Colors.darkBlue}\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Sign Up\n                    </Text>\n                  </Button>\n                </form>\n            </RegisterContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n    console.log(values);\n     if (values.password != values.password2) {\n         errors.password2 = 'Passwords do not match'\n    };\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newUserForm'\n})(RegisterUser)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewUser } from '../../store/actions/customer';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport { MainBG, NewDiv } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport colors from '../constants/colors';\n\nconst LoginContainer = styled(NewDiv)`\n  @media ${device.tablet} {\n    width: 418px;\n    height: 700px;\n    margin: 0 auto;\n  } \n\n`\n\nconst FIELDS = [\n  {\n    label: 'Email', name: 'email', placeholder: 'Enter Email....', svg: userb, noValueError: 'You must provide a email address'\n  },\n  {\n    label: 'Password', name: 'password', placeholder: 'Enter Password....', svg: lockb, noValueError: 'You must provide a password'\n  }\n]\n\nclass LoginUser extends Component {\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          type=\"text\" \n          name={field.name} \n          placeholder={field.placeholder}\n          component={TextField} \n      />\n      )  \n    });\n  }\n\n  handleLoginSubmit = (values) => {\n    const { userLogin, history } = this.props\n    userLogin(values);\n   // window.location.reload()\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  render() {\n    const { userLogin, logoutUser } = this.props\n    return (\n      <div>\n          <MainBG>\n            <LoginContainer\n            >\n              <NewDiv\n                padding=\"200px 0 56px 0\"\n              >\n                  <img src = { mainLogo } />\n                </NewDiv>\n                <form onSubmit={this.props.handleSubmit(values => this.handleLoginSubmit(values))}>\n                  {this.renderFields()}\n                  <Button\n                    width=\"416px\"\n                    height=\"50px\"\n                    backgroundColor={colors.darkBlue}\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Sign In\n                    </Text>\n                  </Button>\n                </form>\n            </LoginContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n    console.log(values);\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'userLoginForm'\n})(LoginUser)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport hashb from '../../rersources/svg/hashb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst DetailsTextarea = styled.textarea`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 10px;\n    padding: 0;\n    padding-left: 10px;\n    padding-top: 10px;\n    font-size: 16px;\n\n  @media ${device.tablet} {\n    width: 500px;\n    height: 250px;\n    margin: 0 auto;\n    margin-bottom: 50px;  \n  }\n`\n\nconst FIELDS = [\n  {\n    label: 'Name', name: 'name', svg: userb, placeholder: 'Enter name...', noValueError: 'You must provide a name'\n  },\n  {\n    label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter vehicle mileage...', noValueError: 'You must provide a value for mileage'\n  },\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...',  noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Reason For Visit', name: 'reason', svg: pencilb, placeholder: 'Enter reason...', noValueError: 'You must provide a reason for visit'\n  },\n  {\n    label: 'Tag Number', name: 'tnumber', svg: hashb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number'\n  }\n]\n\nclass EndService extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      currentDetailsText: ''\n    }\n    this.updateTextarea = this.updateTextarea.bind(this)\n  }\n\n  componentDidMount() {\n      const { selectedServiceMessage } = this.props\n      this.setState({ currentDetailsText: selectedServiceMessage.details })\n  }\n\n  renderFields = () => {\n    const { selectedCustomer, selectedServiceMessage } = this.props\n\n    const FIELDS = [\n        {\n          label: 'Name', name: 'name', svg: userb, placeholder: 'Enter name...', noValueError: 'You must provide a name', defaultValue: selectedServiceMessage.customerName\n        },\n        {\n          label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter vehicle mileage...', noValueError: 'You must provide a value for mileage', defaultValue: selectedServiceMessage.mileage\n        },\n        {\n          label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...',  noValueError: 'You must provide a phone number', defaultValue: selectedServiceMessage.phoneNumber\n        },\n        {\n          label: 'Reason For Visit', name: 'reason', svg: pencilb, placeholder: 'Enter reason...', noValueError: 'You must provide a reason for visit', defaultValue: selectedServiceMessage.reason\n        },\n        {\n          label: 'Tag Number', name: 'tnumber', svg: hashb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number', defaultValue: selectedServiceMessage.tagNumber\n        }\n      ]\n\n\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          type=\"text\" \n          name={field.name} \n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n          placeholder={field.placeholder}\n          defaultValue={field.defaultValue}\n          value=\"Value\"\n          svg={field.svg}\n      />\n      )  \n    });\n  }\n\n  renderDetailsField = () => {\n    console.log('Here is the details textarea....')\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  updateTextarea = (e) => {\n    const newDetailsText = e.target.value\n    this.setState({ currentDetailsText: newDetailsText});\n    console.log(this.state.currentDetailsText)\n  }\n\n  render() {\n    const { selectedCustomer, selectedVehicle, selectedServiceText, selectedServiceMessage, updateService } = this.props\n    const props = this.props\n    const currentDetailsText = this.state.currentDetailsText\n\n    console.log(selectedServiceMessage)\n\n    const createBody = (values, props) => {\n      const history = this.props.history;\n        let dataa = {\n          values: values,\n          props: props,\n          detailsText: currentDetailsText\n        }\n\n        var myJSON = JSON.stringify(dataa)\n\n        console.log(`Here is the data ${myJSON}`)\n        updateService(dataa);\n        history.push('/customers/chat/service')\n        window.location.reload();\n    }\n\n    return (\n      <div>\n      <MainBG>\n          <MainHeading>\n            <Text\n              mainHeading\n              padding=\"30px 0 50px 0\"\n            >\n              Confirm Information Below\n            </Text>\n          </MainHeading>\n        <FormContainer\n        >\n            <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n              {this.renderFields()}\n              <DetailsTextarea \n                value={this.state.currentDetailsText}\n                onChange={this.updateTextarea}\n                placeholder='Enter Details...'\n              />\n              <Button\n                standardBtn\n                margin=\"0 auto\"\n                type=\"submit\"\n              >\n                <Text\n                  buttonText\n                >\n                  Submit\n                </Text>\n              </Button>\n            </form>\n        </FormContainer>\n      </MainBG>\n  </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newServiceForm'\n})(EndService)","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors';\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport plusw from '../../../rersources/svg/plusw.svg';\nimport pointw from '../../../rersources/svg/pointw.svg';\nimport phonebookw from '../../../rersources/svg/phonebookw.svg';\nimport settingsw from '../../../rersources/svg/settingsw.svg';\nimport returnw from '../../../rersources/svg/returnw.svg';\nimport barsw from '../../../rersources/svg/barsw.svg';\nimport { NewDiv } from '../Styled/StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\n\nexport const MainNavContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        background-color: ${Colors.black};\n        width: 100%;\n        opacity: .8;\n        z-index: 90;\n        display: ${({ display }) => (display || 'none')};\n        position: fixed;\n        top: 0;\n        bottom: 0;\n    }\n`\n\n\nexport const HeaderContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        background-color: ${Colors.lightBlue};\n        float: left;\n        position: fixed;\n        height: 100vh;\n        z-index: 100;\n        display: ${({ display }) => (display || 'none')};\n        border-bottom-right-radius: 20px;\n        border-top-right-radius: 20px;\n    } \n`\n\nexport const HeaderTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        height: 207px;\n        padding-top: 15px;\n        background-color: ${Colors.fullWhite};\n        border-top-right-radius: 20px;\n    } \n`\n\nexport const HeaderTopImg = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100px;\n        height: 100px;\n        border-radius: 50px;\n        margin: 0 auto;\n        background: ${Colors.darkBlue};\n    }\n`\n\nexport const HeaderTopText = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 92%;\n        margin: 0 auto;\n        margin-top: 15px;\n    }\n`\n\nexport const HeaderLIContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        height: 70px;\n        width: 100%\n        border-bottom: 1px solid white;\n        background: ${Colors.lightBlue};\n    }\n`\n\nexport const LILeft = styled(NewDiv)`\n    @media ${device.tablet} {\n        float: left;\n        width: 80px;\n        height: 70px;\n    }\n`\n\nexport const LIRight = styled(NewDiv)`\n    @media ${device.tablet} {\n        float: right;\n        width: 243px;\n        height: 70px;\n        text-align: left;\n        line-height: 70px;\n    }\n`\n\nexport const NavLIIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding-top: 20px;\n        width: 30px;\n        height: 30px;\n        margin: 0 auto;\n\n       svg {\n           width: 30px;\n           height: 30px;\n       } \n    }\n`\n\nexport const NavToggleIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        height: 50px;\n        width: 50px;\n        position: fixed;\n        bottom: 35px;\n        left: 25px;\n        display: ${({ display }) => (display || 'none')};\n        z-index: 999;\n\n        svg {\n            height: 50px;\n            width: 50px;\n        }\n    }\n`\n\nclass StyledNavBar extends Component  {\n\n    handleLogout = () => {\n        const { logoutUser, history } = this.props\n        console.log('Handling logout....')\n        logoutUser();\n        history.push('/')\n        window.location.reload()\n    }\n\n    render() {\n        const { renderContent, toggleNavBar, toggleNavToggle, fetchUser, showNavBar, showNavToggle, auth } = this.props\n        const data = this.props && this.props.auth ? this.props.auth.data: null\n        var companyName;\n        if (data) {\n            companyName = data.email\n        } else {\n            companyName = 'No Company Name'\n        }\n        console.log(showNavToggle);\n        console.log(showNavBar);\n        const toggleNav = () => {\n            if (showNavBar === 'block') {\n                toggleNavBar('none')\n                toggleNavToggle(barsw);\n            } else {\n                toggleNavBar('block');\n                toggleNavToggle(returnw);\n            }\n        }\n        return (\n          <div>\n              <MainNavContainer \n                display={showNavBar}\n              />\n            <HeaderContainer\n                display={showNavBar}\n            >\n                <HeaderTop>\n                      <HeaderTopImg />\n                      <HeaderTopText>\n                          <Text\n                            lblue22\n                            padding=\"10px 0 0 0\"\n                            maxWidth=\"300px\"\n                          >\n                              {companyName}\n                          </Text>\n                          <Text\n                            gray30\n                            padding=\"10px 0 0 0\"\n                          >\n                              Welcome\n                          </Text>\n                      </HeaderTopText>\n                </HeaderTop>\n                <Link to ='/new-customer'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={plusw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              New Customer\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/customers/chat/service'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={pointw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              Current Vehicles\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/all-customers'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={phonebookw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              All Customers\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/settings'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={settingsw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              Settings\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                  <HeaderLIContainer\n                    onClick={this.handleLogout}\n                  >\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={settingsw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              {renderContent()}\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n            </HeaderContainer>\n             <NavToggleIcon\n             onClick={toggleNav}\n             display='block'\n           >\n               <SVG src={showNavToggle} />\n           </NavToggleIcon>\n           </div>\n          )\n    }\n   \n  }\n\n  export default withRouter(StyledNavBar);\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\n\nclass CustomerService extends Component {\n\n  componentDidMount() {\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    openServiceCustomer = () => {\n        const { history } = this.props\n        history.push(`/new-vehicle`);\n    }\n\n  render() {\n    const realCustomers = this.props.state.realCustomers\n    const selectedCustomer = this.props.selectedCustomer\n\n    console.log(realCustomers.length)\n    console.log(selectedCustomer);\n    console.log(this.props);\n\n    if (realCustomers.length >= 1) {\n        return (\n            <div>\n              <h2>Customer Service</h2>\n              <Button onClick={() => this.openServiceCustomer()}>\n                  Add Vehicle\n              </Button>\n            </div>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerService));","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Provider } from 'react-redux'\nimport logo from './logo.svg'\nimport mainLogo from './rersources/mainLogo.png';\nimport './App.css';\nimport store from './store';\nimport history from './history';\nimport Customers from './components/Customer/customers';\nimport ChatMessenger from './components/Customer/ChatMessenger';\nimport AllCustomers from './components/Customer/AllCustomers';\nimport CustomerInfo from './components/Customer/CustomerInfo';\nimport VehicleInfo from './components/Customer/VehicleInfo';\nimport ServiceInfo from './components/Customer/ServiceInfo';\nimport CustomerConfirmation from './components/Customer/CustomerConfirmation';\nimport VehicleConfirmation from './components/Customer/VehicleConfirmation';\nimport UserLogin from './components/Customer/userLogin';\nimport AddCustomer from './components/Customer/AddCustomer';\nimport AddService from './components/Customer/AddService';\nimport AddVehicle from './components/Customer/AddVehicle';\nimport RegisterUser from './components/Customer/RegisterUser';\nimport LoginUser from './components/Customer/LoginUser';\nimport EndService from './components/Customer/EndService';\nimport StyledNavBar from './components/Customer/Styled/StyledNavBar';\nimport CustomerService from './components/Customer/CustomerService';\nimport { connect } from 'react-redux';\n\nimport { createNewCustomer, createNewUser, createNewVehicle, userLogin, logoutUser, fetchUser, getRealCustomers, getCustomerVehicles, createNewService, getCustomerServices, createNewToMessage, getCustomerActiveToMessages, updateService } from './store/actions/customer';\nimport { toggleNavBar, toggleNavToggle, getSelectedCustomer, getSelectedVehicle, getCurrentEmailId } from './store/reducers/environment';\n\nimport styled from 'styled-components';\n\nimport { BrowserRouter as Router, Route, Link, withRouter, Switch } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\n\nconst Code = () => {\n  return (\n    <div>\n      Code Code Code\n    </div>\n  )\n}\n\nclass App extends Component {\n\n  componentDidMount() {\n    const { fetchUser, getRealCustomers, getCustomerVehicles, getCustomerServices, getCustomerActiveToMessages } = this.props;\n    getRealCustomers();\n    getCustomerVehicles();\n    getCustomerServices();\n    fetchUser();\n    getCustomerActiveToMessages();\n  }\n\n  renderContent = () => {\n    const props = this.props\n    const auth = this.props.auth\n    const data = props && props.auth ? props.auth.data : null;\n    switch (data) {\n      case null:\n        return 'Still deciding';\n      case false:\n        return 'Login';\n      case '':\n        return 'Login';\n      default:\n        return 'Logout';\n    }\n  }\n\n  renderCorrectPage = () => {\n    const props = this.props\n    const auth = this.props.auth\n    const data = props && props.auth ? props.auth.data: null\n\n    const userLogin = this.props.userLogin;\n    const logoutUser = this.props.logoutUser;\n    const getSelectedCustomer = this.props.getSelectedCustomer;\n    const environment = this.props.environment;\n\n    switch (data) {\n      case null:\n        console.log('null');\n        return (\n          <LoginUser\n           userLogin={userLogin}\n            logoutUser={logoutUser}\n          />\n        )\n      case false:\n          console.log('false');\n          return (\n            <LoginUser\n              userLogin={userLogin}\n              logoutUser={logoutUser}\n              history={history}\n           />\n        )\n      case '':\n          console.log('empty');\n          return (\n            <LoginUser\n              userLogin={userLogin}\n              logoutUser={logoutUser}\n              history={history}\n           />\n        )\n      default:\n          console.log('default');\n        return (\n            <AllCustomers\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              history={history}\n             />\n        )\n\n    }\n  }\n\n  render () {\n    const createNewCustomer = this.props.createNewCustomer;\n    const createNewUser = this.props.createNewUser;\n    const createNewVehicle = this.props.createNewVehicle;\n    const createNewService = this.props.createNewService;\n    const updateService = this.props.updateService;\n    const createNewToMessage = this.props.createNewToMessage;\n    const userLogin = this.props.userLogin;\n    const logoutUser = this.props.logoutUser;\n    const toggleNavBar = this.props.toggleNavBar;\n    const toggleNavToggle = this.props.toggleNavToggle;\n    const getSelectedCustomer = this.props.getSelectedCustomer;\n    const getSelectedVehicle = this.props.getSelectedVehicle;\n    const getCurrentEmailId = this.props.getCurrentEmailId\n    const environment = this.props.environment;\n    const realCustomers = this.props.state.realCustomers;\n    const customerVehicles = this.props.state.customerVehicles;\n    const customerServices = this.props.state.customerServices;\n    const activeToMessages = this.props.state.activeToMessages;\n    const auth = this.props.auth;\n;\n    console.log(this.props);\n    console.log(this.props.environment);\n    console.log(realCustomers);\n    console.log(customerVehicles);\n    console.log(customerServices);\n    console.log(activeToMessages)\n\n    return (\n          <div className=\"App\">\n            <StyledNavBar\n              renderContent={this.renderContent} \n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              fetchUser={fetchUser}\n              showNavBar={environment.showNavBar}\n              showNavToggle={environment.showNavToggle}\n              logoutUser={logoutUser}\n              history={history}\n              auth={auth}\n            />\n            <Switch>\n            <Route exact path=\"/\" \n            render={(props) => \n            <div>\n                {this.renderCorrectPage()}\n              </div>\n                }\n             />\n            <Route exact path=\"/login\" \n            render={(props) => <div>\n              {this.renderCorrectPage()}\n            </div> }\n            history={history}\n             />\n            <Route exact path=\"/register\" \n            render={(props) => <RegisterUser\n            createNewUser={createNewUser}\n            history={history}\n             />  }\n             />\n            <Route exact path=\"/new-customer\" \n            render={(props) => <AddCustomer\n            createNewCustomer={createNewCustomer}\n            toggleNavBar={toggleNavBar}\n            toggleNavToggle={toggleNavToggle}\n            showNavBar={environment.showNavBar}\n            history={history}\n            realCustomers={realCustomers}\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            getCurrentEmailId={getCurrentEmailId}\n             />  }\n             />\n             <Route exact path=\"/new-vehicle\" \n            render={(props) => <AddVehicle\n            createNewVehicle={createNewVehicle}\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            history={history}\n             />  }\n             />\n             <Route exact path=\"/new-service\" \n            render={(props) => <AddService\n            createNewService={createNewService}\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            history={history}\n             />  }\n             />\n             <Route exact path=\"/end-service\" \n            render={(props) => <EndService\n            selectedServiceMessage={environment.selectedServiceMessage}\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            updateService={updateService}\n            history={history}\n             />  }\n             />\n             <Route exact path=\"/new-customer/confirmation\" \n            render={(props) => <CustomerConfirmation\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            realCustomers={realCustomers}\n            history={history}\n             />  }\n             />\n\n            <Route exact path=\"/new-vehicle/confirmation\" \n            render={(props) => <VehicleConfirmation\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            getSelectedCustomer={getSelectedCustomer}\n            realCustomers={realCustomers}\n            customerVehicles={customerVehicles}\n            getSelectedVehicle={getSelectedVehicle}\n            history={history}\n             />  }\n             />\n\n            <Route exact path=\"/all-customers\" \n            render={(props) => <AllCustomers\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              history={history}\n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              showNavBar={environment.showNavBar}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/:customerid\" \n              render={(props) => <CustomerInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/vehicles/:vehicle\" \n              render={(props) => <VehicleInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n              customerServices={customerServices}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/vehicles/:vehicleid/:serviceid\" \n              render={(props) => <ServiceInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n              customerServices={customerServices}\n              selectedService={environment.selectedService}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/service/:customerid\" \n              render={(props) => <AddService\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              selectedVehicle={environment.selectedVehicle}\n              realCustomers={realCustomers}\n              history={history}\n              createNewService={createNewService}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/chat/service\" \n              render={(props) => <ChatMessenger\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              selectedVehicle={environment.selectedVehicle}\n              realCustomers={realCustomers}\n              history={history}\n              customerServices={customerServices}\n              createNewToMessage={createNewToMessage}\n              activeToMessages={activeToMessages}\n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              showNavBar={environment.showNavBar}\n    \n             />  }\n             />\n            <Route exact path=\"/settings\" component={Code} />\n            <Route exact path=\"/logout\" component={Code} logoutUser={logoutUser} />\n            </Switch>\n          </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { \n        auth: state.auth,\n        environment: state.environment,\n        state: state\n      }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createNewCustomer: (values) => dispatch(createNewCustomer(values)),\n    createNewUser: (values) => dispatch(createNewUser(values)),\n    createNewVehicle: (values) => dispatch(createNewVehicle(values)),\n    createNewService: (values) => dispatch(createNewService(values)),\n    updateService: (values) => dispatch(updateService(values)),\n    createNewToMessage: (value) => dispatch(createNewToMessage(value)),\n    userLogin: (values) => dispatch(userLogin(values)),\n    logoutUser: (values) => dispatch(logoutUser(values)),\n    fetchUser: (values) => dispatch(fetchUser(values)),\n    toggleNavBar: (display) => dispatch(toggleNavBar(display)),\n    toggleNavToggle: (display) => dispatch(toggleNavToggle(display)),\n    getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n    getSelectedVehicle: (vehicle) => dispatch(getSelectedVehicle(vehicle)),\n    getCurrentEmailId: (email) => dispatch(getCurrentEmailId(email)),\n    getRealCustomers: () => dispatch(getRealCustomers()),\n    getCustomerVehicles: () => dispatch(getCustomerVehicles()),\n    getCustomerServices: () => dispatch(getCustomerServices()),\n    getCustomerActiveToMessages: () => dispatch(getCustomerActiveToMessages())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport history from './history';\n\nimport { Provider } from 'react-redux';\n//import reducers from './reducers';\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter\n            history={history}\n        >\n            <App \n                history={history}\n            />\n        </BrowserRouter>\n    </Provider>, \n    document.querySelector('#root')\n);\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/phoneb.cbe528a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/barsw.03d3330b.svg\";","module.exports = __webpack_public_path__ + \"static/media/mainLogo.546207c0.png\";","module.exports = __webpack_public_path__ + \"static/media/userw.60f972be.svg\";","module.exports = __webpack_public_path__ + \"static/media/phonew.1d986067.svg\";","module.exports = __webpack_public_path__ + \"static/media/mileageb.096767ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/hashb.d38b84d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencilb.fc4dabf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/carw.8e8e5ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/closer.e4f6d492.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendarw.702919de.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkw.ed1b0bd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/mailw.1bafb9c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinw.d6f95123.svg\";"],"sourceRoot":""}