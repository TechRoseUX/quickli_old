{"version":3,"sources":["rersources/svg/carb.svg","rersources/svg/historyw.svg","rersources/svg/templatey.svg","rersources/svg/senddb.svg","rersources/svg/licensew.svg","rersources/svg/detailsw.svg","rersources/svg/mileagew.svg","rersources/svg/pencilw.svg","rersources/svg/emailb.svg","rersources/svg/calendarb.svg","rersources/svg/licenseb.svg","rersources/svg/vinb.svg","rersources/svg/userb.svg","rersources/svg/plusw.svg","rersources/svg/pointw.svg","rersources/svg/phonebookw.svg","rersources/svg/settingsw.svg","rersources/svg/returnw.svg","rersources/svg/lockb.svg","logo.svg","rersources/svg/arrowleftw.svg","store/reducers/customer.js","store/actions/constants.js","store/reducers/environment.js","store/reducers/realCustomer.js","store/reducers/customerVehicle.js","store/reducers/customerService.js","store/reducers/customerToMessage.js","store/reducers/index.js","store/reducers/auth.js","store/index.js","history.js","store/actions/customer.js","components/Customer/customers.js","components/Customer/Styled/StyledMediaQuery.jsx","components/constants/colors.js","components/Customer/Styled/StyledComponents.jsx","components/Customer/Styled/Button.jsx","components/Customer/Styled/Text.jsx","components/Customer/Styled/StyledOverlayTemplate.jsx","components/Customer/Styled/StyledOverlayEndService.jsx","components/Customer/CustomerCellRow.js","components/Customer/Styled/StyledBackIcon.jsx","components/Customer/ChatMessenger.js","components/Customer/AllCustomers.js","components/Customer/CustomerInfo.js","components/Customer/VehicleInfo.js","components/Customer/ServiceInfo.js","components/Customer/CustomerConfirmation.js","components/Customer/VehicleConfirmation.js","components/Customer/userLogin.js","components/Customer/TextField.js","components/Customer/AddCustomer.js","components/Customer/AddService.js","components/Customer/AddVehicle.js","components/Customer/RegisterUser.js","components/Customer/LoginUser.js","components/Customer/EndService.js","components/Customer/Styled/StyledNavBar.jsx","components/Customer/CustomerService.js","App.js","registerServiceWorker.js","index.js","rersources/svg/phoneb.svg","rersources/svg/barsw.svg","rersources/mainLogo.png","rersources/svg/userw.svg","rersources/svg/phonew.svg","rersources/svg/mileageb.svg","rersources/svg/hashb.svg","rersources/svg/pencilb.svg","rersources/svg/carw.svg","rersources/svg/closer.svg","rersources/svg/calendarw.svg","rersources/svg/checkw.svg","rersources/svg/mailw.svg","rersources/svg/vinw.svg"],"names":["module","exports","__webpack_require__","p","customerReducer","state","arguments","length","undefined","_ref","type","payload","initialState","showNavBar","showNavToggle","barsw","selectedCustomer","selectedVehicle","selectedService","selectedServiceMesssage","selectedMessageText","showTemplateOverlay","showEndServiceOverlay","currentEmailId","search","currentFilter","getSelectedCustomer","customer","GET_SELECTED_CUSTOMER","updateCustomerSearch","UPDATE_CUSTOMER_SEARCH","getCurrentFilter","filter","GET_CURRENT_FILTER","TOGGLE_NAV_BAR","TOGGLE_NAV_TOGGLE","GET_SELECTED_VEHICLE","GET_SELECTED_SERVICE","GET_SELECTED_SERVICE_MESSAGE","GET_SELECTED_MESSAGE_TEXT","TOGGLE_TEMPLATE_OVERLAY","TOGGLE_END_SERVICE_OVERLAY","GET_CURRENT_EMAIL_ID","customerRealReducer","customerVehicleReducer","customerServiceReducer","customerActiveToMessageReducer","combineReducers","environment","action","Object","objectSpread","display","vehicle","service","selectedServiceMessage","sm","text","status","email","customers","activeToMessages","realCustomers","customerVehicles","customerServices","activeServices","customerActiveServiceReducer","auth","form","reduxForm","middleware","thunk","withDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","apply","createBrowserHistory","getRealCustomers","dispatch","fetch","then","res","json","getCustomerActiveToMessages","userLogin","values","_ref7","asyncToGenerator","regenerator_default","a","mark","_callee7","wrap","_context7","prev","next","setTimeout","location","reload","axios","post","sent","console","log","data","stop","_x7","this","fetchUser","_ref8","_callee8","_context8","get","_x8","Customers","props","getCustomers","react_default","createElement","map","key","id","firstName","lastName","Component","defaultProps","connect","size","device","mobileS","concat","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","colors","fullWhite","lightGray","lighterGray","lightBlue","darkBlue","black","brightRed","NewDiv","styled","div","_templateObject","width","_ref2","height","_ref3","margin","_ref4","padding","_ref5","border","_ref6","borderRadius","textAlign","zIndex","_ref9","float","_ref10","_ref11","background","MainBG","_templateObject2","MainHeading","_templateObject3","Button","button","Button_templateObject","color","Colors","backgroundColor","is","Button_templateObject2","Button_templateObject3","_templateObject4","_templateObject5","_templateObject6","Text","Text_templateObject","lineHeight","maxWidth","fontWeight","fontStyle","fontFamily","Text_templateObject2","Text_templateObject3","Text_templateObject4","Text_templateObject5","Text_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","propTypes","PropTypes","string","largeText","bool","subtext","subtitle","error","gray","pointer","underline","inline","StyledOverlayContainer","StyledOverlayTemplate_templateObject","StyledOverlayContentBox","StyledOverlayTemplate_templateObject2","OverlayContentContainer","StyledOverlayTemplate_templateObject3","CustomerInputMessage","input","StyledOverlayTemplate_templateObject4","CustomerInputMessageLarge","textarea","StyledOverlayTemplate_templateObject5","TemplateNavContainer","StyledOverlayTemplate_templateObject6","CloseTemplateOverlay","StyledOverlayTemplate_templateObject7","StyledOverlayTemplate","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleNew","e","value","preventDefault","template1","text1","customerName","text2","newText","customText","onSubmit","assertThisInitialized","Styled_Text","white20","onChange","handleChange","bind","name","Styled_Button","standardBtn","onClick","_this$props","getSelectedMessageText","toggleTemplateOverlay","template2","_this$props2","template3","_this$props3","template4","_this$props4","closeTemplateOverlayFunc","forwardTemplate","messageTemplates","templateNumber","setState","backTemplate","event","target","currentTemplate","lib_default","src","closer","dblue16","white16","StyledOverlayEndService_templateObject","StyledOverlayEndService_templateObject2","StyledOverlayEndService_templateObject3","StyledOverlayEndService_templateObject4","StyledOverlayEndService_templateObject5","StyledOverlayEndService_templateObject6","StyledOverlayEndService_templateObject7","StyledOverlayEndService","handleEnd","history","toggleEndServiceOverlay","push","closeEndServiceOverlayFunc","StyledOverlayEndService_StyledOverlayContainer","StyledOverlayEndService_StyledOverlayContentBox","StyledOverlayEndService_CloseTemplateOverlay","dblue22","StyledOverlayEndService_TemplateNavContainer","CustomerCellDiv","CustomerCellRow_templateObject","CellID","CustomerCellRow_templateObject2","CellInfoLeft","CustomerCellRow_templateObject3","CellInfoRight","CustomerCellRow_templateObject4","CustomerCellRow","myArray","i","customerid","openCustomerProfile","_this2","phoneNumber1","lblue20","acName","borderBottom","withRouter","StyledBackIcon","StyledBackIcon_templateObject","MessengerContainer","ChatMessenger_templateObject","MessengerContainerTop","ChatMessenger_templateObject2","MessengerTopText","ChatMessenger_templateObject3","MessageCell","ChatMessenger_templateObject4","MessageCellContentTop","ChatMessenger_templateObject5","MessageCellContentBottom","ChatMessenger_templateObject6","MessengerSearchBar","ChatMessenger_templateObject7","MessengerTextBox","ChatMessenger_templateObject8","MessengerChatContainer","ChatMessenger_templateObject9","MessengerChatTopSec","ChatMessenger_templateObject10","MessengerFixedBottom","ChatMessenger_templateObject11","ChatMessagesContainer","ChatMessenger_templateObject12","BottomLeftButton","ChatMessenger_templateObject13","BottomRightButton","ChatMessenger_templateObject14","BottomMiddleText","ChatMessenger_templateObject15","ChatToRow","ChatMessenger_templateObject16","ChatMessageToBubble","ChatMessenger_templateObject17","ChatMessenger","serviceid","openThisChat","v","getSelectedServiceMessage","displayOverlay","selectedMesageText","Styled_StyledOverlayTemplate","displayOverlayEnd","Styled_StyledOverlayEndService","endService","renderChatCells","activeServiceArray","reversedActiveServiceArray","reverse","item","toLowerCase","filterVal","match","lastMessage","formattedTime","displayedMessage","vMessages","slice","textMessage","jsTime","date","timestamp","substring","newDate","Date","fHours","getHours","ampm","getMinutes","substr","ellipsis","renderServiceId","dblue30","checkMessageFunc","_this$props5","renderChatMessages","_this$props6","displayedToMessages","toggleTemplateTrue","_this$props7","sendNewMessage","_this$props8","createNewToMessage","phoneNumber","vehicleid","user","searchMessageCells","_this$props9","correctChats","correctDisplayedMessages","_this$props10","toggleNavBar","toggleNavToggle","go","_this$props11","white35","placeholder","templatey","method","senddb","getActiveCustomerServices","customerActiveServices","CustomerSearchBar","AllCustomers_templateObject","CustomerSearchSelectSec","AllCustomers_templateObject2","SearchNameBox","AllCustomers_templateObject3","NameSelectDiv","AllCustomers_templateObject4","StyledSelect","select","AllCustomers_templateObject5","SearchButton","AllCustomers_templateObject6","AllCsBG","AllCustomers_templateObject7","AllCustomers","searchCustomers","s","document","getElementById","strSelect","options","selectedIndex","updateFilter","cFilter","renderRows","filteredCustomers","realCustomersReversed","number","d","Customer_CustomerCellRow","assign","mainHeading","CustomerInfo_templateObject","InfoElement","CustomerInfo_templateObject2","InfoEIcon","CustomerInfo_templateObject3","InfoEText","CustomerInfo_templateObject4","marginLeft","CustomerInfo","openNewVehicle","openVehicleDetails","getSelectedVehicle","renderVehicles","newVehicleArray","ownerid","vehicles","vehicleMake","vehicleModel","params","sc","Styled_StyledBackIcon","goBack","arrowleftw","userw","customerIE","phonew","mailw","carw","largeBtn","VehicleInfo_templateObject","VehicleInfo_templateObject2","VehicleInfo_templateObject3","VehicleInfo_templateObject4","VehicleInfo","openServiceScreen","openServiceDetails","getSelectedService","renderServices","newServiceArray","services","VehicleInfo_InfoElement","VehicleInfo_InfoEIcon","VehicleInfo_InfoEText","phoneNumber2","calendarw","vehicleYear","licensew","vehicleLicenseNumber","vinw","vehicleVinNumber","ServiceInfo_templateObject","ServiceInfo_templateObject2","ServiceInfo_templateObject3","ServiceInfo_templateObject4","ServiceInfo","fMinutes","fDay","getDate","fMonth","getMonth","fYear","getFullYear","formattedDate","ServiceInfo_InfoElement","ServiceInfo_InfoEIcon","ServiceInfo_InfoEText","mileagew","mileage","pencilw","reason","detailsw","details","ConfirmContentContainer","CustomerConfirmation_templateObject","ConfirmIconDiv","CustomerConfirmation_templateObject2","ConfirmContentText","CustomerConfirmation_templateObject3","ConfirmButtons","CustomerConfirmation_templateObject4","CustomerConfirmation","openAllVehicles","openAddVehicle","pop","currentCus","checkw","dblue20","VehicleConfirmation_templateObject","VehicleConfirmation_templateObject2","VehicleConfirmation_templateObject3","VehicleConfirmation_templateObject4","VehicleConfirmation","openAddService","VehicleConfirmation_ConfirmContentContainer","VehicleConfirmation_ConfirmIconDiv","VehicleConfirmation_ConfirmContentText","VehicleConfirmation_ConfirmButtons","UserLogin","resSend","FormField","TextField_templateObject","FormFieldContainer","TextField_templateObject2","FormFieldLeft","TextField_templateObject3","FormFieldSplit","TextField_templateObject4","FormIconContainer","TextField_templateObject5","TextField","svg","label","defaultValue","fieldWidth","containerWidth","_ref3$meta","meta","touched","FormContainer","AddCustomer_templateObject","FIELDS","userb","noValueError","phoneb","emailb","AddCustomer","renderFields","field","Field","component","handleInputChange","addNewCustomer","createNewCustomer","handleSubmit","buttonText","validate","errors","forEach","AddService_templateObject","DetailsTextarea","AddService_templateObject2","mileageb","pencilb","hashb","AddService","renderDetailsField","updateTextarea","newDetailsText","currentDetailsText","createNewService","AddService_FormContainer","dataa","detailsText","myJSON","JSON","stringify","createBody","AddVehicle_templateObject","calendarb","carb","licenseb","vinb","AddVehicle","createNewVehicle","AddVehicle_FormContainer","RegisterContainer","RegisterUser_templateObject","lockb","RegisterUser","handleNewUser","createNewUser","mainLogo","password","password2","LoginContainer","LoginUser_templateObject","LoginUser","handleLoginSubmit","logoutUser","EndService_templateObject","EndService_templateObject2","EndService","tagNumber","selectedServiceText","updateService","EndService_FormContainer","EndService_DetailsTextarea","MainNavContainer","StyledNavBar_templateObject","HeaderContainer","StyledNavBar_templateObject2","HeaderTop","StyledNavBar_templateObject3","HeaderTopImg","StyledNavBar_templateObject4","HeaderTopText","StyledNavBar_templateObject5","HeaderLIContainer","StyledNavBar_templateObject6","LILeft","StyledNavBar_templateObject7","LIRight","StyledNavBar_templateObject8","NavLIIcon","StyledNavBar_templateObject9","NavToggleIcon","StyledNavBar_templateObject10","StyledNavBar","handleLogout","companyName","renderContent","lblue22","gray30","react_router_dom","to","plusw","navItem","pointw","phonebookw","settingsw","returnw","CustomerService","openServiceCustomer","Code","App","renderCorrectPage","Customer_LoginUser","Customer_AllCustomers","getCustomerVehicles","getCustomerServices","getCurrentEmailId","className","Styled_StyledNavBar","react_router","exact","path","render","Customer_RegisterUser","Customer_AddCustomer","Customer_AddVehicle","Customer_AddService","Customer_EndService","Customer_CustomerConfirmation","Customer_VehicleConfirmation","Customer_CustomerInfo","Customer_VehicleInfo","Customer_ServiceInfo","Customer_ChatMessenger","_callee","_context","_x","_callee3","_context3","_x3","_callee2","_context2","_x2","_callee4","_context4","_x4","_callee5","_context5","_x5","_callee6","_context6","_x6","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","es","store","src_App_0","querySelector","URL","process","origin","addEventListener","response","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c421a494.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carb.3154024e.svg\";","module.exports = __webpack_public_path__ + \"static/media/historyw.ee726142.svg\";","module.exports = __webpack_public_path__ + \"static/media/templatey.be1a3992.svg\";","module.exports = __webpack_public_path__ + \"static/media/senddb.0cb7205c.svg\";","module.exports = __webpack_public_path__ + \"static/media/licensew.ec0917c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/detailsw.1a5681fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/mileagew.f795afec.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencilw.9c7b621e.svg\";","module.exports = __webpack_public_path__ + \"static/media/emailb.49db445e.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendarb.a503a49e.svg\";","module.exports = __webpack_public_path__ + \"static/media/licenseb.7c356553.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinb.036b5b43.svg\";","module.exports = __webpack_public_path__ + \"static/media/userb.ea158943.svg\";","module.exports = __webpack_public_path__ + \"static/media/plusw.3538fda8.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointw.4ed024ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/phonebookw.38f17819.svg\";","module.exports = __webpack_public_path__ + \"static/media/settingsw.923e5774.svg\";","module.exports = __webpack_public_path__ + \"static/media/returnw.9a134c4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/lockb.726d79e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowleftw.a55b94fb.svg\";","import {GET_CUSTOMERS} from '../actions/constants'\n\nconst customerReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_CUSTOMERS:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerReducer;\n","export const GET_CUSTOMERS = \"GET_CUSTOMERS\";\nexport const GET_REAL_CUSTOMERS = \"GET_REAL_CUSTOMERS\";\nexport const UPDATE_CUSTOMER = \"REMOVE_CUSTOMER\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const GET_VEHICLES = \"GET_VEHICLES\";\nexport const GET_SERVICES = \"GET_SERVICES\";\nexport const GET_ACTIVE_SERVICES = \"GET_ACTIVE_SERVICES\";\nexport const GET_ACTIVE_TO_MESSAGES = \"GET_ACTIVE_TO_MESSAGES\";\n","import lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\n\n// Reducer\nconst initialState = {\n    showNavBar: 'none',\n    showNavToggle: barsw,\n    selectedCustomer: null,\n    selectedVehicle: null,\n    selectedService: null,\n    selectedServiceMesssage: null,\n    selectedMessageText: null,\n    showTemplateOverlay: false,\n    showEndServiceOverlay: false,\n    currentEmailId: '',\n    search: '',\n    currentFilter: 'Name'\n};\n\nexport function toggleNavBar(display) {\n    return {\n        type: TOGGLE_NAV_BAR,\n        display\n    }\n}\n\nexport function toggleNavToggle(display) {\n    return {\n        type: TOGGLE_NAV_TOGGLE,\n        display\n    }\n}\n\nexport function getSelectedCustomer(customer) {\n    return {\n        type: GET_SELECTED_CUSTOMER,\n        customer\n    }\n}\n\nexport function getSelectedVehicle(vehicle) {\n    return {\n        type: GET_SELECTED_VEHICLE,\n        vehicle\n    }\n}\n\nexport function getSelectedService(service) {\n    return {\n        type: GET_SELECTED_SERVICE,\n        service\n    }\n}\n\nexport function getSelectedServiceMessage(sm) {\n    return {\n        type: GET_SELECTED_SERVICE_MESSAGE,\n        sm\n    }\n}\n\nexport function getSelectedMessageText(text) {\n    return {\n        type: GET_SELECTED_MESSAGE_TEXT,\n        text\n    }\n}\n\nexport function toggleTemplateOverlay(status) {\n    return {\n        type: TOGGLE_TEMPLATE_OVERLAY,\n        status\n    }\n}\n\nexport function toggleEndServiceOverlay(status) {\n    return {\n        type: TOGGLE_END_SERVICE_OVERLAY,\n        status\n    }\n}\n\nexport function getCurrentEmailId(email) {\n    return {\n        type: GET_CURRENT_EMAIL_ID,\n        email\n    }\n}\n\nexport function updateCustomerSearch(search) {\n    return {\n        type: UPDATE_CUSTOMER_SEARCH,\n        search\n    }\n}\n\nexport function getCurrentFilter(filter) {\n    return {\n        type: GET_CURRENT_FILTER,\n        filter\n    }\n}\n\nconst TOGGLE_NAV_BAR = 'TOGGLE_NAV_BAR';\nconst TOGGLE_NAV_TOGGLE = 'TOGGLE_NAV_TOGGLE';  \nconst GET_SELECTED_CUSTOMER = 'GET_SELECTED_CUSTOMER';\nconst GET_SELECTED_VEHICLE = 'GET_SELECTED_VEHICLE';\nconst GET_SELECTED_SERVICE = 'GET_SELECTED_SERVICE';\nconst GET_SELECTED_SERVICE_MESSAGE = 'GET_SELECTED_SERVICE_MESSAGE';\nconst GET_SELECTED_MESSAGE_TEXT = 'GET_SELECTED_MESSAGE_TEXT';\nconst TOGGLE_TEMPLATE_OVERLAY = 'TOGGLE_TEMPLATE_OVERLAY';\nconst TOGGLE_END_SERVICE_OVERLAY = 'TOGGLE_END_SERVICE_OVERLAY';\nconst GET_CURRENT_EMAIL_ID = 'GET_CURRENT_EMAIL_ID';\nconst UPDATE_CUSTOMER_SEARCH = 'UPDATE_CUSTOMER_SEARCH';\nconst GET_CURRENT_FILTER = 'GET_CURRENT_FILTER';\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n    case TOGGLE_NAV_BAR:\n        return {\n            ...state,\n            showNavBar: action.display\n        }\n    case TOGGLE_NAV_TOGGLE:\n        return {\n            ...state,\n            showNavToggle: action.display\n        }\n    case GET_SELECTED_CUSTOMER:\n        return {\n            ...state,\n            selectedCustomer: action.customer\n        }\n    case GET_SELECTED_VEHICLE:\n        return {\n            ...state,\n            selectedVehicle: action.vehicle\n        }\n    case GET_SELECTED_SERVICE:\n        return {\n            ...state,\n            selectedService: action.service\n        }\n    case GET_SELECTED_SERVICE_MESSAGE:\n        return {\n            ...state,\n            selectedServiceMessage: action.sm\n        }\n    case GET_SELECTED_MESSAGE_TEXT:\n        return {\n            ...state,\n            selectedMessageText: action.text\n        }\n    case TOGGLE_TEMPLATE_OVERLAY:\n        return {\n            ...state,\n            showTemplateOverlay: action.status\n        }\n    case TOGGLE_END_SERVICE_OVERLAY:\n        return {\n            ...state,\n            showEndServiceOverlay: action.status\n        }\n    case GET_CURRENT_EMAIL_ID:\n        return {\n            ...state,\n            currentEmailId: action.email\n        }\n    case UPDATE_CUSTOMER_SEARCH:\n        return {\n            ...state,\n            search: action.search\n        }\n    case GET_CURRENT_FILTER:\n        return {\n            ...state,\n            currentFilter: action.filter\n        }\n    default:\n        return state;\n    }\n}\n","import {GET_REAL_CUSTOMERS} from '../actions/constants'\n\nconst customerRealReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_REAL_CUSTOMERS:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerRealReducer;","import {GET_VEHICLES} from '../actions/constants'\n\nconst customerVehicleReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_VEHICLES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerVehicleReducer;","import {GET_SERVICES} from '../actions/constants'\n\nconst customerServiceReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_SERVICES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerServiceReducer;","import {GET_ACTIVE_TO_MESSAGES} from '../actions/constants'\n\nconst customerActiveToMessageReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_ACTIVE_TO_MESSAGES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerActiveToMessageReducer;","import {combineReducers} from 'redux';\nimport customerReducer from './customer';\nimport auth from './auth';\nimport environment from './environment';\nimport { reducer as reduxForm } from 'redux-form';\nimport customerRealReducer from './realCustomer';\nimport customerVehicleReducer from './customerVehicle';\nimport customerServiceReducer from './customerService';\nimport customerActiveServiceReducer from './customerService';\nimport customerActiveToMessageReducer from './customerToMessage';\n\nexport default combineReducers({\n  environment: environment,\n  customers: customerReducer,\n  activeToMessages: customerActiveToMessageReducer,\n  realCustomers: customerRealReducer,\n  customerVehicles: customerVehicleReducer,\n  customerServices: customerServiceReducer,\n  activeServices: customerActiveServiceReducer,\n  auth: auth,\n  form: reduxForm\n});\n","import {FETCH_USER} from '../actions/constants'\n\nexport default function(state = null, action) {\n    switch (action.type) {\n        case FETCH_USER:\n            return action.payload || false;\n        default:\n            return state;\n    }\n}","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleware = [\n  thunk\n]\nconst withDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(rootReducer, withDevTools(\n  applyMiddleware(...middleware)\n))\n","import { createBrowserHistory, createHashHistory } from 'history';\n\nexport default createBrowserHistory();","import axios from 'axios';\nimport {GET_CUSTOMERS, UPDATE_CUSTOMER, GET_REAL_CUSTOMERS, FETCH_USER, GET_VEHICLES, GET_SERVICES, GET_ACTIVE_SERVICES, GET_ACTIVE_TO_MESSAGES} from './constants';\n\nexport const getCustomers = () => dispatch => {\n  return fetch('/api/customers')\n    .then(res => res.json())\n    .then(customers => dispatch({type: GET_CUSTOMERS, payload: customers}))\n}\n\nexport const getRealCustomers = () => dispatch => {\n  return fetch('/all-customers')\n    .then(res => res.json())\n    .then(realCustomers => dispatch({type: GET_REAL_CUSTOMERS, payload: realCustomers}))\n}\n\nexport const getCustomerVehicles = () => dispatch => {\n  return fetch('/customer-vehicles')\n  .then(res => res.json())\n  .then(customerVehicles => dispatch({type: GET_VEHICLES, payload: customerVehicles}))\n}\n\nexport const getCustomerServices = () => dispatch => {\n  return fetch('/customer/vehicles-services')\n  .then(res => res.json())\n  .then(customerServices => dispatch({type: GET_SERVICES, payload: customerServices}))\n}\n\nexport const getActiveCustomerServices = () => dispatch => {\n  return fetch('/customers/chat/service')\n  .then(res => res.json())\n  .then(customerActiveServices => dispatch({type: GET_ACTIVE_SERVICES, payload: customerActiveServices}))\n}\n\nexport const getCustomerActiveToMessages = () => dispatch => {\n  return fetch('/customers/chat/service/messages')\n  .then(res => res.json())\n  .then(activeToMessages => dispatch({type: GET_ACTIVE_TO_MESSAGES, payload: activeToMessages}))\n}\n\nexport const createNewCustomer = (values) => async dispatch => {\n  const res = await axios.post('/new-customer', values);\n  console.log('Here is the new customer nfndfnsdfnskdhfkshdf')\n  dispatch({type: GET_CUSTOMERS, payload: res.data});\n  window.location.reload();\n}\n\nexport const createNewVehicle = (dataa) => async dispatch => {\n  const res = await axios.post('/new-vehicle', dataa);\n  dispatch({type: GET_CUSTOMERS, payload: res.data});\n}\n\nexport const createNewUser = (values) => async dispatch => {\n  const res = await axios.post('/register', values);\n  console.log('Here is the new user being added.')\n  dispatch({type: UPDATE_CUSTOMER, payload: res.data})\n}\n\nexport const createNewService = (dataa) => async dispatch => {\n  const res = await axios.post('/customers/service/:customerid', dataa);\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const updateService = (dataa) => async dispatch => {\n  const res = await axios.post('/end-service', dataa);\n  console.log('Updating the service!')\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const createNewToMessage = (value) => async dispatch => {\n  console.log(value)\n  const res = await axios.post('/customers/chat/service', value);\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const userLogin = (values) => async dispatch => {\n  const reload = () => {\n    window.location.reload()\n  }\n  setTimeout(reload, 5000)\n  const res = await axios.post('/login', values);\n  console.log('Here is the new user being logged in.')\n  dispatch({type: UPDATE_CUSTOMER, payload: res.data})\n}\n\nexport const logoutUser = () => dispatch => {\n  return fetch('/logout')\n  .then(res => res.json())\n    .then(customers => dispatch({type: GET_CUSTOMERS, payload: customers}))\n};\n\nexport const fetchUser = () => async dispatch => {\n   const res = await axios.get('/current_user')\n    dispatch({ type: FETCH_USER, payload: res });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nclass Customers extends Component {\n\n  static propTypes = {\n    getCustomers: PropTypes.func.isRequired,\n    customers: PropTypes.array.isRequired\n  }\n\n  static defaultProps = {\n    customers: []\n  }\n\n  componentWillMount() {\n    this.props.getCustomers();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h2>Customers</h2>\n        <ul>\n        {this.props.customers.map(customer =>\n          <li key={customer.id}>{customer.firstName} {customer.lastName}</li>\n        )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getCustomers: () => dispatch(getCustomers())\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(Customers);\n","//StyledMediaQuery\n\nconst size = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '834px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px'\n}\n\n\nexport const device = {\n    mobileS: `(min-width: ${size.mobileS})`,\n    mobileM: `(min-width: ${size.mobileM})`,\n    mobileL: `(min-width: ${size.mobileL})`,\n    tablet: `(min-width: ${size.tablet})`,\n    laptop: `(min-width: ${size.laptop})`,\n    laptopL: `(min-width: ${size.laptopL})`,\n    desktop: `(min-width: ${size.desktop})`,\n    desktopL: `(min-width: ${size.desktop})`\n};","export default {\n\tfullWhite: '#ffffff',\n\tlightGray: '#A0A0A0',\n    lighterGray: '#DEDEDE',\n    lightBlue: '#008ECC',\n    darkBlue: '#004A6A',\n    black: '#000000',\n    brightRed: '#F20B37'\n};","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\n\nexport const NewDiv = styled.div`\n\twidth: ${({ width }) => (width || 'auto')};\n\theight: ${({ height }) => (height || 'auto')};\n\tmargin: ${({ margin }) => (margin || 'auto')};\n\tpadding: ${({ padding }) => (padding || '0')};\n\tborder: ${({ border }) => (border || 'none')};\n\tborder-radius: ${({ borderRadius }) => (borderRadius || 'none')};\n\ttext-align: ${({ textAlign }) => (textAlign || 'auto')};\n\tz-index: ${({ zIndex }) => (zIndex || 'auto')};\n\tfloat: ${({ float }) => (float || 'none')};\n    display: ${({ display }) => (display || 'block')};\n    background: ${({ background }) => (background || 'none')};\n`\n\nexport const MainBG = styled.div`\n    width: 100%;\n    background: rgb(0,142,204);\n\tbackground: linear-gradient(90deg, rgba(0,142,204,1) 0%, rgba(89,200,248,1) 100%);\n\theight: 1200px;\n\n    @media ${device.tablet} {\n        \n    }\n`\n\nexport const MainHeading = styled(NewDiv)`\n\t@media ${device.tablet} {\n\t\tmax-width: 500px;\n\t\tmargin: 0 auto;\n\t}\n`","import React from 'react'\nimport styled from 'styled-components'\nimport is from 'styled-is';\n\nimport Colors from '../../constants/colors'\n\nimport { device } from './StyledMediaQuery';\n\n\nconst Button = styled.button`\n    border-radius: ${({ borderRadius }) => (borderRadius || '10px')};\n    color: ${({ color }) => (color || Colors.fullWhite)};\n    border: ${({ border }) => (border || 'none')};;\n    width: ${({ width }) => (width || '150px')};\n    height: ${({ height }) => (height || '40px')};\n    margin ${({ margin }) => (margin || '0')}; \n    padding ${({ padding }) => (padding || '0')}; \n    background-color: ${({ backgroundColor }) => (backgroundColor || 'initial')};\n    display: ${({ display }) => (display || 'flex')};\n    -webkit-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    -moz-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    transition: all ease .3s;\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    :hover{\n        box-shadow: 0 6px 12px 0 rgba(0,0,0,0.20), 0 1px 4px 0 rgba(0,0,0,0.30);\n    }\n    :active{\n        box-shadow: 0 2px 4px 0 rgba(0,0,0,0.20), 0 1px 3px 0 rgba(0,0,0,0.30);\n    }\n    :focus{\n        outline: 0;\n    }\n    ${is('primary')`\n\n    `}\n    ${is('secondary')`\n\n    `}\n    ${is('invalid')`\n        background-color: ${Colors.fullWhite};\n    `}\n    \n    ${is('standardBtn')`\n        width: 156px;\n        height: 40px;\n        border-radius: 20px;\n        background-color: ${Colors.darkBlue};\n    `}\n\n    ${is('largeBtn')`\n        width: 328px;\n        height: 40px;\n        border-radius: 50px;\n        background-color: ${Colors.darkBlue};\n    `}\n\n\n`\nexport default Button\n","import React from 'react'\nimport styled from 'styled-components'\nimport is from 'styled-is';\nimport PropTypes from 'prop-types';\n\nimport Colors from '../../constants/colors'\n\nimport { device } from './StyledMediaQuery';\n\nconst Text = styled.p`\n\tfont-size: 16px;\n\tline-height: ${({ lineHeight }) => (lineHeight || '16px')};\n\tcolor: ${({ color }) => (color || Colors.fullWhite)};\n\tmargin: ${props => (props.margin || '0')};\n\tpadding: ${props => (props.padding || '0')};\n    max-width: ${props => (props.maxWidth || 'none')};\n    font-weight: ${({ fontWeight }) => (fontWeight || 'normal')};\n    font-style: ${({ fontStyle }) => (fontStyle || 'normal ')};\n\tfont-family: ${({ fontFamily }) => (fontFamily || 'Helvetica')};\n\tbackground: ${({ background }) => (background || 'none')};\n\tfloat: ${({ float }) => (float || 'none')};\n\n\t${is('mainHeading')`\n\t\tfont-size: 40px;\n\t\tline-height: 44px;\n\t\tfont-weight: bold;\n\n\t\t@media ${device.mobileS} {\n\t\t\tfont-size: 40px;\n\t\t\tline-height: 44px;\n\t\t}\n    `}\n    \n    ${is('buttonText')`\n        font-size: 22px;\n    `}\n\n    ${is('navItem')`\n        line-height: 70px;\n        font-size: 22px;\n\t`}\n\t\n\t${is('inline')`\n        display: inline-block;\n\t`}\n\t\n\t${is('lblue20')`\n\t\tfont-size: 20px;\n\t\tline-height: 20px;\n\t\tcolor: ${Colors.lightBlue};\n\t`}\n\n\t${is('lblue22')`\n\t\tfont-size: 22px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.lightBlue};\n\t`}\n\t\n\t${is('dblue16')`\n\t\tfont-size: 16px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue22')`\n\t\tfont-size: 22px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue20')`\n\t\tfont-size: 20px;\n\t\tline-height: 20px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue30')`\n\t\tfont-size: 30px;\n\t\tline-height: 26px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('white20')`\n\t\tfont-size: 20px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.fullWhite};\n\t`}\n\n\t${is('white35')`\n\t\tfont-size: 35px;\n\t\tline-height: 35px;\n\t\tcolor: ${Colors.fullWhite};\n\t\tfont-style: medium;\n\t`}\n\n\t${is('gray30')`\n\t\tfont-size: 30px;\n\t\tline-height: 30px;\n\t\tcolor: ${Colors.lightGray};\n\t\tfont-style: medium;\n\t`}\n\t\n\t${is('customerIE')`\n\t\tline-height: 40px;\n\t`}\n\n\t${is('borderBottom')`\n\t\tborder-bottom: 1px solid ${Colors.darkBlue};\n\t`}\n\n\t${is('ellipsis')`\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tvertical-align: bottom;\n\t`}\n\n\t${is('acName')`\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tvertical-align: bottom;\n\n\t\t@media ${device.mobileS} {\n\t\t\tmax-width: 100px;\n\t\t\twidth: 100px;\n\t\t}\n\n\t\t@media ${device.laptopL} {\n\t\t\tmax-width: 150px;\n\t\t\twidth: 1500px;\n\t\t}\n\t`}\n\n`\n/**\n\tThis styled case was moved to WelcomeStyledComponents since it's only used in that partifulcar instance and not elsewhere\n\t${is('employeeDetail')`\n\t\tline-height: 30px;\n\t\tfont-size: 16px;\n\t`}\n\n`\n\n**/\n\nText.propTypes = {\n\t/** Color of the text displayed */\n\tcolor: PropTypes.string,\n\t/** Margins that should be added, needs to be in short hand syntax ex margin: top right bottom left; */\n\tmargin: PropTypes.string,\n\t//* Max width that a text can take */\n\tmaxWidth: PropTypes.string,\n\t//* Font weight of the text */\n\tfontWeight: PropTypes.string,\n\t//* Font style of the text; ex: italic, normal & oblique */\n\tfontStyle: PropTypes.string,\n\t//* Font family to be used */\n\tfontFamily: PropTypes.string,\n\t//* if the text should be increased to largeText size */\n\tlargeText: PropTypes.bool,\n\t//* If the text should be reduced to subtext size */\n\tsubtext: PropTypes.bool,\n\t//* If the text should be reudeced to subtitle size */\n\tsubtitle: PropTypes.bool,\n\t//* If the text is supposed to reprsent an error displayed */\n\terror: PropTypes.bool,\n\t//* If the text should be the website defualt gray color */\n\tgray: PropTypes.bool,\n\t//* If the text reprsents a action */\n\tpointer: PropTypes.bool,\n\t//* If the text reprsents a link */\n\tunderline: PropTypes.bool,\n\t//* If the text needs to be placed on same line */\n\tinline: PropTypes.bool,\n}\n\nexport default Text","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from './StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors'\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport closer from '../../../rersources/svg/closer.svg';\nimport { NewDiv } from './StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\nimport { toggleTemplateOverlay } from '../../../store/reducers/environment';\nimport { createNewCustomer } from '../../../store/actions/customer';\n\n\nconst StyledOverlayContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background: black;\n        opacity: .8;\n        position: fixed;\n        z-index: 1000;\n    }\n`\n\nconst StyledOverlayContentBox = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 500px;\n        height: 550px;\n        background: rgb(89,200,248);\n        background: linear-gradient(180deg, rgba(89,200,248,1) 0%, rgba(255,255,255,1) 100%);\n        position: fixed\n        left: 50%;\n        margin-left: -250px;\n        margin-top: 150px;\n        z-index: 2000;\n    }\n`\n\nconst OverlayContentContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding: 50px 50px 0px 50px;\n    }\n`\n\nconst CustomerInputMessage = styled.input`\n    @media ${device.tablet} {\n        width: 200px;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst CustomerInputMessageLarge = styled.textarea`\n    @media ${device.tablet} {\n        width: 300px;\n        height: 100px !important;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst TemplateNavContainer = styled.div`\n    @media ${device.tablet} {\n        bottom: 75px;\n        position: absolute;\n        margin-left: auto;\n        margin-right: auto;\n        left: 0;\n        right: 0;\n        width: 325px;\n        display: flex\n        justify-content: space-between;\n        align-items: center;\n    }\n`\n\nconst CloseTemplateOverlay = styled.div`\n    @media ${device.tablet} {\n        width: 50px;\n        height: 50px;\n        margin-top: 25px;\n        margin-left: 25px;\n\n        svg {\n            height: 100%;\n            width: 100%;\n        }\n    }\n`\n\nclass StyledOverlayTemplate extends Component  {\n    constructor() {\n        super()\n        this.state = { \n            customText: '',\n            templateNumber: 0\n        }\n\n            this.forwardTemplate = this.forwardTemplate.bind(this);\n            this.backTemplate = this.backTemplate.bind(this);\n  //      this.handleChange = this.handleChange.bind(this)\n  //      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentDidMount() {\n    }\n\n    handleChange(event) {\n        const input = event.target.value\n        this.setState({ customText: input})\n        console.log(this.state)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n    }\n\n    handleNew = (e, value) => {\n        e.preventDefault()\n        console.log(value)\n    }\n\n    template1 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName}, thank you for bringing in your vehicle.`;\n        const text2 = 'We have now started on your vehicle. You will receive a real time update for each service.';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n    \n    template2 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName},`;\n        const text2 = 'we have completed your';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n    \n    template3 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName}, your vehicle is now ready for pickup.`;\n        const text2 = 'We are looking forward to seeing you soon, thank you.';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n\n\n    template4 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName},`;\n        const newText = `${text1} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessageLarge \n                            type=\"textarea\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n\n    closeTemplateOverlayFunc = () => {\n        const { toggleTemplateOverlay } = this.props\n        toggleTemplateOverlay(false);\n    }\n\n\n    forwardTemplate = () => {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n\n        if (this.state.templateNumber < messageTemplates.length - 1) {\n            this.setState({\n                templateNumber: this.state.templateNumber + 1\n            })\n        } else {\n            this.setState({\n                templateNumber: 0\n            })\n        }\n    }\n\n    backTemplate = () => {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n\n        if (this.state.templateNumber > 0) {\n            this.setState({\n                templateNumber: this.state.templateNumber - 1\n            })\n        } else {\n            this.setState({\n                templateNumber: messageTemplates.length - 1\n            })\n        }\n    }\n\n\n    render() {\n        const messageTemplates = [this.template1, this.template2, this.template3, this.template4]\n        var currentTemplate = messageTemplates[this.state.templateNumber]\n\n        const { getSelectedMessageText } = this.props\n\n        return (\n            <div>\n                <StyledOverlayContainer>\n                </StyledOverlayContainer>\n                <StyledOverlayContentBox>\n                    <CloseTemplateOverlay\n                        onClick={this.closeTemplateOverlayFunc}\n                    >\n                        <SVG src={closer} />\n                    </CloseTemplateOverlay>\n                    {currentTemplate()}\n                    <TemplateNavContainer\n                        \n                    >\n                        <Button\n                            onClick={this.backTemplate}\n                            backgroundColor={Colors.fullWhite}\n                            borderRadius='25px'\n                        >\n                            <Text\n                                dblue16\n                            >\n                                Go Back\n                            </Text>\n                        </Button>\n                        <Button\n                            standardBtn\n                            onClick={this.forwardTemplate}\n                        >\n                            <Text\n                                white16\n                            >\n                                Go Forward\n                            </Text>\n                        </Button>\n                    </TemplateNavContainer>\n                </StyledOverlayContentBox>\n           </div>\n          )\n    }\n   \n  }\n\n  export default StyledOverlayTemplate;","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from './StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors'\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport closer from '../../../rersources/svg/closer.svg';\nimport { NewDiv } from './StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\nimport { toggleTemplateOverlay } from '../../../store/reducers/environment';\nimport { createNewCustomer } from '../../../store/actions/customer';\n\n\nconst StyledOverlayContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background: black;\n        opacity: .8;\n        position: fixed;\n        z-index: 1000;\n    }\n`\n\nconst StyledOverlayContentBox = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 500px;\n        height: 550px;\n        background: rgb(89,200,248);\n        background: linear-gradient(180deg, rgba(89,200,248,1) 0%, rgba(255,255,255,1) 100%);\n        position: fixed\n        left: 50%;\n        margin-left: -250px;\n        margin-top: 150px;\n        z-index: 2000;\n    }\n`\n\nconst OverlayContentContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding: 50px 50px 0px 50px;\n    }\n`\n\nconst CustomerInputMessage = styled.input`\n    @media ${device.tablet} {\n        width: 200px;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst CustomerInputMessageLarge = styled.textarea`\n    @media ${device.tablet} {\n        width: 300px;\n        height: 100px !important;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst TemplateNavContainer = styled.div`\n    @media ${device.tablet} {\n        bottom: 225px;\n        position: absolute;\n        margin-left: auto;\n        margin-right: auto;\n        left: 0;\n        right: 0;\n        width: 325px;\n        display: flex\n        justify-content: space-between;\n        align-items: center;\n    }\n`\n\nconst CloseTemplateOverlay = styled.div`\n    @media ${device.tablet} {\n        width: 50px;\n        height: 50px;\n        margin-top: 25px;\n        margin-left: 25px;\n\n        svg {\n            height: 100%;\n            width: 100%;\n        }\n    }\n`\n\nclass StyledOverlayEndService extends Component  {\n\n    componentDidMount() {\n    }\n\n    handleChange(event) {\n        const input = event.target.value\n        this.setState({ customText: input})\n        console.log(this.state)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n    }\n\n    handleEnd = (e, value) => {\n        e.preventDefault()\n        const { history, toggleEndServiceOverlay } = this.props\n        toggleEndServiceOverlay(false);\n        history.push('/end-service');\n    }\n\n    closeEndServiceOverlayFunc = () => {\n        const { toggleEndServiceOverlay } = this.props\n        toggleEndServiceOverlay(false);\n    }\n\n    render() {\n        const { getSelectedMessageText } = this.props\n        return (\n            <div>\n                <StyledOverlayContainer>\n                </StyledOverlayContainer>\n                <StyledOverlayContentBox>\n                    <CloseTemplateOverlay\n                        onClick={this.closeEndServiceOverlayFunc}\n                    >\n                        <SVG src={closer} />\n                    </CloseTemplateOverlay>\n                    <NewDiv\n                        width='350px'\n                        margin='0 auto'\n                    >\n                        <Text\n                            margin='125px 0 0 0'\n                            dblue22\n                        >\n                            Are you sure you would like to end this conversation?\n                        </Text>\n                    </NewDiv>\n                    <TemplateNavContainer \n                    >\n                        <Button\n                            onClick={this.closeEndServiceOverlayFunc}\n                            backgroundColor={Colors.fullWhite}\n                            borderRadius='25px'\n                        >\n                            <Text\n                                dblue16\n                            >\n                                Cancel\n                            </Text>\n                        </Button>\n                        <Button\n                            standardBtn\n                            onClick={this.handleEnd}\n                        >\n                            <Text\n                                white16\n                            >\n                                Yes\n                            </Text>\n                        </Button>\n                    </TemplateNavContainer>\n                </StyledOverlayContentBox>\n           </div>\n          )\n    }\n   \n  }\n\n  export default StyledOverlayEndService;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\n\nconst CustomerCellDiv = styled(NewDiv)`\n    width: 100%\n    height: 80px;\n    background: ${Colors.lighterGray};\n    border-bottom: 1px solid black;\n`\n\nconst CellID = styled(NewDiv)`\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    background: ${Colors.lightBlue};\n    display: inline-block;\n    float: left;\n    margin-left: 3%;\n    margin-top: 15px;\n`\n\nconst CellInfoLeft = styled(NewDiv)`\n    float: left;\n    display: inline-block;\n    margin-left: 12%;\n    margin-top: 10px;\n    height: 60px;\n    width: 33%;\n    text-align: left;\n`\n\nconst CellInfoRight = styled(CellInfoLeft)`\n    margin-left: 6%;\n`\n\nclass CustomerCellRow extends Component {\n\n  componentDidMount() {\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n  openCustomerProfile = () => {\n      const { realCustomers, customerid, selectedCustomer, getSelectedCustomer, history } = this.props\n      history.push(`/customers/${customerid}`);\n    const sc = this.search(customerid, realCustomers);\n    getSelectedCustomer(sc);\n    console.log(selectedCustomer);\n  }\n\n  render() {\n      const { customerid, name, phoneNumber1, email } = this.props\n      console.log(this.props)\n    return (\n      <CustomerCellDiv\n        onClick={() => {this.openCustomerProfile() }}\n      >\n          <CellID>\n          </CellID>\n          <CellInfoLeft>\n              <NewDiv\n              >\n                <Text\n                    inline\n                    lblue20\n                >\n                    Customer Name:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                    acName\n                >\n                    {name}\n                </Text>\n              </NewDiv>\n\n              <NewDiv\n                padding=\"15px 0 0 0\"\n              >\n                <Text\n                    inline\n                    lblue20\n                >\n                    Phone #:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                >\n                    {phoneNumber1}\n                </Text>\n              </NewDiv>\n\n          </CellInfoLeft>\n          <CellInfoRight>\n          <NewDiv>\n                <Text\n                    inline\n                    lblue20\n                >\n                    Email:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                >\n                    {email}\n                </Text>\n              </NewDiv>\n\n              <NewDiv\n                padding=\"15px 0 0 0\"\n              >\n                <Text\n                    inline\n                    dblue16\n                    borderBottom\n                >\n                    View More\n                </Text>\n              </NewDiv>\n          </CellInfoRight>\n      </CustomerCellDiv>\n    );\n  }\n}\n\nexport default withRouter(CustomerCellRow);","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\nimport Colors from '../../constants/colors';\nimport { NewDiv } from '../Styled/StyledComponents';\n\nconst StyledBackIcon = styled(NewDiv)`\n@media ${device.tablet} {\n    position: absolute;\n    height: 35px;\n    width: 20px;\n    margin-left: 25px;\n    margin-top: 35px;\n    \n    svg {\n        width: 20px;\n        height: 35px;\n    }\n}\n`\nexport default StyledBackIcon;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {getActiveCustomerServices, getCustomerActiveToMessages} from '../../store/actions/customer'\nimport { createNewToMessage } from '../../store/actions/customer'\nimport './customers.css';\nimport StyledOverlayTemplate from '../Customer/Styled/StyledOverlayTemplate';\nimport StyledOverlayEndService from '../Customer/Styled/StyledOverlayEndService';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport { getSelectedCustomer, getSelectedServiceMessage, getSelectedMessageText, toggleTemplateOverlay, toggleEndServiceOverlay, getCurrentFilter, updateCustomerSearch } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport templatey from '../../rersources/svg/templatey.svg';\nimport senddb from '../../rersources/svg/senddb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { isContext } from 'vm';\n\nconst MessengerContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        height: 100vh;\n        position: fixed;\n        left: 0;\n        top: 0;\n        overflow-y: scroll;\n        background: ${Colors.lightBlue};\n        float: left;\n    }\n`\n\nconst MessengerContainerTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        height: 190px;\n        background: ${Colors.lightBlue};\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst MessengerTopText = styled(NewDiv)`\n    @media ${device.tablet} {\n        max-width: 175px;\n        text-align: center;\n        height: auto;\n    }\n`\n\nconst MessageCell = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 90px;\n        background: ${Colors.lightBlue};\n        float: left;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst MessageCellContentTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 90%;\n        height: 25px;\n        padding: 15px 0px 10px 0px\n    }\n`\n\nconst MessageCellContentBottom = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 90%;\n        height: 40px;\n        padding: 10px 0px\n        text-align: left;\n    }\n`\n\nconst MessengerSearchBar = styled.input`\n    @media ${device.tablet} {\n        width: ${({ width }) => (width|| '100%')};\n        height: ${props => (props.height || '40px')};\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n        margin-right: 10px;\n\n        :focus {\n            outline: none;\n          }\n    } \n`\n\nconst MessengerTextBox = styled.textarea`\n    @media ${device.tablet} {\n        width: ${({ width }) => (width|| '100%')};\n        height: 90px;\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        padding-top: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n        :focus {\n            outline: none;\n          }\n    } \n`\n\nconst MessengerChatContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 511px;\n        height: 100vh;\n        background-color: ${Colors.lighterGray};\n        float: right\n    } \n`\n\nconst MessengerChatTopSec = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 511px;\n        height: 90px;\n        background-color: ${Colors.lighterGray};\n        border-bottom: 1px solid ${Colors.lightBlue};\n        position: fixed;\n        top: 0;\n        text-align: left;\n    } \n`\n\nconst MessengerFixedBottom = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 511px;\n        height: 115px;\n        position: fixed;\n        bottom: 0;\n    } \n`\n\nconst ChatMessagesContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin-top: 100px;\n        background-color: ${Colors.lighterGray};\n    } \n`\n\nconst BottomLeftButton = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        padding: 5px;\n        display: inline-block;\n        padding-top: 60px;\n        float: left;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst BottomRightButton = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        padding: 5px;\n        display: inline-block;\n        padding-top: 60px;\n        float: right;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst BottomMiddleText = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 400px;\n        height: 100px;\n        padding: 5px 0;\n        display: inline-block;\n    } \n`\n\nconst ChatToRow = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: auto;\n        clear: both;\n    } \n`\n\nconst ChatMessageToBubble = styled(NewDiv)`\n    @media ${device.tablet} {\n        max-width: 250px;\n        height: auto;\n        padding: 15px 15px;\n        float: right\n        margin-right: 10px;\n        background: ${Colors.lightBlue};\n        border-radius: 30px;\n        margin-bottom: 5px;\n        text-align: left;\n        color: ${Colors.fullWhite};\n    } \n`\n\nclass ChatMessenger extends Component {\n    constructor() {\n        super()\n        this.state = {\n            correctChats: [],\n            correctDisplayedMessages: []\n\n        }\n    }\n  componentDidMount() {\n    const {showNavBar, toggleNavBar, toggleNavToggle, getCustomerActiveToMessages, activeToMessages, selectedServiceMessage, getCurrentFilter, updateCustomerSearch } = this.props\n\n    if (showNavBar === 'block') {\n        toggleNavBar('none')\n        toggleNavToggle(barsw);\n        updateCustomerSearch('')\n    } else {\n        console.log('Not showing....');\n        updateCustomerSearch('')\n    }\n\n    console.log(this.props)\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].serviceid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n  openThisChat = (v) => {\n    const { customerServices, getSelectedServiceMessage, selectedServiceMessage } = this.props\n    const serviceid = v.serviceid\n    const sc = this.search(serviceid, customerServices);\n    getSelectedServiceMessage(sc);\n    console.log(selectedServiceMessage);\n}\n\n    displayOverlay = () => {\n        const { showTemplateOverlay, getSelectedMessageText, selectedMesageText, toggleTemplateOverlay, selectedServiceMessage } = this.props\n        if (showTemplateOverlay === true) {\n            return (\n                <StyledOverlayTemplate\n                    getSelectedMessageText={getSelectedMessageText} \n                    selectedMesageText={selectedMesageText}\n                    toggleTemplateOverlay={toggleTemplateOverlay}\n                    selectedServiceMessage={selectedServiceMessage}\n              />\n            )\n        } else {\n            return (\n                <div></div>\n            )\n        }\n    }\n\n    displayOverlayEnd = () => {\n        const { showEndServiceOverlay, getSelectedMessageText, selectedMesageText, toggleEndServiceOverlay, selectedServiceMessage, history } = this.props\n        if (showEndServiceOverlay === true) {\n            return (\n                <StyledOverlayEndService\n                    getSelectedMessageText={getSelectedMessageText} \n                    selectedMesageText={selectedMesageText}\n                    toggleEndServiceOverlay={toggleEndServiceOverlay}\n                    selectedServiceMessage={selectedServiceMessage}\n                    history={history}\n              />\n            )\n        } else {\n            return (\n                <div></div>\n            )\n        }\n    }\n\n    endService = () => {\n        const { toggleEndServiceOverlay } = this.props\n        toggleEndServiceOverlay(true)\n        console.log('Ending the service....')\n    }\n\n  renderChatCells = () => {\n    var activeServiceArray = []\n    const { customerServices, activeToMessages, getCurrentFilter, search } = this.props\n    console.log(customerServices);\n\n    for (var i=0; i < customerServices.length; i++) {\n        if (customerServices[i].status == true) {\n            activeServiceArray.push(customerServices[i])\n        } else {\n            console.log('Not active');\n        }\n    }\n    var reversedActiveServiceArray = activeServiceArray.reverse()\n\n    var searchedActiveServices;\n\n    if (search === null || search === '') {\n        searchedActiveServices = reversedActiveServiceArray\n      } else {\n        searchedActiveServices = reversedActiveServiceArray.filter((item) => {\n          var name = item.customerName.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = name.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n\n        return searchedActiveServices.map((v) => {\n            var vMessages = []\n            var lastMessage;\n            var formattedTime;\n            var displayedMessage;\n\n            for (var i=0; i < activeToMessages.length; i++) {\n                if (v.serviceid == activeToMessages[i].serviceid) {\n                    vMessages.push(activeToMessages[i])\n                } else {\n                    console.log('Did not match')\n                }\n            }\n\n            if (vMessages.length > 0) {\n                lastMessage = vMessages.slice(-1)[0];\n                displayedMessage = lastMessage.textMessage\n                var jsTime = lastMessage.date\n                var timestamp = jsTime.substring(0, jsTime.length - 3)\n                var newDate = new Date(timestamp*1000);\n                var fHours = newDate.getHours();\n                var fMinutes = '0' + newDate.getMinutes();\n                \n                var ampm = fHours >= 12 ? 'pm' : 'am';\n                fHours = fHours % 12;\n                fHours = fHours ? fHours : 12;\n                formattedTime = fHours + ':' + fMinutes.substr(-2) + ampm;\n\n            } else {\n                formattedTime = '';\n                displayedMessage = 'No Messages sent';\n            }\n\n            return (\n                <MessageCell\n                    onClick={() => this.openThisChat(v)}\n                >\n                    <MessageCellContentTop\n                    >\n                        <Text\n                            dblue22\n                            inline\n                            float='left'\n                            maxWidth='210px'\n                        >\n                            {v.customerName}\n                        </Text>\n                        <Text\n                            dblue16\n                            inline\n                            float='right'\n                            maxWidth='80px'\n                        >\n                            {formattedTime}\n                        </Text>\n                    </MessageCellContentTop>\n                    <MessageCellContentBottom>\n                        <Text\n                            dblue16\n                            ellipsis\n                            maxWidth=\"100%\"\n                        >\n                            {displayedMessage}\n                        </Text>\n                    </MessageCellContentBottom>\n                </MessageCell>\n            )\n        })\n  }\n\n  renderServiceId = () => {\n      const {selectedServiceMessage } = this.props\n      if (selectedServiceMessage) {\n            return (\n                <NewDiv>\n                    <Text\n                        dblue30\n                        padding=\"10px 0 0 10px\"\n                        inline\n                    >\n                        {selectedServiceMessage.customerName}\n                    </Text>\n                    <NewDiv\n                        display='inline-block'\n                        float='right'\n                        margin='15px 15px 0 0'\n                    >\n                        <Button\n                            width='156px'\n                            height='40px'\n                            borderRadius='20px'\n                            backgroundColor={Colors.brightRed}\n                            display='inline-block'\n                            onClick={this.endService}\n                        >\n                            <Text\n                                white20\n                            >\n                                End\n                            </Text>\n                        </Button>\n                        \n                    </NewDiv>\n                </NewDiv>\n            )\n      } else {\n          return (\n              <Text\n                dblue30\n                padding=\"10px 0 0 10px\"\n              >\n                  No Service Selected\n              </Text>\n          )\n      }\n  }\n\n  checkMessageFunc = () => {\n    const { activeToMessages, selectedServiceMessage } = this.props\n\n    if (selectedServiceMessage) {\n        for (var i=0; i < activeToMessages.length; i++) {\n            if (activeToMessages[i].serviceid === selectedServiceMessage.serviceid) {\n\n   //     this.setState({ correctChats: [...this.state.correctChats, activeToMessages[i]] })\n   // this.setState(prevState => ({ correctChats: [ activeToMessages[i], ...prevState.correctChats]}))\n\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n    }\n\n  }\n\n  renderChatMessages = () => {\n    const { activeToMessages, selectedServiceMessage, getCustomerActiveToMessages } = this.props\n    const displayedToMessages = []\n\n    this.checkMessageFunc()\n\n      if (selectedServiceMessage) {\n        for (var i=0; i < activeToMessages.length; i++) {\n            if (activeToMessages[i].serviceid === selectedServiceMessage.serviceid) {\n                displayedToMessages.push(activeToMessages[i]);\n\n\n                console.log(`pushed ${activeToMessages[i]}`);\n            }  else {\n                console.log('did not match');\n            }  \n        }\n        console.log(this.state);\n        console.log(displayedToMessages)\n        console.log(activeToMessages)\n        return displayedToMessages.map((v) => {\n            return (\n                <ChatToRow>\n                        <ChatMessageToBubble>\n                            {v.textMessage}\n                        </ChatMessageToBubble>\n                </ChatToRow>\n            )\n        })\n      } else {\n          return (\n              <div>There are no messages to display</div>\n          )\n      }\n  }\n\n  toggleTemplateTrue = () => {\n      const { toggleTemplateOverlay, selectedServiceMessage } = this.props\n      if (selectedServiceMessage) {\n        toggleTemplateOverlay(true);\n      } else {\n          console.log('There is no selected message');\n      }\n      \n  }\n\n  sendNewMessage = (e, value) => {\n      const { selectedMessageText, createNewToMessage, selectedServiceMessage, getCustomerActiveToMessages, getSelectedMessageText } = this.props\n        e.preventDefault();\n        console.log(value)\n        console.log(selectedMessageText)\n\n        if (selectedServiceMessage) {\n            const info =\n            {\n                textMessage: selectedMessageText,\n                phoneNumber: selectedServiceMessage.phoneNumber,\n                serviceid: selectedServiceMessage.serviceid,\n                vehicleid: selectedServiceMessage.vehicleid,\n                customerid: selectedServiceMessage.customerid,\n                user: selectedServiceMessage.user\n            }\n            createNewToMessage(info);\n        } else {\n            console.log('It cannot be done.')\n        }\n\n        setTimeout(getCustomerActiveToMessages, 1000)\n        setTimeout(this.renderChatMessages, 2000)\n        //window.location.reload()\n        getSelectedMessageText('')\n  }\n\n  handleChange = (e) => {\n      const { getSelectedMessageText } = this.props\n      const messageT = e.target.value\n      getSelectedMessageText(messageT);\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n\n  searchMessageCells = (event) => {\n    const { search, updateCustomerSearch } = this.props\n    var searchText = event.target.value\n    updateCustomerSearch(searchText)\n  }\n  \n\n  render() {\n    const { getSelectedMessageText, selectedMessageText, createNewToMessage, selectedServiceMessage, search } = this.props\n    console.log(createNewToMessage);\n    const newText = \"akjshdkjashdkjahsdkhasdkj\"\n    console.log(this.props)\n\n    return (\n      <div>\n          {this.displayOverlay()}\n          {this.displayOverlayEnd()}\n        <MessengerContainer>\n            <MessengerContainerTop>\n                <MessengerTopText>\n                    <Text\n                        white35\n                        padding=\"25px 0\"\n                    >\n                        Current Vehicles\n                    </Text>\n                </MessengerTopText>\n                <MessengerSearchBar \n                    width=\"85%\"\n                    placeholder=\"Search...\"\n                    onChange={this.searchMessageCells}\n                    value={search}\n                />\n            </MessengerContainerTop>\n            {this.renderChatCells()}\n        </MessengerContainer>\n        <MessengerChatContainer>\n            <MessengerChatTopSec>\n                {this.renderServiceId()}\n            </MessengerChatTopSec>\n            <ChatMessagesContainer>\n                {this.renderChatMessages()}\n            </ChatMessagesContainer>\n            <MessengerFixedBottom>\n                <BottomLeftButton\n                    onClick={() => this.toggleTemplateTrue()}\n                >\n                    <SVG src={templatey} />\n                </BottomLeftButton>\n                <BottomMiddleText>\n                    <form method=\"POST\" onChange={this.handleChange} onSubmit={(e) => this.sendNewMessage(e, this)}>\n                        <MessengerTextBox\n                            width=\"97%\"\n                            placeholder=\"Enter Messege...\"\n                            value={selectedMessageText}\n                            name=\"toMessage\"\n                        />\n                    </form>\n                </BottomMiddleText>\n                <BottomRightButton \n                onClick={(e) => this.sendNewMessage(e, this)}>\n                    <SVG src={senddb} />\n                </BottomRightButton>\n            </MessengerFixedBottom>\n        </MessengerChatContainer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  realCustomers: state.realCustomers,\n  selectedCustomer: state.environment.selectedCustomer,\n  activeServices: state.activeServices,\n  search: state.environment.search,\n  selectedServiceMessage: state.environment.selectedServiceMessage,\n  selectedMessageText: state.environment.selectedMessageText,\n  showTemplateOverlay: state.environment.showTemplateOverlay,\n  showEndServiceOverlay: state.environment.showEndServiceOverlay,\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getActiveCustomerServices: () => dispatch(getActiveCustomerServices()),\n   getSelectedServiceMessage: (sm) => dispatch(getSelectedServiceMessage(sm)),\n   getSelectedMessageText: (text) => dispatch(getSelectedMessageText(text)),\n   toggleTemplateOverlay: (status) => dispatch(toggleTemplateOverlay(status)),\n   toggleEndServiceOverlay: (status) => dispatch(toggleEndServiceOverlay(status)),\n   getCustomerActiveToMessages: () => dispatch(getCustomerActiveToMessages()),\n   getCurrentFilter: (filter) => dispatch (getCurrentFilter(filter)),\n   updateCustomerSearch: (search) => dispatch (updateCustomerSearch(search))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(ChatMessenger));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport { getSelectedCustomer, updateCustomerSearch, getCurrentFilter } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerSearchBar = styled.input`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n\n        :focus {\n          outline: none;\n        }\n    } \n`\n\nconst CustomerSearchSelectSec = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 672px;\n      margin: 0 auto;\n      margin-top: 30px;\n    } \n`\n\nconst SearchNameBox = styled(NewDiv)`\n    @media ${device.tablet} {\n      text-align: left;\n      width: 242px;\n      display: inline-block;\n    }\n`\n\nconst NameSelectDiv = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 242px;\n      height: 40px;\n      border-radius: 20px;\n      overflow: hidden;\n\n      select {\n        outline: none;\n        border: 0px;\n      }\n    } \n`\n\nconst StyledSelect = styled.select`\n    @media ${device.tablet} {\n      width: 100%;\n      height: 100%\n      font-size: 16px;\n      color: ${Colors.lightGray};\n      -webkit-border-top-right-radius: 15px;\n      -webkit-border-bottom-right-radius: 15px;\n      -moz-border-radius-topright: 15px;\n      -moz-border-radius-bottomright: 15px;\n      border-top-right-radius: 15px;\n      border-bottom-right-radius: 15px;\n    }\n`\n\nconst SearchButton = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 156px;\n      height: 40px;\n      display: inline-block;\n      float: right;\n      margin-top: 30.5px;\n    }\n`\n\nconst AllCsBG = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 100%;\n      background: rgb(0,142,204);\n      background: linear-gradient(90deg, rgba(0,142,204,1) 0%, rgba(89,200,248,1) 100%);\n      height: 300px;\n    }\n`\n\nclass AllCustomers extends Component {\n\n  static propTypes = {\n    getRealCustomers: PropTypes.func.isRequired,\n    realCustomers: PropTypes.array.isRequired\n  }\n\n  static defaultProps = {\n    realCustomers: []\n  }\n\n  componentDidMount() {\n    this.props.getRealCustomers();\n    const {showNavBar, toggleNavBar, toggleNavToggle, updateCustomerSearch } = this.props\n    if (showNavBar === 'block') {\n      toggleNavBar('none')\n      toggleNavToggle(barsw);\n      updateCustomerSearch('');\n    } else {\n      console.log('Not showing....');\n      updateCustomerSearch('');\n    }\n  }\n\n  searchCustomers = (event) => {\n    const { search, updateCustomerSearch } = this.props\n    var searchText = event.target.value\n    updateCustomerSearch(searchText)\n\n    var s = document.getElementById('search-select');\n    var strSelect = s.options[s.selectedIndex].value\n\n    console.log(strSelect)\n  }\n\n  updateFilter = (event) => {\n    const { getCurrentFilter } = this.props\n    var cFilter = event.target.value\n    getCurrentFilter(cFilter)\n    console.log(cFilter)\n  }\n\n  renderRows = () => {\n    const { realCustomers, selectedCustomer, getSelectedCustomer, history, search, currentFilter } = this.props\n    console.log(selectedCustomer);\n\n    const realCustomersReversed = realCustomers.reverse()\n\n    var filteredCustomers;\n\n    if (currentFilter === 'Name') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var name = item.name.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = name.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n      \n    } else if (currentFilter === 'Phone Number') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var number = item.phoneNumber1.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = number.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n    } else if (currentFilter === 'Email') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomersReversed\n      } else {\n        filteredCustomers = realCustomersReversed.filter((item) => {\n          var email = item.email.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = email.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n    } else {\n      filteredCustomers = realCustomersReversed\n    }\n\n    return filteredCustomers.map((d) => {\n      console.log(filteredCustomers);\n      console.log(currentFilter)\n      return (\n        <CustomerCellRow\n          key={d.customerid}\n          realCustomers={realCustomers}\n          selectedCustomer={selectedCustomer}\n          getSelectedCustomer={getSelectedCustomer}\n          history={history}\n          {...d}\n        />\n      )\n    })\n  }\n\n  render() {\n    const { realCustomers, updateCustomerSearch, search } = this.props\n\n    return (\n      <div>\n        <AllCsBG>\n          <MainHeading>\n              <Text\n                mainHeading\n                padding=\"30px 0 50px 0\"\n              >\n                All Customers\n              </Text>\n            </MainHeading>\n        <NewDiv\n          width=\"662px\"\n          height=\"40px\"\n        >\n          <CustomerSearchBar \n            placeholder=\"Search\"\n            onChange={this.searchCustomers}\n            value={search}\n          />\n        </NewDiv>\n        <CustomerSearchSelectSec>\n          <SearchNameBox\n            float=\"left\"\n          >\n            <Text\n              padding=\"0 0 15px 0\"\n            >\n              Search By:\n            </Text>\n            <NameSelectDiv>\n              <StyledSelect \n              id=\"search-select\"\n              onChange={this.updateFilter}\n              >\n                <option>Name</option>\n                <option>Phone Number</option>\n                <option>Email</option>\n                <option>Vin Number</option>\n              </StyledSelect>\n            </NameSelectDiv>\n          </SearchNameBox>\n          <SearchNameBox>\n            <Text\n              padding=\"0 0 15px 0\"\n            >\n              Sort By:\n            </Text>\n            <NameSelectDiv>\n              <StyledSelect>\n                <option>Default</option>\n              </StyledSelect>\n            </NameSelectDiv>\n          </SearchNameBox>\n          <SearchButton>\n            <Button\n              width=\"100%\"\n              height=\"100%\"\n              borderRadius=\"40px\"\n              standardBtn\n            >\n              <Text\n              >\n                Search\n                </Text>\n            </Button>\n          </SearchButton>\n        </CustomerSearchSelectSec>\n      </AllCsBG>\n        <NewDiv\n          width=\"100vw\"\n        >\n            {this.renderRows()}\n        </NewDiv>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  realCustomers: state.realCustomers,\n  selectedCustomer: state.environment.selectedCustomer,\n  search: state.environment.search,\n  currentFilter: state.environment.currentFilter,\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getRealCustomers: () => dispatch(getRealCustomers()),\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   updateCustomerSearch: (search) => dispatch (updateCustomerSearch(search)),\n   getCurrentFilter: (filter) => dispatch (getCurrentFilter(filter))\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(AllCustomers);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport mailw from '../../rersources/svg/mailw.svg';\nimport carw from '../../rersources/svg/carw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n    \n    @media ${device.laptop} {\n        margin-left: 10%;\n    }\n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n    }\n`\n\nclass CustomerInfo extends Component {\n  componentDidMount() {\n    const { selectedCustomer, getSelectedCustomer, realCustomers, customerVehicles, getRealCustomers } = this.props\n\n    getRealCustomers()\n\n    const {\n        match: { params: { customerid } }\n    } = this.props\n\n    const sc = this.search(customerid, realCustomers);\n    if (realCustomers.length > 1) {\n        console.log(getSelectedCustomer);\n        getSelectedCustomer(sc);\n        console.log(sc);\n    } else {\n        console.log('error');\n    }\n}\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n    openNewVehicle = () => {\n        const customerid = this.props.selectedCustomer.customerid\n        const history = this.props.history;\n        history.push(`/new-vehicle`);\n    }\n\n    openVehicleDetails = (v) => {\n        const { getSelectedVehicle, selectedVehicle, history } = this.props\n        const vehicleid = v.vehicleid\n        getSelectedVehicle(v)\n        console.log(selectedVehicle)\n        history.push(`/customers/vehicles/${vehicleid}`);\n   //   const sc = this.search(customerid, realCustomers);\n   //   getSelectedCustomer(sc);\n      console.log(v);\n    }\n\n    renderVehicles = () => {\n        const { customerVehicles, selectedCustomer } = this.props\n        const customerid = this.props.selectedCustomer.customerid\n        const newVehicleArray =[]\n         for (var i=0; i < customerVehicles.length; i++) {\n            if (customerVehicles[i].ownerid === customerid) {\n                newVehicleArray.push(customerVehicles[i])\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n        console.log(customerVehicles);\n        console.log(newVehicleArray);\n        const vehicles = newVehicleArray\n        console.log(vehicles);\n        return vehicles.map((v) => {\n            console.log(v);\n            return (\n                <NewDiv>\n                    <Text\n                        dblue22\n                        borderBottom\n                        padding=\"20px 0 5px 0\"\n                        color={Colors.lightBlue}\n                        onClick={() => this.openVehicleDetails(v)}\n                    >\n                        {v.vehicleMake} {v.vehicleModel}\n                    </Text>\n                </NewDiv>\n            )\n        })\n    }\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n    }\n\n  render() {\n    const { realCustomers, selectedCustomer, customerVehicles } = this.props\n    if (realCustomers.length >= 1) {\n\n        return (\n            <MainBG>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Customer Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                         CUSTOMER NAME:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.name}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.phoneNumber1}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={mailw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          EMAIL:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.email}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n              <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    height=\"auto\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                            VEHICLES:\n                      </Text>\n                      {this.renderVehicles()}\n                  </InfoEText>\n              </InfoElement>\n              <NewDiv\n                margin=\"0 auto\"\n                width=\"100%\"\n              >\n                  <Button\n                    largeBtn\n                    margin=\"0 auto\"\n                    backgroundColor={Colors.darkBlue}\n                    onClick={() => this.openNewVehicle()}\n                  >\n                    <Text\n                      white20\n                    >\n                      Add New Vehicle\n                    </Text>\n                  </Button>\n              </NewDiv>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   getRealCustomers: () => dispatch(getRealCustomers())\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer, getSelectedService } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport mailw from '../../rersources/svg/mailw.svg';\nimport carw from '../../rersources/svg/carw.svg';\nimport vinw from '../../rersources/svg/vinw.svg';\nimport licensew from '../../rersources/svg/licensew.svg';\nimport calendarw from '../../rersources/svg/calendarw.svg';\nimport historyw from '../../rersources/svg/historyw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    }\n     \n    @media ${device.laptop} {\n        margin-left: 10%;\n    }\n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n    }\n`\n\nclass VehicleInfo extends Component {\n  componentDidMount() {\n    const { getSelectedVehicle, customerVehicles, customerServices, selectedVehicle } = this.props\n    const {\n        match: { params: { vehicleid } }\n    } = this.props\n\n    const sc = this.search(vehicleid, customerServices);\n\n    if (customerServices.length > 1) {\n   //     getSelectedVehicle(sc);\n        console.log('selecteing customer')\n    } else {\n        console.log('error');\n    }\n}\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    openServiceScreen = () => {\n        const { getSelectedVehicle, selectedVehicle, history } = this.props\n        const customerid = selectedVehicle.ownerid\n        history.push(`/customers/service/${customerid}`);\n    }\n\n    openServiceDetails = (v) => {\n        const { history, getSelectedService } = this.props\n        const vehicleid = v.vehicleid\n        const serviceid = v.serviceid\n        history.push(`/customers/vehicles/${vehicleid}/${serviceid}`);\n        getSelectedService(v);\n      console.log(v);\n      console.log(getSelectedService);\n    }\n\n    renderServices = () => {\n        const { getSelectedVehicle, customerVehicles, customerServices, selectedVehicle } = this.props\n        const newServiceArray = []\n\n        for (var i=0; i < customerServices.length; i++) {\n            if (customerServices[i].vehicleid === selectedVehicle.vehicleid) {\n                newServiceArray.push(customerServices[i]);\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n       const services = newServiceArray\n         console.log(services.length);\n        return services.map((v) => {\n            return (\n                <NewDiv>\n                    <Text\n                        white20\n                        padding=\"20px 0 5px 0\"\n                        onClick={() => this.openServiceDetails(v)}\n                    >\n                        Service - {v.vehicleid}\n                    </Text>\n                </NewDiv>\n            )\n        })\n    }\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n      }\n\n  render() {\n    const { selectedVehicle, selectedCustomer } = this.props\n\n    if (selectedVehicle) {\n        return (\n            <MainBG>\n                <StyledBackIcon\n                onClick={() => this.goBack()}\n                >\n                <SVG src={arrowleftw} />\n            </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Vehicle Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          OWNER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.ownerid}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.phoneNumber1}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER 2:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.phoneNumber2}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={calendarw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          YEAR:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleYear}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MAKE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleMake}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MODEL:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleModel}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={licensew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          LICENSE #:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleLicenseNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={vinw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          VIN #:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleVinNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n              <InfoEIcon>\n                      <SVG src={vinw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    height=\"auto\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                            Service History\n                      </Text>\n                      {this.renderServices()}\n                  </InfoEText>\n              </InfoElement>\n              <NewDiv\n                margin=\"0 auto\"\n                width=\"100%\"\n              >\n                  <Button\n                    largeBtn\n                    margin=\"0 auto\"\n                    backgroundColor={Colors.darkBlue}\n                    onClick={() => this.openServiceScreen()}\n                  >\n                    <Text\n                      white20\n                    >\n                      Service This Vehicle\n                    </Text>\n                  </Button>\n              </NewDiv>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   getSelectedService: (service) => dispatch(getSelectedService(service))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(VehicleInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport detailsw from '../../rersources/svg/detailsw.svg';\nimport mileagew from '../../rersources/svg/mileagew.svg';\nimport pencilw from '../../rersources/svg/pencilw.svg';\nimport calendarw from '../../rersources/svg/calendarw.svg';\nimport historyw from '../../rersources/svg/historyw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n\n    @media ${device.laptop} {\n        margin-left: 10%;\n    }\n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n        max-width: 350px;\n    }\n`\n\nclass ServiceInfo extends Component {\n  componentDidMount() {\n    const { getSelectedVehicle, customerVehicles, customerServices, selectedVehicle } = this.props\n    const {\n        match: { params: { vehicleid } }\n    } = this.props\n}\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n    }\n\n  render() {\n    const { selectedVehicle, selectedCustomer, selectedService } = this.props\n    console.log(this.props.state);\n    var strTime;\n    var strDate;\n\n    if (selectedService) {\n        var jsTime = selectedService.date\n        var timestamp = jsTime.substring(0, jsTime.length - 3)\n        console.log(timestamp);\n        console.log(jsTime);\n        var newDate = new Date(timestamp*1000);\n        var fHours = newDate.getHours();\n        var fMinutes = '0' + newDate.getMinutes();\n\n        var fDay = newDate.getDate();\n        var fMonth = newDate.getMonth();\n        var fYear = newDate.getFullYear();\n        fMonth = fMonth + 1;\n        console.log(fMonth);\n        console.log(fDay);\n        \n        var ampm = fHours >= 12 ? 'pm' : 'am';\n        fHours = fHours % 12;\n        fHours = fHours ? fHours : 12;\n      //  fMinutes = fMinutes < 10 ? '0'+ fMinutes : fMinutes;\n      var formattedTime = fHours + ':' + fMinutes.substr(-2) + ampm;\n      var formattedDate = (`${fMonth}/${fDay}/${fYear}`)\n      //  strDate = (`${fMonth}/${fDay}`);\n\n        return (\n            <MainBG>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Service Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          CUSTOMER NAME\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.customerName}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={calendarw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          DATE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {formattedDate}\n                          &nbsp;\n                          - \n                          &nbsp;\n                          {formattedTime} \n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.phoneNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={mileagew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MILEAGE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.mileage}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={pencilw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          REASON FOR VISIT:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.reason}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={detailsw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          DETAILS:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.details}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(ServiceInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport checkw from '../../rersources/svg/checkw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text'; \n\nconst ConfirmContentContainer = styled.div`\n    @media ${device.tablet} {\n        padding-top: 300px;\n        width: 500px;\n        text-align: center;\n        margin: 0 auto;\n    }\n`\n\nconst ConfirmIconDiv = styled.div`\n    @media ${device.tablet} {\n        width: 200px;\n        height: 200px;\n        margin: 0 auto;  \n    }\n\n    svg {\n        width: 100%\n        height: 100%\n    }\n`\n\nconst ConfirmContentText = styled.div`\n    @media ${device.tablet} {\n        width: 500px;\n        margin: 0 auto;\n        padding-top: 50px;\n        padding-bottom: 50px;\n    }\n`\n\nconst ConfirmButtons = styled.div`\n    @media ${device.tablet} {\n\n    }\n`\n\nclass CustomerConfirmation extends Component {\n    componentDidMount() {\n    }\n\n    search = (id, myArray) => {\n        for (var i=0; i < myArray.length; i++) {\n            if (myArray[i].customerid === id) {\n                return myArray[i];\n            }\n        }\n    }\n\n    openAllVehicles = () => {\n        const { history } = this.props;\n        history.push('/all-customers')\n    }\n    openAddVehicle = () => {\n        const { realCustomers, selectedCustomer, getSelectedCustomer, history } = this.props\n        const currentCus = realCustomers.slice(-1).pop();\n        getSelectedCustomer(currentCus);\n        history.push(`/new-vehicle`);\n    }\n\n    render() {\n        const { realCustomers, getSelectedCustomer, selectedCustomer } = this.props\n\n        if (realCustomers.length > 0) {\n            console.log(realCustomers)\n            const currentCus = realCustomers.slice(-1).pop()\n            console.log(currentCus);\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                            <ConfirmIconDiv>\n                                <SVG src={checkw} />\n                            </ConfirmIconDiv>\n                            <ConfirmContentText>\n                                <Text\n                                    white20\n                                >\n                                    {currentCus.name},\n                                    &nbsp;\n                                The new customer has been added successfully. Would you like to add a vehicle for this customer now?\n                                </Text>\n                        </ConfirmContentText>\n                        <ConfirmButtons>\n                                <Button\n                                    display=\"inline-block\"\n                                    margin=\"0px 5px\"\n                                    width=\"156px\"\n                                    height=\"40px\"\n                                    borderRadius=\"25px\"\n                                    backgroundColor={Colors.fullWhite}\n                                    onClick={() => this.openAllVehicles()}\n                                >\n                                    <Text\n                                        dblue20\n                                    >\n                                        Not Now\n                                    </Text>\n                                </Button>\n                                <Button\n                                    display=\"inline-block\"\n                                    standardBtn\n                                    margin=\"0px 5px\"\n                                    onClick={() => this.openAddVehicle()}\n                                >\n                                    <Text\n                                        white20\n                                    >\n                                        Yes\n                                    </Text>\n                                </Button>\n                            </ConfirmButtons>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                           <p>Loading...</p>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    state: state\n  })\n  \n  const dispatchToProps = (dispatch) => ({\n     \n  })\n  \n  export default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerConfirmation));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport checkw from '../../rersources/svg/checkw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text'; \n\nconst ConfirmContentContainer = styled.div`\n    @media ${device.tablet} {\n        padding-top: 300px;\n        width: 500px;\n        text-align: center;\n        margin: 0 auto;\n    }\n`\n\nconst ConfirmIconDiv = styled.div`\n    @media ${device.tablet} {\n        width: 200px;\n        height: 200px;\n        margin: 0 auto;  \n    }\n\n    svg {\n        width: 100%\n        height: 100%\n    }\n`\n\nconst ConfirmContentText = styled.div`\n    @media ${device.tablet} {\n        width: 500px;\n        margin: 0 auto;\n        padding-top: 50px;\n        padding-bottom: 50px;\n    }\n`\n\nconst ConfirmButtons = styled.div`\n    @media ${device.tablet} {\n\n    }\n`\n\nclass VehicleConfirmation extends Component {\n    componentDidMount() {\n    }\n\n    search = (id, myArray) => {\n        for (var i=0; i < myArray.length; i++) {\n            if (myArray[i].customerid === id) {\n                return myArray[i];\n            }\n        }\n    }\n\n    openAllVehicles = () => {\n        const { history, selectedVehicle, getSelectedVehicle, customerVehicles, selectedCustomer } = this.props\n        history.push('/all-customers');\n    }\n    openAddService = () => {\n        const { realCustomers, selectedCustomer, getSelectedVehicle, history, customerVehicles, selectedVehicle } = this.props\n        const currentCus = customerVehicles.slice(-1).pop();\n        getSelectedVehicle(currentCus);\n        history.push('/new-service');\n    }\n\n    render() {\n        const { realCustomers, getSelectedCustomer, selectedCustomer } = this.props\n\n        if (realCustomers.length > 0) {\n            console.log(realCustomers)\n            const currentCus = realCustomers.slice(-1).pop()\n            console.log(currentCus);\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                            <ConfirmIconDiv>\n                                <SVG src={checkw} />\n                            </ConfirmIconDiv>\n                            <ConfirmContentText>\n                                <Text\n                                    white20\n                                >\n                                The new vehicle has been added successfully. Would you like to service this customer now?\n                                </Text>\n                        </ConfirmContentText>\n                        <ConfirmButtons>\n                                <Button\n                                    display=\"inline-block\"\n                                    margin=\"0px 5px\"\n                                    width=\"156px\"\n                                    height=\"40px\"\n                                    borderRadius=\"25px\"\n                                    backgroundColor={Colors.fullWhite}\n                                    onClick={() => this.openAllVehicles()}\n                                >\n                                    <Text\n                                        dblue20\n                                    >\n                                        Not Now\n                                    </Text>\n                                </Button>\n                                <Button\n                                    display=\"inline-block\"\n                                    standardBtn\n                                    margin=\"0px 5px\"\n                                    onClick={() => this.openAddService()}\n                                >\n                                    <Text\n                                        white20\n                                    >\n                                        Yes\n                                    </Text>\n                                </Button>\n                            </ConfirmButtons>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                           <p>Loading...</p>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    state: state\n  })\n  \n  const dispatchToProps = (dispatch) => ({\n     \n  })\n  \n  export default withRouter(connect(mapStateToProps, dispatchToProps)(VehicleConfirmation));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {userLogin} from '../../store/actions/customer'\nimport './customers.css';\n\nclass UserLogin extends Component {\n\n  static propTypes = {\n    userLogin: PropTypes.func.isRequired,\n    resSend: PropTypes.string.isRequired\n  }\n\n  static defaultProps = {\n    resSend: ''\n  }\n\n  componentWillMount() {\n    this.props.userLogin();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h2>Res Send User Login</h2>\n        <p>{this.props.resSend}</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  resSend: state.resSend\n})\n\nconst dispatchToProps = (dispatch) => ({\n   userLogin: () => dispatch(userLogin())\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(UserLogin);","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Colors from '../constants/colors';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\n//import ReactSVG from 'react-svg';\nimport SVG from 'react-inlinesvg';\n\nconst FormField = styled.input`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 0px 10px 10px 0px;\n    padding: 0;\n    padding-left: 10px;\n    font-size: 16px;\n\n    @media ${device.tablet} {\n        width: ${({ width }) => (width || '345px')};\n        height: 50px;\n        float: right;\n        margin: 0 auto;\n    }\n`\n\nconst FormFieldContainer = styled.div`\n\n    @media ${device.tablet} {\n        width: ${({ width }) => (width || '417px')};\n        height: 50px;\n        margin-bottom: 50px;\n    }\n\n    border-radius: 10px;\n    -webkit-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    -moz-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n`\n\nconst FormFieldLeft = styled.div`\n    border-radius: 10px 0px 0px 10px;\n    width: 61px;\n    height: 50px;\n    background-color: ${Colors.fullWhite};\n    float: left;\n`\n\nconst FormFieldSplit = styled.div`\n    width: 1px;\n    height: 50px;\n    background: ${Colors.lightBlue};\n    float: left;\n`\n\nconst FormIconContainer = styled(NewDiv)`\n    width: 33px;\n    height: 33px;\n    margin: 0 auto;\n    margin-top: 8px;\n\n    svg {\n        width: 33px;\n        height: 33px;\n    }\n`\n\nexport default ({ input, label, svg, placeholder, defaultValue, value, fieldWidth, containerWidth, meta: { error, touched } }) => {\n    console.log(defaultValue);\n    return (\n        <FormFieldContainer\n            width={containerWidth}\n        >\n                <FormFieldLeft>\n                    <FormIconContainer\n                    >\n                        <SVG src={svg} />\n                    </FormIconContainer>\n                </FormFieldLeft>\n                <FormFieldSplit />\n                <FormField {...input} placeholder={placeholder} value={value} defaultValue={defaultValue} width={fieldWidth} /> <br/>\n                {touched && error}\n        </FormFieldContainer>\n    )\n}\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport emailb from '../../rersources/svg/emailb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport SVG from 'react-inlinesvg';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport StyledBackIcon from './Styled/StyledBackIcon';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst FIELDS = [\n  {\n    label: 'Customer Name', name: 'cname', svg: userb, placeholder: 'Enter Customer Name...', noValueError: 'You must provide a customer name'\n  },\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter Phone Number...', noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Secondary Phone Number', name: 'pnumber2', svg: phoneb, placeholder: 'Enter Secondary Phone Number', noValueError: 'You must provide a secondary phone number'\n  },\n  {\n    label: 'Customer Email', name: 'email', svg: emailb, placeholder: 'Enter Email...', noValueError: 'You must provide a email address'\n  },\n]\n\nclass AddCustomer extends Component {\n  componentDidMount() {\n    const {showNavBar, toggleNavBar, toggleNavToggle } = this.props\n    if (showNavBar === 'block') {\n      toggleNavBar('none')\n      toggleNavToggle(barsw);\n    } else {\n      console.log('Not showing....');\n    }\n  }\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          type=\"text\" \n          name={field.name} \n          placeholder={field.placeholder}\n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  addNewCustomer = (values) => {\n      const { createNewCustomer, history, realCustomers } = this.props\n      console.log(realCustomers);\n      createNewCustomer(values);\n      history.push('/new-customer/confirmation');\n      window.location.reload();\n  }\n\n  render() {\n    const { createNewCustomer } = this.props\n    console.log(createNewCustomer);\n    return (\n      <div>\n          <MainBG>\n            <StyledBackIcon\n                onClick={() => this.goBack()}\n            >\n                <SVG src={arrowleftw} />\n            </StyledBackIcon>\n              <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Enter The Fields Below\n                </Text>\n              </MainHeading>\n            <FormContainer\n            >\n                <form onSubmit={this.props.handleSubmit(values => this.addNewCustomer(values))}>\n                  {this.renderFields()}\n                  <Button\n                    standardBtn\n                    margin=\"0 auto\"\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Submit\n                    </Text>\n                  </Button>\n                </form>\n            </FormContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values, props) => {\n  //const { realCustomers } = this.props\n  const errors = {};\n\n  console.log(values);\n  console.log(props);\n  console.log(values.email);\n  console.log(props.realCustomers);\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n  });\n\n  for (var i=0; i < props.realCustomers.length; i++) {\n    if (values.email == props.realCustomers[i].email) {\n      errors.email = 'This email is already in use'\n      console.log('ERROR');\n    } else {\n      console.log('SUCCESS');\n    }\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newCustomerForm'\n})(AddCustomer)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport hashb from '../../rersources/svg/hashb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst DetailsTextarea = styled.textarea`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 10px;\n    padding: 0;\n    padding-left: 10px;\n    padding-top: 10px;\n    font-size: 16px;\n\n  @media ${device.tablet} {\n    width: 500px;\n    height: 250px;\n    margin: 0 auto;\n    margin-bottom: 50px;  \n  }\n`\n\nconst FIELDS = [\n  {\n    label: 'Name', name: 'name', svg: userb, placeholder: 'Enter name...', noValueError: 'You must provide a name'\n  },\n  {\n    label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter vehicle mileage...', noValueError: 'You must provide a value for mileage'\n  },\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...',  noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Reason For Visit', name: 'reason', svg: pencilb, placeholder: 'Enter reason...', noValueError: 'You must provide a reason for visit'\n  },\n  {\n    label: 'Tag Number', name: 'tnumber', svg: hashb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number'\n  }\n]\n\nclass AddService extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      currentDetailsText: ''\n    }\n\n    this.updateTextarea = this.updateTextarea.bind(this)\n  }\n\n  renderFields = () => {\n    const selectedCustomer = this.props.selectedCustomer\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          type=\"text\" \n          name={field.name} \n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n          placeholder={field.placeholder}\n          svg={field.svg}\n      />\n      )  \n    });\n  }\n\n  renderDetailsField = () => {\n    console.log('Here is the details textarea....')\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  updateTextarea = (e) => {\n    const newDetailsText = e.target.value\n    this.setState({ currentDetailsText: newDetailsText});\n    console.log(this.state.currentDetailsText)\n  }\n\n  render() {\n    const { createNewService, selectedCustomer, selectedVehicle } = this.props\n    const props = this.props\n    const currentDetailsText = this.state.currentDetailsText\n\n    const createBody = (values, props) => {\n      const history = this.props.history;\n        let dataa = {\n          values: values,\n          props: props,\n          detailsText: currentDetailsText\n        }\n\n        var myJSON = JSON.stringify(dataa)\n\n        console.log(`Here is the data ${myJSON}`)\n        createNewService(dataa);\n        history.push('/customers/chat/service')\n        window.location.reload();\n    }\n\n    return (\n      <div>\n      <MainBG>\n        <StyledBackIcon\n            onClick={() => this.goBack()}\n        >\n           <SVG src={arrowleftw} />\n        </StyledBackIcon>\n          <MainHeading>\n            <Text\n              mainHeading\n              padding=\"30px 0 50px 0\"\n            >\n              Enter The Fields Below\n            </Text>\n          </MainHeading>\n        <FormContainer\n        >\n            <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n              {this.renderFields()}\n              <DetailsTextarea \n                value={this.state.currentDetailsText}\n                onChange={this.updateTextarea}\n                placeholder='Enter Details...'\n              />\n              <Button\n                standardBtn\n                margin=\"0 auto\"\n                type=\"submit\"\n              >\n                <Text\n                  buttonText\n                >\n                  Submit\n                </Text>\n              </Button>\n            </form>\n        </FormContainer>\n      </MainBG>\n  </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newServiceForm'\n})(AddService)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport calendarb from '../../rersources/svg/calendarb.svg';\nimport carb from '../../rersources/svg/carb.svg';\nimport licenseb from '../../rersources/svg/licenseb.svg';\nimport vinb from '../../rersources/svg/vinb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport hashb from '../../rersources/svg/hashb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst FIELDS = [\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...', noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Secondary Phone Number', name: 'pnumber2', svg: phoneb, placeholder: 'Enter secondary phone number...',  noValueError: 'You must provide a secondary phone number'\n  },\n  {\n    label: 'Vehicle Year', name: 'vyear', svg: calendarb, placeholder: 'Enter vehicle year...', noValueError: 'You must provide a vehicle year'\n  },\n  {\n    label: 'Vehicle Make', name: 'vmake', svg: carb, placeholder: 'Enter vehicle make...', noValueError: 'You must provide a vehicle make'\n  },\n  {\n    label: 'Vehicle Model', name: 'vmodel', svg: carb, placeholder: 'Enter vehicle model..', noValueError: 'You must provide a vehicle model'\n  },\n  {\n    label: 'License Plate Number', name: 'lpnumber', svg: licenseb, placeholder: 'Enter license plate number...', noValueError: 'You must provide a license plate number'\n  },\n  {\n    label: 'Vehicle Vin Number', name: 'vnumber', svg: vinb, placeholder: 'Enter vehicle vin number...', noValueError: 'You must provide a vin number'\n  },\n  {\n    label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter mileage...', noValueError: 'You must provide the mileage'\n  },\n  {\n    label: 'Tag Number', name: 'tnumber', svg: hashb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number'\n  },\n]\n\nclass AddVehicle extends Component {\n  componentDidMount() {\n    const { getSelectedCustomer, realCustomers } = this.props\n\n  }\n\n  renderFields = () => {\n    const selectedCustomer = this.props.selectedCustomer\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          type=\"text\" \n          name={field.name} \n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n          placeholder={field.placeholder}\n          svg={field.svg}\n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history, selectedCustomer } = this.props\n    console.log(this.props)\n    console.log(`Here is the selected customer ${selectedCustomer}`);\n    history.go(-1)\n  }\n\n  render() {\n    const { createNewVehicle, selectedCustomer } = this.props\n    console.log(this.props);\n    console.log(selectedCustomer);\n    const props = this.props\n\n    const createBody = (values, props) => {\n      const history = props.history\n        let dataa = {\n          values: values,\n          props: props\n        }\n        createNewVehicle(dataa);\n        console.log(history)\n        history.push('/new-vehicle/confirmation');\n        window.location.reload();\n    }\n\n    return (\n      <div>\n      <MainBG>\n        <StyledBackIcon\n            onClick={() => this.goBack()}\n        >\n           <SVG src={arrowleftw} />\n        </StyledBackIcon>\n          <MainHeading>\n            <Text\n              mainHeading\n              padding=\"30px 0 50px 0\"\n            >\n              Enter The Fields Below\n            </Text>\n          </MainHeading>\n        <FormContainer\n        >\n            <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n              {this.renderFields()}\n              <Button\n                standardBtn\n                margin=\"0 auto\"\n                type=\"submit\"\n              >\n                <Text\n                  buttonText\n                >\n                  Submit\n                </Text>\n              </Button>\n            </form>\n        </FormContainer>\n      </MainBG>\n  </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newVehicleForm'\n})(AddVehicle)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewUser } from '../../store/actions/customer';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport Colors from '../constants/colors';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport { MainBG, NewDiv } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst RegisterContainer = styled(NewDiv)`\n  @media ${device.tablet} {\n    width: 418px;\n    height: 700px;\n    margin: 0 auto;\n  } \n\n`\n\n\nconst FIELDS = [\n  {\n    label: 'Email', name: 'email', svg: userb, placeholder: 'Enter Email....', noValueError: 'You must provide a email address'\n  },\n  {\n    label: 'Password', name: 'password', svg: lockb, placeholder: 'Enter Password....', noValueError: 'You must provide a password'\n  },\n  {\n    label: 'Confirm Password', name: 'password2', svg: lockb, placeholder: 'Confirm Password....', noValueError: 'Please confirm your password'\n  },\n  {\n    label: 'Company Name', name: 'companyName', svg: lockb, placeholder: 'Enter Company Name....', noValueError: 'Please enter a name for your company'\n  }\n]\n\nclass RegisterUser extends Component {\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          placeholder={field.placeholder}\n          type=\"text\" \n          name={field.name} \n          component={TextField}\n          fieldWidth=\"345px\"\n          containerWidth=\"417px\" \n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  handleNewUser = (values) => {\n    const { createNewUser, history } = this.props\n    createNewUser(values);\n  //  history.push('/login')\n  }\n\n  render() {\n    const { createNewUser } = this.props\n    return (\n      <div>\n          <MainBG>\n            <RegisterContainer\n            >\n              <NewDiv\n                padding=\"200px 0 56px 0\"\n              >\n                  <img src = { mainLogo } />\n                </NewDiv>\n                <form onSubmit={this.props.handleSubmit(values => this.handleNewUser(values))}>\n                  {this.renderFields()}\n                  <Button\n                    width=\"416px\"\n                    height=\"50px\"\n                    backgroundColor={Colors.darkBlue}\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Sign Up\n                    </Text>\n                  </Button>\n                </form>\n            </RegisterContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n    console.log(values);\n     if (values.password != values.password2) {\n         errors.password2 = 'Passwords do not match'\n    };\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newUserForm'\n})(RegisterUser)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewUser } from '../../store/actions/customer';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport { MainBG, NewDiv } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport colors from '../constants/colors';\n\nconst LoginContainer = styled(NewDiv)`\n  @media ${device.tablet} {\n    width: 418px;\n    height: 700px;\n    margin: 0 auto;\n  } \n\n`\n\nconst FIELDS = [\n  {\n    label: 'Email', name: 'email', placeholder: 'Enter Email....', svg: userb, noValueError: 'You must provide a email address'\n  },\n  {\n    label: 'Password', name: 'password', placeholder: 'Enter Password....', svg: lockb, noValueError: 'You must provide a password'\n  }\n]\n\nclass LoginUser extends Component {\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          type=\"text\" \n          name={field.name} \n          placeholder={field.placeholder}\n          component={TextField} \n      />\n      )  \n    });\n  }\n\n  handleLoginSubmit = (values) => {\n    const { userLogin, history } = this.props\n    userLogin(values);\n   // window.location.reload()\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  render() {\n    const { userLogin, logoutUser } = this.props\n    return (\n      <div>\n          <MainBG>\n            <LoginContainer\n            >\n              <NewDiv\n                padding=\"200px 0 56px 0\"\n              >\n                  <img src = { mainLogo } />\n                </NewDiv>\n                <form onSubmit={this.props.handleSubmit(values => this.handleLoginSubmit(values))}>\n                  {this.renderFields()}\n                  <Button\n                    width=\"416px\"\n                    height=\"50px\"\n                    backgroundColor={colors.darkBlue}\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Sign In\n                    </Text>\n                  </Button>\n                </form>\n            </LoginContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n    console.log(values);\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'userLoginForm'\n})(LoginUser)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport hashb from '../../rersources/svg/hashb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst DetailsTextarea = styled.textarea`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 10px;\n    padding: 0;\n    padding-left: 10px;\n    padding-top: 10px;\n    font-size: 16px;\n\n  @media ${device.tablet} {\n    width: 500px;\n    height: 250px;\n    margin: 0 auto;\n    margin-bottom: 50px;  \n  }\n`\n\nconst FIELDS = [\n  {\n    label: 'Name', name: 'name', svg: userb, placeholder: 'Enter name...', noValueError: 'You must provide a name'\n  },\n  {\n    label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter vehicle mileage...', noValueError: 'You must provide a value for mileage'\n  },\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...',  noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Reason For Visit', name: 'reason', svg: pencilb, placeholder: 'Enter reason...', noValueError: 'You must provide a reason for visit'\n  },\n  {\n    label: 'Tag Number', name: 'tnumber', svg: hashb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number'\n  }\n]\n\nclass EndService extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      currentDetailsText: ''\n    }\n    this.updateTextarea = this.updateTextarea.bind(this)\n  }\n\n  componentDidMount() {\n      const { selectedServiceMessage } = this.props\n      this.setState({ currentDetailsText: selectedServiceMessage.details })\n  }\n\n  renderFields = () => {\n    const { selectedCustomer, selectedServiceMessage } = this.props\n\n    const FIELDS = [\n        {\n          label: 'Name', name: 'name', svg: userb, placeholder: 'Enter name...', noValueError: 'You must provide a name', defaultValue: selectedServiceMessage.customerName\n        },\n        {\n          label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter vehicle mileage...', noValueError: 'You must provide a value for mileage', defaultValue: selectedServiceMessage.mileage\n        },\n        {\n          label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...',  noValueError: 'You must provide a phone number', defaultValue: selectedServiceMessage.phoneNumber\n        },\n        {\n          label: 'Reason For Visit', name: 'reason', svg: pencilb, placeholder: 'Enter reason...', noValueError: 'You must provide a reason for visit', defaultValue: selectedServiceMessage.reason\n        },\n        {\n          label: 'Tag Number', name: 'tnumber', svg: hashb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number', defaultValue: selectedServiceMessage.tagNumber\n        }\n      ]\n\n\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          type=\"text\" \n          name={field.name} \n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n          placeholder={field.placeholder}\n          defaultValue={field.defaultValue}\n          value=\"Value\"\n          svg={field.svg}\n      />\n      )  \n    });\n  }\n\n  renderDetailsField = () => {\n    console.log('Here is the details textarea....')\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  updateTextarea = (e) => {\n    const newDetailsText = e.target.value\n    this.setState({ currentDetailsText: newDetailsText});\n    console.log(this.state.currentDetailsText)\n  }\n\n  render() {\n    const { selectedCustomer, selectedVehicle, selectedServiceText, selectedServiceMessage, updateService } = this.props\n    const props = this.props\n    const currentDetailsText = this.state.currentDetailsText\n\n    console.log(selectedServiceMessage)\n\n    const createBody = (values, props) => {\n      const history = this.props.history;\n        let dataa = {\n          values: values,\n          props: props,\n          detailsText: currentDetailsText\n        }\n\n        var myJSON = JSON.stringify(dataa)\n\n        console.log(`Here is the data ${myJSON}`)\n        updateService(dataa);\n        history.push('/customers/chat/service')\n        window.location.reload();\n    }\n\n    return (\n      <div>\n      <MainBG>\n          <MainHeading>\n            <Text\n              mainHeading\n              padding=\"30px 0 50px 0\"\n            >\n              Confirm Information Below\n            </Text>\n          </MainHeading>\n        <FormContainer\n        >\n            <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n              {this.renderFields()}\n              <DetailsTextarea \n                value={this.state.currentDetailsText}\n                onChange={this.updateTextarea}\n                placeholder='Enter Details...'\n              />\n              <Button\n                standardBtn\n                margin=\"0 auto\"\n                type=\"submit\"\n              >\n                <Text\n                  buttonText\n                >\n                  Submit\n                </Text>\n              </Button>\n            </form>\n        </FormContainer>\n      </MainBG>\n  </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newServiceForm'\n})(EndService)","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors';\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport plusw from '../../../rersources/svg/plusw.svg';\nimport pointw from '../../../rersources/svg/pointw.svg';\nimport phonebookw from '../../../rersources/svg/phonebookw.svg';\nimport settingsw from '../../../rersources/svg/settingsw.svg';\nimport returnw from '../../../rersources/svg/returnw.svg';\nimport barsw from '../../../rersources/svg/barsw.svg';\nimport { NewDiv } from '../Styled/StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\n\nexport const MainNavContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        background-color: ${Colors.black};\n        width: 100%;\n        opacity: .8;\n        z-index: 90;\n        display: ${({ display }) => (display || 'none')};\n        position: fixed;\n        top: 0;\n        bottom: 0;\n    }\n`\n\nexport const HeaderContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        background-color: ${Colors.lightBlue};\n        float: left;\n        position: fixed;\n        height: 100vh;\n        z-index: 100;\n        display: ${({ display }) => (display || 'none')};\n        border-bottom-right-radius: 20px;\n        border-top-right-radius: 20px;\n    } \n`\n\nexport const HeaderTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        height: 207px;\n        padding-top: 15px;\n        background-color: ${Colors.fullWhite};\n        border-top-right-radius: 20px;\n    } \n`\n\nexport const HeaderTopImg = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100px;\n        height: 100px;\n        border-radius: 50px;\n        margin: 0 auto;\n        background: ${Colors.darkBlue};\n    }\n`\n\nexport const HeaderTopText = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 92%;\n        margin: 0 auto;\n        margin-top: 15px;\n    }\n`\n\nexport const HeaderLIContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        height: 70px;\n        width: 100%\n        border-bottom: 1px solid white;\n        background: ${Colors.lightBlue};\n    }\n`\n\nexport const LILeft = styled(NewDiv)`\n    @media ${device.tablet} {\n        float: left;\n        width: 80px;\n        height: 70px;\n    }\n`\n\nexport const LIRight = styled(NewDiv)`\n    @media ${device.tablet} {\n        float: right;\n        width: 243px;\n        height: 70px;\n        text-align: left;\n        line-height: 70px;\n    }\n`\n\nexport const NavLIIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding-top: 20px;\n        width: 30px;\n        height: 30px;\n        margin: 0 auto;\n\n       svg {\n           width: 30px;\n           height: 30px;\n       } \n    }\n`\n\nexport const NavToggleIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        height: 50px;\n        width: 50px;\n        position: fixed;\n        bottom: 35px;\n        left: 25px;\n        display: ${({ display }) => (display || 'none')};\n        z-index: 999;\n\n        svg {\n            height: 50px;\n            width: 50px;\n        }\n    }\n`\n\nclass StyledNavBar extends Component  {\n\n    handleLogout = () => {\n        const { logoutUser, history } = this.props\n        console.log('Handling logout....')\n        logoutUser();\n        history.push('/')\n        const reload = () => {\n            window.location.reload()\n        }\n        setTimeout(reload, 2000)\n    }\n\n    render() {\n        const { renderContent, toggleNavBar, toggleNavToggle, fetchUser, showNavBar, showNavToggle, auth } = this.props\n        const data = this.props && this.props.auth ? this.props.auth.data: null\n        var companyName;\n        if (data) {\n            companyName = data.email\n        } else {\n            companyName = 'No Company Name'\n        }\n        console.log(showNavToggle);\n        console.log(showNavBar);\n        const toggleNav = () => {\n            if (showNavBar === 'block') {\n                toggleNavBar('none')\n                toggleNavToggle(barsw);\n            } else {\n                toggleNavBar('block');\n                toggleNavToggle(returnw);\n            }\n        }\n        return (\n          <div>\n              <MainNavContainer \n                display={showNavBar}\n              />\n            <HeaderContainer\n                display={showNavBar}\n            >\n                <HeaderTop>\n                      <HeaderTopImg />\n                      <HeaderTopText>\n                          <Text\n                            lblue22\n                            padding=\"10px 0 0 0\"\n                            maxWidth=\"300px\"\n                          >\n                              {companyName}\n                          </Text>\n                          <Text\n                            gray30\n                            padding=\"10px 0 0 0\"\n                          >\n                              Welcome\n                          </Text>\n                      </HeaderTopText>\n                </HeaderTop>\n                <Link to ='/new-customer'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={plusw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              New Customer\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/customers/chat/service'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={pointw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              Current Vehicles\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/all-customers'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={phonebookw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              All Customers\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                  <HeaderLIContainer\n                    onClick={this.handleLogout}\n                  >\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={settingsw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              {renderContent()}\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n            </HeaderContainer>\n             <NavToggleIcon\n             onClick={toggleNav}\n             display='block'\n           >\n               <SVG src={showNavToggle} />\n           </NavToggleIcon>\n           </div>\n          )\n    }\n   \n  }\n\n  export default withRouter(StyledNavBar);\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\n\nclass CustomerService extends Component {\n\n  componentDidMount() {\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    openServiceCustomer = () => {\n        const { history } = this.props\n        history.push(`/new-vehicle`);\n    }\n\n  render() {\n    const realCustomers = this.props.state.realCustomers\n    const selectedCustomer = this.props.selectedCustomer\n\n    console.log(realCustomers.length)\n    console.log(selectedCustomer);\n    console.log(this.props);\n\n    if (realCustomers.length >= 1) {\n        return (\n            <div>\n              <h2>Customer Service</h2>\n              <Button onClick={() => this.openServiceCustomer()}>\n                  Add Vehicle\n              </Button>\n            </div>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerService));","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Provider } from 'react-redux'\nimport logo from './logo.svg'\nimport mainLogo from './rersources/mainLogo.png';\nimport './App.css';\nimport store from './store';\nimport history from './history';\nimport Customers from './components/Customer/customers';\nimport ChatMessenger from './components/Customer/ChatMessenger';\nimport AllCustomers from './components/Customer/AllCustomers';\nimport CustomerInfo from './components/Customer/CustomerInfo';\nimport VehicleInfo from './components/Customer/VehicleInfo';\nimport ServiceInfo from './components/Customer/ServiceInfo';\nimport CustomerConfirmation from './components/Customer/CustomerConfirmation';\nimport VehicleConfirmation from './components/Customer/VehicleConfirmation';\nimport UserLogin from './components/Customer/userLogin';\nimport AddCustomer from './components/Customer/AddCustomer';\nimport AddService from './components/Customer/AddService';\nimport AddVehicle from './components/Customer/AddVehicle';\nimport RegisterUser from './components/Customer/RegisterUser';\nimport LoginUser from './components/Customer/LoginUser';\nimport EndService from './components/Customer/EndService';\nimport StyledNavBar from './components/Customer/Styled/StyledNavBar';\nimport CustomerService from './components/Customer/CustomerService';\nimport { connect } from 'react-redux';\n\nimport { createNewCustomer, createNewUser, createNewVehicle, userLogin, logoutUser, fetchUser, getRealCustomers, getCustomerVehicles, createNewService, getCustomerServices, createNewToMessage, getCustomerActiveToMessages, updateService } from './store/actions/customer';\nimport { toggleNavBar, toggleNavToggle, getSelectedCustomer, getSelectedVehicle, getCurrentEmailId } from './store/reducers/environment';\n\nimport styled from 'styled-components';\n\nimport { BrowserRouter as Router, Route, Link, withRouter, Switch } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\n\nconst Code = () => {\n  return (\n    <div>\n      Code Code Code\n    </div>\n  )\n}\n\nclass App extends Component {\n\n  componentDidMount() {\n    const { fetchUser, getRealCustomers, getCustomerVehicles, getCustomerServices, getCustomerActiveToMessages } = this.props;\n    getRealCustomers();\n    getCustomerVehicles();\n    getCustomerServices();\n    fetchUser();\n    getCustomerActiveToMessages();\n  }\n\n  renderContent = () => {\n    const props = this.props\n    const auth = this.props.auth\n    const data = props && props.auth ? props.auth.data : null;\n    switch (data) {\n      case null:\n        return 'Still deciding';\n      case false:\n        return 'Login';\n      case '':\n        return 'Login';\n      default:\n        return 'Logout';\n    }\n  }\n\n  renderCorrectPage = () => {\n    const props = this.props\n    const auth = this.props.auth\n    const data = props && props.auth ? props.auth.data: null\n\n    const userLogin = this.props.userLogin;\n    const logoutUser = this.props.logoutUser;\n    const getSelectedCustomer = this.props.getSelectedCustomer;\n    const environment = this.props.environment;\n\n    switch (data) {\n      case null:\n        console.log('null');\n        return (\n          <LoginUser\n           userLogin={userLogin}\n            logoutUser={logoutUser}\n          />\n        )\n      case false:\n          console.log('false');\n          return (\n            <LoginUser\n              userLogin={userLogin}\n              logoutUser={logoutUser}\n              history={history}\n           />\n        )\n      case '':\n          console.log('empty');\n          return (\n            <LoginUser\n              userLogin={userLogin}\n              logoutUser={logoutUser}\n              history={history}\n           />\n        )\n      default:\n          console.log('default');\n        return (\n            <AllCustomers\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              history={history}\n             />\n        )\n\n    }\n  }\n\n  render () {\n    const createNewCustomer = this.props.createNewCustomer;\n    const createNewUser = this.props.createNewUser;\n    const createNewVehicle = this.props.createNewVehicle;\n    const createNewService = this.props.createNewService;\n    const updateService = this.props.updateService;\n    const createNewToMessage = this.props.createNewToMessage;\n    const userLogin = this.props.userLogin;\n    const logoutUser = this.props.logoutUser;\n    const toggleNavBar = this.props.toggleNavBar;\n    const toggleNavToggle = this.props.toggleNavToggle;\n    const getSelectedCustomer = this.props.getSelectedCustomer;\n    const getSelectedVehicle = this.props.getSelectedVehicle;\n    const getCurrentEmailId = this.props.getCurrentEmailId\n    const environment = this.props.environment;\n    const realCustomers = this.props.state.realCustomers;\n    const customerVehicles = this.props.state.customerVehicles;\n    const customerServices = this.props.state.customerServices;\n    const activeToMessages = this.props.state.activeToMessages;\n    const auth = this.props.auth;\n;\n    console.log(this.props);\n    console.log(this.props.environment);\n    console.log(realCustomers);\n    console.log(customerVehicles);\n    console.log(customerServices);\n    console.log(activeToMessages)\n\n    return (\n          <div className=\"App\">\n            <StyledNavBar\n              renderContent={this.renderContent} \n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              fetchUser={fetchUser}\n              showNavBar={environment.showNavBar}\n              showNavToggle={environment.showNavToggle}\n              logoutUser={logoutUser}\n              history={history}\n              auth={auth}\n            />\n            <Switch>\n            <Route exact path=\"/\" \n            render={(props) => \n            <div>\n                {this.renderCorrectPage()}\n              </div>\n                }\n             />\n            <Route exact path=\"/login\" \n            render={(props) => <div>\n              {this.renderCorrectPage()}\n            </div> }\n            history={history}\n             />\n            <Route exact path=\"/register\" \n            render={(props) => <RegisterUser\n            createNewUser={createNewUser}\n            history={history}\n             />  }\n             />\n            <Route exact path=\"/new-customer\" \n            render={(props) => <AddCustomer\n            createNewCustomer={createNewCustomer}\n            toggleNavBar={toggleNavBar}\n            toggleNavToggle={toggleNavToggle}\n            showNavBar={environment.showNavBar}\n            history={history}\n            realCustomers={realCustomers}\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            getCurrentEmailId={getCurrentEmailId}\n             />  }\n             />\n             <Route exact path=\"/new-vehicle\" \n            render={(props) => <AddVehicle\n            createNewVehicle={createNewVehicle}\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            history={history}\n             />  }\n             />\n             <Route exact path=\"/new-service\" \n            render={(props) => <AddService\n            createNewService={createNewService}\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            history={history}\n             />  }\n             />\n             <Route exact path=\"/end-service\" \n            render={(props) => <EndService\n            selectedServiceMessage={environment.selectedServiceMessage}\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            updateService={updateService}\n            history={history}\n             />  }\n             />\n             <Route exact path=\"/new-customer/confirmation\" \n            render={(props) => <CustomerConfirmation\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            realCustomers={realCustomers}\n            history={history}\n             />  }\n             />\n\n            <Route exact path=\"/new-vehicle/confirmation\" \n            render={(props) => <VehicleConfirmation\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            getSelectedCustomer={getSelectedCustomer}\n            realCustomers={realCustomers}\n            customerVehicles={customerVehicles}\n            getSelectedVehicle={getSelectedVehicle}\n            history={history}\n             />  }\n             />\n\n            <Route exact path=\"/all-customers\" \n            render={(props) => <AllCustomers\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              history={history}\n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              showNavBar={environment.showNavBar}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/:customerid\" \n              render={(props) => <CustomerInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/vehicles/:vehicle\" \n              render={(props) => <VehicleInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n              customerServices={customerServices}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/vehicles/:vehicleid/:serviceid\" \n              render={(props) => <ServiceInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n              customerServices={customerServices}\n              selectedService={environment.selectedService}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/service/:customerid\" \n              render={(props) => <AddService\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              selectedVehicle={environment.selectedVehicle}\n              realCustomers={realCustomers}\n              history={history}\n              createNewService={createNewService}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/chat/service\" \n              render={(props) => <ChatMessenger\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              selectedVehicle={environment.selectedVehicle}\n              realCustomers={realCustomers}\n              history={history}\n              customerServices={customerServices}\n              createNewToMessage={createNewToMessage}\n              activeToMessages={activeToMessages}\n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              showNavBar={environment.showNavBar}\n    \n             />  }\n             />\n            <Route exact path=\"/settings\" component={Code} />\n            <Route exact path=\"/logout\" component={Code} logoutUser={logoutUser} />\n            </Switch>\n          </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { \n        auth: state.auth,\n        environment: state.environment,\n        state: state\n      }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createNewCustomer: (values) => dispatch(createNewCustomer(values)),\n    createNewUser: (values) => dispatch(createNewUser(values)),\n    createNewVehicle: (values) => dispatch(createNewVehicle(values)),\n    createNewService: (values) => dispatch(createNewService(values)),\n    updateService: (values) => dispatch(updateService(values)),\n    createNewToMessage: (value) => dispatch(createNewToMessage(value)),\n    userLogin: (values) => dispatch(userLogin(values)),\n    logoutUser: (values) => dispatch(logoutUser(values)),\n    fetchUser: (values) => dispatch(fetchUser(values)),\n    toggleNavBar: (display) => dispatch(toggleNavBar(display)),\n    toggleNavToggle: (display) => dispatch(toggleNavToggle(display)),\n    getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n    getSelectedVehicle: (vehicle) => dispatch(getSelectedVehicle(vehicle)),\n    getCurrentEmailId: (email) => dispatch(getCurrentEmailId(email)),\n    getRealCustomers: () => dispatch(getRealCustomers()),\n    getCustomerVehicles: () => dispatch(getCustomerVehicles()),\n    getCustomerServices: () => dispatch(getCustomerServices()),\n    getCustomerActiveToMessages: () => dispatch(getCustomerActiveToMessages())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport history from './history';\n\nimport { Provider } from 'react-redux';\n//import reducers from './reducers';\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter\n            history={history}\n        >\n            <App \n                history={history}\n            />\n        </BrowserRouter>\n    </Provider>, \n    document.querySelector('#root')\n);\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/phoneb.cbe528a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/barsw.03d3330b.svg\";","module.exports = __webpack_public_path__ + \"static/media/mainLogo.546207c0.png\";","module.exports = __webpack_public_path__ + \"static/media/userw.60f972be.svg\";","module.exports = __webpack_public_path__ + \"static/media/phonew.1d986067.svg\";","module.exports = __webpack_public_path__ + \"static/media/mileageb.096767ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/hashb.d38b84d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencilb.fc4dabf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/carw.8e8e5ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/closer.e4f6d492.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendarw.702919de.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkw.ed1b0bd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/mailw.1bafb9c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinw.d6f95123.svg\";"],"sourceRoot":""}