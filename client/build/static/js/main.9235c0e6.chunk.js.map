{"version":3,"sources":["rersources/svg/carb.svg","rersources/svg/settingsw.svg","rersources/svg/historyw.svg","rersources/svg/templatey.svg","rersources/svg/senddb.svg","rersources/svg/licensew.svg","rersources/svg/detailsw.svg","rersources/svg/mileagew.svg","rersources/svg/pencilw.svg","rersources/svg/emailb.svg","rersources/svg/calendarb.svg","rersources/svg/licenseb.svg","rersources/svg/vinb.svg","rersources/svg/plusw.svg","rersources/svg/pointw.svg","rersources/svg/phonebookw.svg","rersources/svg/returnw.svg","logo.svg","rersources/svg/lockb.svg","rersources/svg/userb.svg","rersources/svg/arrowleftw.svg","store/reducers/customer.js","store/actions/constants.js","store/reducers/environment.js","store/reducers/realCustomer.js","store/reducers/customerVehicle.js","store/reducers/customerService.js","store/reducers/customerToMessage.js","store/reducers/index.js","store/reducers/auth.js","store/index.js","history.js","store/actions/customer.js","components/Customer/customers.js","components/Customer/Styled/StyledMediaQuery.jsx","components/constants/colors.js","components/Customer/Styled/StyledComponents.jsx","components/Customer/Styled/Button.jsx","components/Customer/Styled/Text.jsx","components/Customer/Styled/StyledOverlay.jsx","components/Customer/CustomerCellRow.js","components/Customer/Styled/StyledBackIcon.jsx","components/Customer/ChatMessenger.js","components/Customer/AllCustomers.js","components/Customer/CustomerInfo.js","components/Customer/VehicleInfo.js","components/Customer/ServiceInfo.js","components/Customer/CustomerConfirmation.js","components/Customer/VehicleConfirmation.js","components/Customer/userLogin.js","components/Customer/TextField.js","components/Customer/AddCustomer.js","components/Customer/AddService.js","components/Customer/AddVehicle.js","components/Customer/RegisterUser.js","components/Customer/LoginUser.js","components/Customer/Styled/StyledNavBar.jsx","components/Customer/CustomerService.js","App.js","registerServiceWorker.js","index.js","rersources/svg/barsw.svg","rersources/mainLogo.png","rersources/svg/userw.svg","rersources/svg/phoneb.svg","rersources/svg/phonew.svg","rersources/svg/carw.svg","rersources/svg/calendarw.svg","rersources/svg/checkw.svg","rersources/svg/mileageb.svg","rersources/svg/hashb.svg","rersources/svg/mailw.svg","rersources/svg/pencilb.svg","rersources/svg/vinw.svg"],"names":["module","exports","__webpack_require__","p","customerReducer","state","arguments","length","undefined","_ref","type","payload","initialState","showNavBar","showNavToggle","barsw","selectedCustomer","selectedVehicle","selectedService","selectedServiceMesssage","selectedMessageText","showTemplateOverlay","currentEmailId","search","currentFilter","getSelectedCustomer","customer","GET_SELECTED_CUSTOMER","getSelectedMessageText","text","GET_SELECTED_MESSAGE_TEXT","TOGGLE_NAV_BAR","TOGGLE_NAV_TOGGLE","GET_SELECTED_VEHICLE","GET_SELECTED_SERVICE","GET_SELECTED_SERVICE_MESSAGE","TOGGLE_TEMPLATE_OVERLAY","GET_CURRENT_EMAIL_ID","UPDATE_CUSTOMER_SEARCH","GET_CURRENT_FILTER","customerRealReducer","customerVehicleReducer","customerServiceReducer","customerActiveToMessageReducer","combineReducers","environment","action","Object","objectSpread","display","vehicle","service","selectedServiceMessage","sm","status","email","filter","customers","activeToMessages","realCustomers","customerVehicles","customerServices","activeServices","customerActiveServiceReducer","auth","form","reduxForm","middleware","thunk","withDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","apply","createBrowserHistory","getRealCustomers","dispatch","fetch","then","res","json","getCustomerActiveToMessages","userLogin","values","_ref6","asyncToGenerator","regenerator_default","a","mark","_callee6","wrap","_context6","prev","next","axios","post","sent","location","reload","console","log","data","stop","_x6","this","fetchUser","_ref7","_callee7","_context7","get","_x7","Customers","props","getCustomers","react_default","createElement","map","key","id","firstName","lastName","Component","defaultProps","connect","size","device","mobileS","concat","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","colors","fullWhite","lightGray","lighterGray","lightBlue","darkBlue","black","NewDiv","styled","div","_templateObject","width","_ref2","height","_ref3","margin","_ref4","padding","_ref5","border","borderRadius","textAlign","_ref8","zIndex","_ref9","float","_ref10","_ref11","background","MainBG","_templateObject2","MainHeading","_templateObject3","Button","button","Button_templateObject","color","Colors","backgroundColor","is","Button_templateObject2","Button_templateObject3","_templateObject4","_templateObject5","_templateObject6","Text","Text_templateObject","lineHeight","maxWidth","fontWeight","fontStyle","fontFamily","Text_templateObject2","Text_templateObject3","Text_templateObject4","Text_templateObject5","Text_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","propTypes","PropTypes","string","largeText","bool","subtext","subtitle","error","gray","pointer","underline","inline","StyledOverlayContainer","StyledOverlay_templateObject","StyledOverlayContentBox","StyledOverlay_templateObject2","OverlayContentContainer","StyledOverlay_templateObject3","CustomerInputMessage","input","StyledOverlay_templateObject4","TemplateNavContainer","StyledOverlay_templateObject5","StyledOverlay","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleNew","e","value","preventDefault","template1","text1","customerName","text2","newText","customText","onSubmit","assertThisInitialized","Styled_Text","white20","onChange","handleChange","bind","name","Styled_Button","standardBtn","onClick","_this$props","toggleTemplateOverlay","template2","_this$props2","template3","_this$props3","forwardTemplate","messageTemplates","templateNumber","setState","backTemplate","event","target","currentTemplate","dblue16","white16","CustomerCellDiv","CustomerCellRow_templateObject","CellID","CustomerCellRow_templateObject2","CellInfoLeft","CustomerCellRow_templateObject3","CellInfoRight","CustomerCellRow_templateObject4","CustomerCellRow","myArray","i","customerid","openCustomerProfile","history","push","_this2","phoneNumber1","lblue20","acName","borderBottom","withRouter","StyledBackIcon","StyledBackIcon_templateObject","MessengerContainer","ChatMessenger_templateObject","MessengerContainerTop","ChatMessenger_templateObject2","MessengerTopText","ChatMessenger_templateObject3","MessageCell","ChatMessenger_templateObject4","MessageCellContentTop","ChatMessenger_templateObject5","MessageCellContentBottom","ChatMessenger_templateObject6","MessengerSearchBar","ChatMessenger_templateObject7","MessengerChatContainer","ChatMessenger_templateObject8","MessengerChatTopSec","ChatMessenger_templateObject9","MessengerFixedBottom","ChatMessenger_templateObject10","ChatMessagesContainer","ChatMessenger_templateObject11","BottomLeftButton","ChatMessenger_templateObject12","BottomRightButton","ChatMessenger_templateObject13","BottomMiddleText","ChatMessenger_templateObject14","ChatToRow","ChatMessenger_templateObject15","ChatMessageToBubble","ChatMessenger_templateObject16","ChatMessenger","serviceid","openThisChat","v","getSelectedServiceMessage","displayOverlay","selectedMesageText","Styled_StyledOverlay","renderChatCells","activeServiceArray","reverse","dblue22","ellipsis","renderServiceId","dblue30","checkMessageFunc","renderChatMessages","_this$props4","displayedToMessages","textMessage","toggleTemplateTrue","sendNewMessage","_this$props5","createNewToMessage","phoneNumber","vehicleid","user","forceUpdate","correctChats","_this$props6","toggleNavBar","toggleNavToggle","go","_this$props7","Styled_StyledBackIcon","goBack","lib_default","src","arrowleftw","white35","placeholder","templatey","method","senddb","getActiveCustomerServices","customerActiveServices","CustomerSearchBar","AllCustomers_templateObject","CustomerSearchSelectSec","AllCustomers_templateObject2","SearchNameBox","AllCustomers_templateObject3","NameSelectDiv","AllCustomers_templateObject4","StyledSelect","select","AllCustomers_templateObject5","SearchButton","AllCustomers_templateObject6","AllCsBG","AllCustomers_templateObject7","AllCustomers","searchCustomers","updateCustomerSearch","s","document","getElementById","strSelect","options","selectedIndex","updateFilter","getCurrentFilter","cFilter","renderRows","filteredCustomers","item","toLowerCase","filterVal","match","number","d","Customer_CustomerCellRow","assign","mainHeading","CustomerInfo_templateObject","InfoElement","CustomerInfo_templateObject2","InfoEIcon","CustomerInfo_templateObject3","InfoEText","CustomerInfo_templateObject4","marginLeft","CustomerInfo","openNewVehicle","openVehicleDetails","getSelectedVehicle","renderVehicles","newVehicleArray","ownerid","vehicles","vehicleMake","vehicleModel","params","sc","userw","customerIE","phonew","mailw","carw","largeBtn","VehicleInfo_templateObject","VehicleInfo_templateObject2","VehicleInfo_templateObject3","VehicleInfo_templateObject4","VehicleInfo","openServiceScreen","openServiceDetails","getSelectedService","renderServices","newServiceArray","services","VehicleInfo_InfoElement","VehicleInfo_InfoEIcon","VehicleInfo_InfoEText","phoneNumber2","calendarw","vehicleYear","licensew","vehicleLicenseNumber","vinw","vehicleVinNumber","ServiceInfo_templateObject","ServiceInfo_templateObject2","ServiceInfo_templateObject3","ServiceInfo_templateObject4","ServiceInfo","ServiceInfo_InfoElement","ServiceInfo_InfoEIcon","ServiceInfo_InfoEText","date","mileagew","mileage","pencilw","reason","detailsw","details","ConfirmContentContainer","CustomerConfirmation_templateObject","ConfirmIconDiv","CustomerConfirmation_templateObject2","ConfirmContentText","CustomerConfirmation_templateObject3","ConfirmButtons","CustomerConfirmation_templateObject4","CustomerConfirmation","openAllVehicles","openAddVehicle","slice","pop","currentCus","checkw","dblue20","VehicleConfirmation_templateObject","VehicleConfirmation_templateObject2","VehicleConfirmation_templateObject3","VehicleConfirmation_templateObject4","VehicleConfirmation","openAddService","VehicleConfirmation_ConfirmContentContainer","VehicleConfirmation_ConfirmIconDiv","VehicleConfirmation_ConfirmContentText","VehicleConfirmation_ConfirmButtons","UserLogin","resSend","FormField","TextField_templateObject","FormFieldContainer","TextField_templateObject2","FormFieldLeft","TextField_templateObject3","FormFieldSplit","TextField_templateObject4","FormIconContainer","TextField_templateObject5","TextField","svg","label","defaultValue","fieldWidth","containerWidth","_ref3$meta","meta","touched","FormContainer","AddCustomer_templateObject","FIELDS","userb","noValueError","phoneb","emailb","AddCustomer","renderFields","field","Field","component","handleInputChange","addNewCustomer","createNewCustomer","handleSubmit","buttonText","validate","errors","forEach","AddService_templateObject","mileageb","pencilb","hashb","AddService","createNewService","AddService_FormContainer","createBody","AddVehicle_templateObject","calendarb","carb","licenseb","vinb","AddVehicle","createNewVehicle","AddVehicle_FormContainer","RegisterContainer","RegisterUser_templateObject","lockb","RegisterUser","handleNewUser","createNewUser","mainLogo","password","password2","LoginContainer","LoginUser_templateObject","LoginUser","handleLoginSubmit","logoutUser","MainNavContainer","StyledNavBar_templateObject","HeaderContainer","StyledNavBar_templateObject2","HeaderTop","StyledNavBar_templateObject3","HeaderTopImg","StyledNavBar_templateObject4","HeaderTopText","StyledNavBar_templateObject5","HeaderLIContainer","StyledNavBar_templateObject6","LILeft","StyledNavBar_templateObject7","LIRight","StyledNavBar_templateObject8","NavLIIcon","StyledNavBar_templateObject9","NavToggleIcon","StyledNavBar_templateObject10","StyledNavBar","handleLogout","renderContent","lblue22","gray30","react_router_dom","to","plusw","navItem","pointw","phonebookw","settingsw","returnw","CustomerService","openServiceCustomer","Code","App","renderCorrectPage","Customer_LoginUser","Customer_AllCustomers","getCustomerVehicles","getCustomerServices","getCurrentEmailId","className","Styled_StyledNavBar","react_router","exact","path","render","Customer_RegisterUser","Customer_AddCustomer","Customer_AddVehicle","Customer_AddService","Customer_CustomerConfirmation","Customer_VehicleConfirmation","Customer_CustomerInfo","Customer_VehicleInfo","Customer_ServiceInfo","Customer_ChatMessenger","_callee","_context","_x","_callee3","_context3","_x3","dataa","_callee2","_context2","_x2","_callee4","_context4","_x4","_callee5","_context5","_x5","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","es","store","src_App_0","querySelector","URL","process","origin","addEventListener","response","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9235c0e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carb.3154024e.svg\";","module.exports = __webpack_public_path__ + \"static/media/settingsw.923e5774.svg\";","module.exports = __webpack_public_path__ + \"static/media/historyw.ee726142.svg\";","module.exports = __webpack_public_path__ + \"static/media/templatey.be1a3992.svg\";","module.exports = __webpack_public_path__ + \"static/media/senddb.0cb7205c.svg\";","module.exports = __webpack_public_path__ + \"static/media/licensew.ec0917c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/detailsw.1a5681fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/mileagew.f795afec.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencilw.9c7b621e.svg\";","module.exports = __webpack_public_path__ + \"static/media/emailb.49db445e.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendarb.a503a49e.svg\";","module.exports = __webpack_public_path__ + \"static/media/licenseb.7c356553.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinb.036b5b43.svg\";","module.exports = __webpack_public_path__ + \"static/media/plusw.3538fda8.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointw.4ed024ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/phonebookw.38f17819.svg\";","module.exports = __webpack_public_path__ + \"static/media/returnw.9a134c4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/lockb.726d79e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/userb.ea158943.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowleftw.a55b94fb.svg\";","import {GET_CUSTOMERS} from '../actions/constants'\n\nconst customerReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_CUSTOMERS:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerReducer;\n","export const GET_CUSTOMERS = \"GET_CUSTOMERS\";\nexport const GET_REAL_CUSTOMERS = \"GET_REAL_CUSTOMERS\";\nexport const UPDATE_CUSTOMER = \"REMOVE_CUSTOMER\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const GET_VEHICLES = \"GET_VEHICLES\";\nexport const GET_SERVICES = \"GET_SERVICES\";\nexport const GET_ACTIVE_SERVICES = \"GET_ACTIVE_SERVICES\";\nexport const GET_ACTIVE_TO_MESSAGES = \"GET_ACTIVE_TO_MESSAGES\";\n","import lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\n\n// Reducer\nconst initialState = {\n    showNavBar: 'none',\n    showNavToggle: barsw,\n    selectedCustomer: null,\n    selectedVehicle: null,\n    selectedService: null,\n    selectedServiceMesssage: null,\n    selectedMessageText: null,\n    showTemplateOverlay: false,\n    currentEmailId: '',\n    search: '',\n    currentFilter: 'Name'\n};\n\nexport function toggleNavBar(display) {\n    return {\n        type: TOGGLE_NAV_BAR,\n        display\n    }\n}\n\nexport function toggleNavToggle(display) {\n    return {\n        type: TOGGLE_NAV_TOGGLE,\n        display\n    }\n}\n\nexport function getSelectedCustomer(customer) {\n    return {\n        type: GET_SELECTED_CUSTOMER,\n        customer\n    }\n}\n\nexport function getSelectedVehicle(vehicle) {\n    return {\n        type: GET_SELECTED_VEHICLE,\n        vehicle\n    }\n}\n\nexport function getSelectedService(service) {\n    return {\n        type: GET_SELECTED_SERVICE,\n        service\n    }\n}\n\nexport function getSelectedServiceMessage(sm) {\n    return {\n        type: GET_SELECTED_SERVICE_MESSAGE,\n        sm\n    }\n}\n\nexport function getSelectedMessageText(text) {\n    return {\n        type: GET_SELECTED_MESSAGE_TEXT,\n        text\n    }\n}\n\nexport function toggleTemplateOverlay(status) {\n    return {\n        type: TOGGLE_TEMPLATE_OVERLAY,\n        status\n    }\n}\n\nexport function getCurrentEmailId(email) {\n    return {\n        type: GET_CURRENT_EMAIL_ID,\n        email\n    }\n}\n\nexport function updateCustomerSearch(search) {\n    return {\n        type: UPDATE_CUSTOMER_SEARCH,\n        search\n    }\n}\n\nexport function getCurrentFilter(filter) {\n    return {\n        type: GET_CURRENT_FILTER,\n        filter\n    }\n}\n\nconst TOGGLE_NAV_BAR = 'TOGGLE_NAV_BAR';\nconst TOGGLE_NAV_TOGGLE = 'TOGGLE_NAV_TOGGLE';  \nconst GET_SELECTED_CUSTOMER = 'GET_SELECTED_CUSTOMER';\nconst GET_SELECTED_VEHICLE = 'GET_SELECTED_VEHICLE';\nconst GET_SELECTED_SERVICE = 'GET_SELECTED_SERVICE';\nconst GET_SELECTED_SERVICE_MESSAGE = 'GET_SELECTED_SERVICE_MESSAGE';\nconst GET_SELECTED_MESSAGE_TEXT = 'GET_SELECTED_MESSAGE_TEXT';\nconst TOGGLE_TEMPLATE_OVERLAY = 'TOGGLE_TEMPLATE_OVERLAY';\nconst GET_CURRENT_EMAIL_ID = 'GET_CURRENT_EMAIL_ID';\nconst UPDATE_CUSTOMER_SEARCH = 'UPDATE_CUSTOMER_SEARCH';\nconst GET_CURRENT_FILTER = 'GET_CURRENT_FILTER';\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n    case TOGGLE_NAV_BAR:\n        return {\n            ...state,\n            showNavBar: action.display\n        }\n    case TOGGLE_NAV_TOGGLE:\n        return {\n            ...state,\n            showNavToggle: action.display\n        }\n    case GET_SELECTED_CUSTOMER:\n        return {\n            ...state,\n            selectedCustomer: action.customer\n        }\n    case GET_SELECTED_VEHICLE:\n        return {\n            ...state,\n            selectedVehicle: action.vehicle\n        }\n    case GET_SELECTED_SERVICE:\n        return {\n            ...state,\n            selectedService: action.service\n        }\n    case GET_SELECTED_SERVICE_MESSAGE:\n        return {\n            ...state,\n            selectedServiceMessage: action.sm\n        }\n    case GET_SELECTED_MESSAGE_TEXT:\n        return {\n            ...state,\n            selectedMessageText: action.text\n        }\n    case TOGGLE_TEMPLATE_OVERLAY:\n        return {\n            ...state,\n            showTemplateOverlay: action.status\n        }\n    case GET_CURRENT_EMAIL_ID:\n        return {\n            ...state,\n            currentEmailId: action.email\n        }\n    case UPDATE_CUSTOMER_SEARCH:\n        return {\n            ...state,\n            search: action.search\n        }\n    case GET_CURRENT_FILTER:\n        return {\n            ...state,\n            currentFilter: action.filter\n        }\n    default:\n        return state;\n    }\n}\n","import {GET_REAL_CUSTOMERS} from '../actions/constants'\n\nconst customerRealReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_REAL_CUSTOMERS:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerRealReducer;","import {GET_VEHICLES} from '../actions/constants'\n\nconst customerVehicleReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_VEHICLES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerVehicleReducer;","import {GET_SERVICES} from '../actions/constants'\n\nconst customerServiceReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_SERVICES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerServiceReducer;","import {GET_ACTIVE_TO_MESSAGES} from '../actions/constants'\n\nconst customerActiveToMessageReducer = (state = [], {type, payload}) => {\n    switch (type) {\n      case GET_ACTIVE_TO_MESSAGES:\n        return payload\n      default:\n        return state\n    }\n}\n\nexport default customerActiveToMessageReducer;","import {combineReducers} from 'redux';\nimport customerReducer from './customer';\nimport auth from './auth';\nimport environment from './environment';\nimport { reducer as reduxForm } from 'redux-form';\nimport customerRealReducer from './realCustomer';\nimport customerVehicleReducer from './customerVehicle';\nimport customerServiceReducer from './customerService';\nimport customerActiveServiceReducer from './customerService';\nimport customerActiveToMessageReducer from './customerToMessage';\n\nexport default combineReducers({\n  environment: environment,\n  customers: customerReducer,\n  activeToMessages: customerActiveToMessageReducer,\n  realCustomers: customerRealReducer,\n  customerVehicles: customerVehicleReducer,\n  customerServices: customerServiceReducer,\n  activeServices: customerActiveServiceReducer,\n  auth: auth,\n  form: reduxForm\n});\n","import {FETCH_USER} from '../actions/constants'\n\nexport default function(state = null, action) {\n    switch (action.type) {\n        case FETCH_USER:\n            return action.payload || false;\n        default:\n            return state;\n    }\n}","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleware = [\n  thunk\n]\nconst withDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(rootReducer, withDevTools(\n  applyMiddleware(...middleware)\n))\n","import { createBrowserHistory, createHashHistory } from 'history';\n\nexport default createBrowserHistory();","import axios from 'axios';\nimport {GET_CUSTOMERS, UPDATE_CUSTOMER, GET_REAL_CUSTOMERS, FETCH_USER, GET_VEHICLES, GET_SERVICES, GET_ACTIVE_SERVICES, GET_ACTIVE_TO_MESSAGES} from './constants';\n\nexport const getCustomers = () => dispatch => {\n  return fetch('/api/customers')\n    .then(res => res.json())\n    .then(customers => dispatch({type: GET_CUSTOMERS, payload: customers}))\n}\n\nexport const getRealCustomers = () => dispatch => {\n  return fetch('/all-customers')\n    .then(res => res.json())\n    .then(realCustomers => dispatch({type: GET_REAL_CUSTOMERS, payload: realCustomers}))\n}\n\nexport const getCustomerVehicles = () => dispatch => {\n  return fetch('/customer-vehicles')\n  .then(res => res.json())\n  .then(customerVehicles => dispatch({type: GET_VEHICLES, payload: customerVehicles}))\n}\n\nexport const getCustomerServices = () => dispatch => {\n  return fetch('/customer/vehicles-services')\n  .then(res => res.json())\n  .then(customerServices => dispatch({type: GET_SERVICES, payload: customerServices}))\n}\n\nexport const getActiveCustomerServices = () => dispatch => {\n  return fetch('/customers/chat/service')\n  .then(res => res.json())\n  .then(customerActiveServices => dispatch({type: GET_ACTIVE_SERVICES, payload: customerActiveServices}))\n}\n\nexport const getCustomerActiveToMessages = () => dispatch => {\n  return fetch('/customers/chat/service/messages')\n  .then(res => res.json())\n  .then(activeToMessages => dispatch({type: GET_ACTIVE_TO_MESSAGES, payload: activeToMessages}))\n}\n\nexport const createNewCustomer = (values) => async dispatch => {\n  const res = await axios.post('/new-customer', values);\n  console.log('Here is the new customer nfndfnsdfnskdhfkshdf')\n  dispatch({type: GET_CUSTOMERS, payload: res.data});\n  window.location.reload();\n}\n\nexport const createNewVehicle = (dataa) => async dispatch => {\n  const res = await axios.post('/new-vehicle', dataa);\n  dispatch({type: GET_CUSTOMERS, payload: res.data});\n}\n\nexport const createNewUser = (values) => async dispatch => {\n  const res = await axios.post('/register', values);\n  console.log('Here is the new user being added.')\n  dispatch({type: UPDATE_CUSTOMER, payload: res.data})\n}\n\nexport const createNewService = (dataa) => async dispatch => {\n  const res = await axios.post('/customers/service/:customerid', dataa);\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const createNewToMessage = (value) => async dispatch => {\n  console.log(value)\n  const res = await axios.post('/customers/chat/service', value);\n  dispatch({type: GET_CUSTOMERS, payload: res.data})\n}\n\nexport const userLogin = (values) => async dispatch => {\n  const res = await axios.post('/login', values);\n  window.location.reload();\n  console.log('Here is the new user being logged in.')\n  dispatch({type: UPDATE_CUSTOMER, payload: res.data})\n}\n\nexport const logoutUser = () => dispatch => {\n  return fetch('/logout');\n};\n\nexport const fetchUser = () => async dispatch => {\n   const res = await axios.get('/current_user')\n    dispatch({ type: FETCH_USER, payload: res });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nclass Customers extends Component {\n\n  static propTypes = {\n    getCustomers: PropTypes.func.isRequired,\n    customers: PropTypes.array.isRequired\n  }\n\n  static defaultProps = {\n    customers: []\n  }\n\n  componentWillMount() {\n    this.props.getCustomers();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h2>Customers</h2>\n        <ul>\n        {this.props.customers.map(customer =>\n          <li key={customer.id}>{customer.firstName} {customer.lastName}</li>\n        )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getCustomers: () => dispatch(getCustomers())\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(Customers);\n","//StyledMediaQuery\n\nconst size = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '834px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px'\n}\n\n\nexport const device = {\n    mobileS: `(min-width: ${size.mobileS})`,\n    mobileM: `(min-width: ${size.mobileM})`,\n    mobileL: `(min-width: ${size.mobileL})`,\n    tablet: `(min-width: ${size.tablet})`,\n    laptop: `(min-width: ${size.laptop})`,\n    laptopL: `(min-width: ${size.laptopL})`,\n    desktop: `(min-width: ${size.desktop})`,\n    desktopL: `(min-width: ${size.desktop})`\n};","export default {\n\tfullWhite: '#ffffff',\n\tlightGray: '#A0A0A0',\n    lighterGray: '#DEDEDE',\n    lightBlue: '#008ECC',\n    darkBlue: '#004A6A',\n    black: '#000000'\n};","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\n\nexport const NewDiv = styled.div`\n\twidth: ${({ width }) => (width || 'auto')};\n\theight: ${({ height }) => (height || 'auto')};\n\tmargin: ${({ margin }) => (margin || 'auto')};\n\tpadding: ${({ padding }) => (padding || '0')};\n\tborder: ${({ border }) => (border || 'none')};\n\tborder-radius: ${({ borderRadius }) => (borderRadius || 'none')};\n\ttext-align: ${({ textAlign }) => (textAlign || 'auto')};\n\tz-index: ${({ zIndex }) => (zIndex || 'auto')};\n\tfloat: ${({ float }) => (float || 'none')};\n    display: ${({ display }) => (display || 'block')};\n    background: ${({ background }) => (background || 'none')};\n`\n\nexport const MainBG = styled.div`\n    width: 100%;\n    background: rgb(0,142,204);\n\tbackground: linear-gradient(90deg, rgba(0,142,204,1) 0%, rgba(89,200,248,1) 100%);\n\theight: 1200px;\n\n    @media ${device.tablet} {\n        \n    }\n`\n\nexport const MainHeading = styled(NewDiv)`\n\t@media ${device.tablet} {\n\t\tmax-width: 500px;\n\t\tmargin: 0 auto;\n\t}\n`","import React from 'react'\nimport styled from 'styled-components'\nimport is from 'styled-is';\n\nimport Colors from '../../constants/colors'\n\nimport { device } from './StyledMediaQuery';\n\n\nconst Button = styled.button`\n    border-radius: ${({ borderRadius }) => (borderRadius || '10px')};\n    color: ${({ color }) => (color || Colors.fullWhite)};\n    border: ${({ border }) => (border || 'none')};;\n    width: ${({ width }) => (width || '150px')};\n    height: ${({ height }) => (height || '40px')};\n    margin ${({ margin }) => (margin || '0')}; \n    padding ${({ padding }) => (padding || '0')}; \n    background-color: ${({ backgroundColor }) => (backgroundColor || 'initial')};\n    display: ${({ display }) => (display || 'flex')};\n    -webkit-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    -moz-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    transition: all ease .3s;\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    :hover{\n        box-shadow: 0 6px 12px 0 rgba(0,0,0,0.20), 0 1px 4px 0 rgba(0,0,0,0.30);\n    }\n    :active{\n        box-shadow: 0 2px 4px 0 rgba(0,0,0,0.20), 0 1px 3px 0 rgba(0,0,0,0.30);\n    }\n\n    ${is('primary')`\n\n    `}\n    ${is('secondary')`\n\n    `}\n    ${is('invalid')`\n        background-color: ${Colors.fullWhite};\n    `}\n    \n    ${is('standardBtn')`\n        width: 156px;\n        height: 40px;\n        border-radius: 20px;\n        background-color: ${Colors.darkBlue};\n    `}\n\n    ${is('largeBtn')`\n        width: 328px;\n        height: 40px;\n        border-radius: 50px;\n        background-color: ${Colors.darkBlue};\n    `}\n\n\n`\nexport default Button\n","import React from 'react'\nimport styled from 'styled-components'\nimport is from 'styled-is';\nimport PropTypes from 'prop-types';\n\nimport Colors from '../../constants/colors'\n\nimport { device } from './StyledMediaQuery';\n\nconst Text = styled.p`\n\tfont-size: 16px;\n\tline-height: ${({ lineHeight }) => (lineHeight || '16px')};\n\tcolor: ${({ color }) => (color || Colors.fullWhite)};\n\tmargin: ${props => (props.margin || '0')};\n\tpadding: ${props => (props.padding || '0')};\n    max-width: ${props => (props.maxWidth || 'none')};\n    font-weight: ${({ fontWeight }) => (fontWeight || 'normal')};\n    font-style: ${({ fontStyle }) => (fontStyle || 'normal ')};\n\tfont-family: ${({ fontFamily }) => (fontFamily || 'Helvetica')};\n\tbackground: ${({ background }) => (background || 'none')};\n\tfloat: ${({ float }) => (float || 'none')};\n\n\t${is('mainHeading')`\n\t\tfont-size: 40px;\n\t\tline-height: 44px;\n\t\tfont-weight: bold;\n\n\t\t@media ${device.mobileS} {\n\t\t\tfont-size: 40px;\n\t\t\tline-height: 44px;\n\t\t}\n    `}\n    \n    ${is('buttonText')`\n        font-size: 22px;\n    `}\n\n    ${is('navItem')`\n        line-height: 70px;\n        font-size: 22px;\n\t`}\n\t\n\t${is('inline')`\n        display: inline-block;\n\t`}\n\t\n\t${is('lblue20')`\n\t\tfont-size: 20px;\n\t\tline-height: 20px;\n\t\tcolor: ${Colors.lightBlue};\n\t`}\n\n\t${is('lblue22')`\n\t\tfont-size: 22px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.lightBlue};\n\t`}\n\t\n\t${is('dblue16')`\n\t\tfont-size: 16px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue22')`\n\t\tfont-size: 22px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue20')`\n\t\tfont-size: 20px;\n\t\tline-height: 20px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('dblue30')`\n\t\tfont-size: 30px;\n\t\tline-height: 26px;\n\t\tcolor: ${Colors.darkBlue};\n\t`}\n\n\t${is('white20')`\n\t\tfont-size: 20px;\n\t\tline-height: 22px;\n\t\tcolor: ${Colors.fullWhite};\n\t`}\n\n\t${is('white35')`\n\t\tfont-size: 35px;\n\t\tline-height: 35px;\n\t\tcolor: ${Colors.fullWhite};\n\t\tfont-style: medium;\n\t`}\n\n\t${is('gray30')`\n\t\tfont-size: 30px;\n\t\tline-height: 30px;\n\t\tcolor: ${Colors.lightGray};\n\t\tfont-style: medium;\n\t`}\n\t\n\t${is('customerIE')`\n\t\tline-height: 40px;\n\t`}\n\n\t${is('borderBottom')`\n\t\tborder-bottom: 1px solid ${Colors.darkBlue};\n\t`}\n\n\t${is('ellipsis')`\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tvertical-align: bottom;\n\t`}\n\n\t${is('acName')`\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tvertical-align: bottom;\n\n\t\t@media ${device.mobileS} {\n\t\t\tmax-width: 100px;\n\t\t\twidth: 100px;\n\t\t}\n\t`}\n\n`\n/**\n\tThis styled case was moved to WelcomeStyledComponents since it's only used in that partifulcar instance and not elsewhere\n\t${is('employeeDetail')`\n\t\tline-height: 30px;\n\t\tfont-size: 16px;\n\t`}\n\n`\n\n**/\n\nText.propTypes = {\n\t/** Color of the text displayed */\n\tcolor: PropTypes.string,\n\t/** Margins that should be added, needs to be in short hand syntax ex margin: top right bottom left; */\n\tmargin: PropTypes.string,\n\t//* Max width that a text can take */\n\tmaxWidth: PropTypes.string,\n\t//* Font weight of the text */\n\tfontWeight: PropTypes.string,\n\t//* Font style of the text; ex: italic, normal & oblique */\n\tfontStyle: PropTypes.string,\n\t//* Font family to be used */\n\tfontFamily: PropTypes.string,\n\t//* if the text should be increased to largeText size */\n\tlargeText: PropTypes.bool,\n\t//* If the text should be reduced to subtext size */\n\tsubtext: PropTypes.bool,\n\t//* If the text should be reudeced to subtitle size */\n\tsubtitle: PropTypes.bool,\n\t//* If the text is supposed to reprsent an error displayed */\n\terror: PropTypes.bool,\n\t//* If the text should be the website defualt gray color */\n\tgray: PropTypes.bool,\n\t//* If the text reprsents a action */\n\tpointer: PropTypes.bool,\n\t//* If the text reprsents a link */\n\tunderline: PropTypes.bool,\n\t//* If the text needs to be placed on same line */\n\tinline: PropTypes.bool,\n}\n\nexport default Text","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors'\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport { NewDiv } from '../Styled/StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\nimport { toggleTemplateOverlay } from '../../../store/reducers/environment';\nimport { createNewCustomer } from '../../../store/actions/customer';\n\n\nconst StyledOverlayContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background: black;\n        opacity: .8;\n        position: fixed;\n        z-index: 1000;\n    }\n`\n\nconst StyledOverlayContentBox = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 500px;\n        height: 500px;\n        background: rgb(89,200,248);\n        background: linear-gradient(180deg, rgba(89,200,248,1) 0%, rgba(255,255,255,1) 100%);\n        position: fixed\n        left: 50%;\n        margin-left: -250px;\n        margin-top: 200px;\n        z-index: 2000;\n    }\n`\n\nconst OverlayContentContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding: 50px 50px 0px 50px;\n    }\n`\n\nconst CustomerInputMessage = styled.input`\n    @media ${device.tablet} {\n        width: 200px;\n        outline: none;\n        border: none;\n        height: 40px;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst TemplateNavContainer = styled.div`\n    @media ${device.tablet} {\n        bottom: 100px;\n        position: absolute;\n        margin-left: auto;\n        margin-right: auto;\n        left: 0;\n        right: 0;\n        width: 325px;\n        display: flex\n        justify-content: space-between;\n        align-items: center;\n    }\n`\n\nclass StyledOverlay extends Component  {\n    constructor() {\n        super()\n        this.state = { \n            customText: '',\n            templateNumber: 0\n        }\n\n            this.forwardTemplate = this.forwardTemplate.bind(this);\n            this.backTemplate = this.backTemplate.bind(this);\n  //      this.handleChange = this.handleChange.bind(this)\n  //      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentDidMount() {\n    }\n\n    handleChange(event) {\n        const input = event.target.value\n        this.setState({ customText: input})\n        console.log(this.state)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n    }\n\n    handleNew = (e, value) => {\n        e.preventDefault()\n        console.log(value)\n    }\n\n    template1 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName}, thank you for bringing in your vehicle.`;\n        const text2 = 'We have now started on your vehicle. You will receive a real time update for each service.';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n    \n    template2 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName},`;\n        const text2 = 'we have completed your';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n    \n    template3 = () => {\n        const { selectedServiceMessage } = this.props\n        console.log(selectedServiceMessage)\n        const text1 = `Hello ${selectedServiceMessage.customerName}, your vehicle is now ready for pickup.`;\n        const text2 = 'We are looking forward to seeing you soon, thank you.';\n        const newText = `${text1} ${text2} ${this.state.customText}`;\n\n\n       const getCorrectMessageText = () => {\n            const { getSelectedMessageText, selectedMessageText, toggleTemplateOverlay } = this.props\n            console.log(newText)\n            getSelectedMessageText(newText);\n            toggleTemplateOverlay(false)\n        }\n\n        return (\n            <NewDiv\n                width=\"90%\"\n                margin=\"0 auto\"\n            >\n                <OverlayContentContainer>\n                    <form onSubmit={(e) => this.handleNew(e, this)}>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text1}\n                    </Text>\n                    <Text\n                        inline\n                        white20\n                        padding=\"10px 0 0 0\"\n                    >\n                        {text2}\n                    </Text>\n                    <NewDiv\n                        padding=\"10px 0 0 0\"\n                    >\n                        <CustomerInputMessage \n                            type=\"text\"\n                            onChange={this.handleChange.bind(this)}\n                            name=\"customMessage\"\n                            value={this.state.customText}\n                        />\n                    </NewDiv>\n                    <NewDiv\n                        padding=\"50px 0 0 0\"\n                    >\n                        <Button\n                            standardBtn\n                            margin=\"0 auto\"\n                            onClick={getCorrectMessageText}\n                        >\n                            <Text\n                            >\n                                Send Message\n                            </Text>\n                        </Button>\n                    </NewDiv>\n                    </form>\n                </OverlayContentContainer>\n            </NewDiv>\n        )\n    }\n\n    forwardTemplate = () => {\n        const messageTemplates = [this.template1, this.template2, this.template3]\n\n        if (this.state.templateNumber < messageTemplates.length - 1) {\n            this.setState({\n                templateNumber: this.state.templateNumber + 1\n            })\n        } else {\n            this.setState({\n                templateNumber: 0\n            })\n        }\n    }\n\n    backTemplate = () => {\n        const messageTemplates = [this.template1, this.template2, this.template3]\n\n        if (this.state.templateNumber > 0) {\n            this.setState({\n                templateNumber: this.state.templateNumber - 1\n            })\n        } else {\n            this.setState({\n                templateNumber: messageTemplates.length - 1\n            })\n        }\n    }\n\n\n    render() {\n        const messageTemplates = [this.template1, this.template2, this.template3]\n        var currentTemplate = messageTemplates[this.state.templateNumber]\n\n        const { getSelectedMessageText } = this.props\n\n        return (\n            <div>\n                <StyledOverlayContainer>\n                </StyledOverlayContainer>\n                <StyledOverlayContentBox>\n                    {currentTemplate()}\n                    <TemplateNavContainer\n                        \n                    >\n                        <Button\n                            onClick={this.backTemplate}\n                            backgroundColor={Colors.fullWhite}\n                            borderRadius='25px'\n                        >\n                            <Text\n                                dblue16\n                            >\n                                Go Back\n                            </Text>\n                        </Button>\n                        <Button\n                            standardBtn\n                            onClick={this.forwardTemplate}\n                        >\n                            <Text\n                                white16\n                            >\n                                Go Forward\n                            </Text>\n                        </Button>\n                    </TemplateNavContainer>\n                </StyledOverlayContentBox>\n           </div>\n          )\n    }\n   \n  }\n\n  export default StyledOverlay;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\n\nconst CustomerCellDiv = styled(NewDiv)`\n    width: 100%\n    height: 80px;\n    background: ${Colors.lighterGray};\n    border-bottom: 1px solid black;\n`\n\nconst CellID = styled(NewDiv)`\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    background: ${Colors.lightBlue};\n    display: inline-block;\n    float: left;\n    margin-left: 20px;\n    margin-top: 15px;\n`\n\nconst CellInfoLeft = styled(NewDiv)`\n    float: left;\n    display: inline-block;\n    margin-left: 100px;\n    margin-top: 10px;\n    height: 60px;\n    width: 275px;\n    text-align: left;\n`\n\nconst CellInfoRight = styled(CellInfoLeft)`\n    margin-left: 50px;\n`\n\nclass CustomerCellRow extends Component {\n\n  componentDidMount() {\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n  openCustomerProfile = () => {\n      const { realCustomers, customerid, selectedCustomer, getSelectedCustomer, history } = this.props\n      history.push(`/customers/${customerid}`);\n    const sc = this.search(customerid, realCustomers);\n    getSelectedCustomer(sc);\n    console.log(selectedCustomer);\n  }\n\n  render() {\n      const { customerid, name, phoneNumber1, email } = this.props\n      console.log(this.props)\n    return (\n      <CustomerCellDiv\n        onClick={() => {this.openCustomerProfile() }}\n      >\n          <CellID>\n          </CellID>\n          <CellInfoLeft>\n              <NewDiv\n                width=\"275px\"\n              >\n                <Text\n                    inline\n                    lblue20\n                >\n                    Customer Name:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                    acName\n                >\n                    {name}\n                </Text>\n              </NewDiv>\n\n              <NewDiv\n                padding=\"15px 0 0 0\"\n              >\n                <Text\n                    inline\n                    lblue20\n                >\n                    Phone #:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                >\n                    {phoneNumber1}\n                </Text>\n              </NewDiv>\n\n          </CellInfoLeft>\n          <CellInfoRight>\n          <NewDiv>\n                <Text\n                    inline\n                    lblue20\n                >\n                    Email:\n                </Text>\n                <Text\n                    inline\n                    padding=\"0 0 0 15px\"\n                    dblue16\n                >\n                    {email}\n                </Text>\n              </NewDiv>\n\n              <NewDiv\n                padding=\"15px 0 0 0\"\n              >\n                <Text\n                    inline\n                    dblue16\n                    borderBottom\n                >\n                    View More\n                </Text>\n              </NewDiv>\n          </CellInfoRight>\n      </CustomerCellDiv>\n    );\n  }\n}\n\nexport default withRouter(CustomerCellRow);","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\nimport Colors from '../../constants/colors';\nimport { NewDiv } from '../Styled/StyledComponents';\n\nconst StyledBackIcon = styled(NewDiv)`\n@media ${device.tablet} {\n    position: absolute;\n    height: 35px;\n    width: 20px;\n    margin-left: 25px;\n    margin-top: 35px;\n    \n    svg {\n        width: 20px;\n        height: 35px;\n    }\n}\n`\nexport default StyledBackIcon;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {getActiveCustomerServices, getCustomerActiveToMessages} from '../../store/actions/customer'\nimport { createNewToMessage } from '../../store/actions/customer'\nimport './customers.css';\nimport StyledOverlay from '../Customer/Styled/StyledOverlay';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport { getSelectedCustomer, getSelectedServiceMessage, getSelectedMessageText, toggleTemplateOverlay } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport templatey from '../../rersources/svg/templatey.svg';\nimport senddb from '../../rersources/svg/senddb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport { isContext } from 'vm';\n\nconst MessengerContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        height: 100vh;\n        position: fixed;\n        left: 0;\n        top: 0;\n        overflow-y: scroll;\n        background: ${Colors.lightBlue};\n        float: left;\n    }\n`\n\nconst MessengerContainerTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        height: 190px;\n        background: ${Colors.lightBlue};\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst MessengerTopText = styled(NewDiv)`\n    @media ${device.tablet} {\n        max-width: 175px;\n        text-align: center;\n        height: auto;\n    }\n`\n\nconst MessageCell = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 90px;\n        background: ${Colors.lightBlue};\n        float: left;\n        border-bottom: 1px solid ${Colors.fullWhite};\n    }\n`\n\nconst MessageCellContentTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 90%;\n        height: 25px;\n        padding: 15px 0px 10px 0px\n    }\n`\n\nconst MessageCellContentBottom = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 90%;\n        height: 40px;\n        padding: 10px 0px\n        text-align: left;\n    }\n`\n\nconst MessengerSearchBar = styled.input`\n    @media ${device.tablet} {\n        width: ${({ width }) => (width|| '100%')};\n        height: 40px;\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n    } \n`\n\nconst MessengerChatContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 511px;\n        height: 100vh;\n        background-color: ${Colors.lighterGray};\n        float: right\n    } \n`\n\nconst MessengerChatTopSec = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 511px;\n        height: 90px;\n        background-color: ${Colors.lighterGray};\n        border-bottom: 1px solid ${Colors.lightBlue};\n        position: fixed;\n        top: 0;\n        text-align: left;\n    } \n`\n\nconst MessengerFixedBottom = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 511px;\n        height: 55px;\n        position: fixed;\n        bottom: 0;\n    } \n`\n\nconst ChatMessagesContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin-top: 100px;\n        background-color: ${Colors.lighterGray};\n    } \n`\n\nconst BottomLeftButton = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        padding: 5px;\n        display: inline-block;\n        float: left;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst BottomRightButton = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        padding: 5px;\n        display: inline-block;\n        float: right;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst BottomMiddleText = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 400px;\n        height: 40px;\n        padding: 5px 0;\n        display: inline-block;\n    } \n`\n\nconst ChatToRow = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100%;\n        height: auto;\n    } \n`\n\nconst ChatMessageToBubble = styled(NewDiv)`\n    @media ${device.tablet} {\n        max-width: 250px;\n        height: auto;\n        padding: 15px 15px;\n        float: right\n        margin-right: 10px;\n        background: ${Colors.lightBlue};\n        border-radius: 30px;\n        margin-bottom: 5px;\n        text-align: left;\n        color: ${Colors.fullWhite};\n    } \n`\n\nclass ChatMessenger extends Component {\n    constructor() {\n        super()\n        this.state = {\n            correctChats: []\n        }\n    }\n  componentDidMount() {\n    const {showNavBar, toggleNavBar, toggleNavToggle, getCustomerActiveToMessages, activeToMessages, selectedServiceMessage } = this.props\n\n    if (showNavBar === 'block') {\n        toggleNavBar('none')\n        toggleNavToggle(barsw);\n    } else {\n        console.log('Not showing....');\n    }\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].serviceid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n  openThisChat = (v) => {\n    const { customerServices, getSelectedServiceMessage, selectedServiceMessage } = this.props\n    const serviceid = v.serviceid\n    const sc = this.search(serviceid, customerServices);\n    getSelectedServiceMessage(sc);\n    console.log(selectedServiceMessage);\n}\n\n    displayOverlay = () => {\n        const { showTemplateOverlay, getSelectedMessageText, selectedMesageText, toggleTemplateOverlay, selectedServiceMessage } = this.props\n        if (showTemplateOverlay === true) {\n            return (\n                <StyledOverlay\n                    getSelectedMessageText={getSelectedMessageText} \n                    selectedMesageText={selectedMesageText}\n                    toggleTemplateOverlay={toggleTemplateOverlay}\n                    selectedServiceMessage={selectedServiceMessage}\n              />\n            )\n        } else {\n            return (\n                <div></div>\n            )\n        }\n    }\n\n  renderChatCells = () => {\n    var activeServiceArray = []\n    const customerServices = this.props.customerServices\n    console.log(customerServices);\n\n    for (var i=0; i < customerServices.length; i++) {\n        if (customerServices[i].status = true) {\n            activeServiceArray.push(customerServices[i])\n        } else {\n            console.log('Not active');\n        }\n        console.log(activeServiceArray)\n    }\n    activeServiceArray.reverse()\n        return activeServiceArray.map((v) => {\n            return (\n                <MessageCell\n                    onClick={() => this.openThisChat(v)}\n                >\n                    <MessageCellContentTop\n                    >\n                        <Text\n                            dblue22\n                            inline\n                            float='left'\n                            maxWidth='210px'\n                        >\n                            {v.customerName}\n                        </Text>\n                        <Text\n                            dblue16\n                            inline\n                            float='right'\n                            maxWidth='80px'\n                        >\n                            /\n                        </Text>\n                    </MessageCellContentTop>\n                    <MessageCellContentBottom>\n                        <Text\n                            dblue16\n                            ellipsis\n                            maxWidth=\"100%\"\n                        >\n                            Hey james we just wanted to reach out and let you know that we have completed the service for your vehicle and it is now ready\n                        </Text>\n                    </MessageCellContentBottom>\n                </MessageCell>\n            )\n        })\n  }\n\n  renderServiceId = () => {\n      const {selectedServiceMessage } = this.props\n      if (selectedServiceMessage) {\n            return (\n                <Text\n                    dblue30\n                    padding=\"10px 0 0 10px\"\n                >\n                    {selectedServiceMessage.serviceid}\n                </Text>\n            )\n      } else {\n          return (\n              <Text\n                dblue30\n                padding=\"10px 0 0 10px\"\n              >\n                  No Service Selected\n              </Text>\n          )\n      }\n  }\n\n  checkMessageFunc = () => {\n    const { activeToMessages, selectedServiceMessage } = this.props\n\n    if (selectedServiceMessage) {\n        for (var i=0; i < activeToMessages.length; i++) {\n            if (activeToMessages[i].serviceid === selectedServiceMessage.serviceid) {\n\n   //     this.setState({ correctChats: [...this.state.correctChats, activeToMessages[i]] })\n   // this.setState(prevState => ({ correctChats: [ activeToMessages[i], ...prevState.correctChats]}))\n\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n    }\n\n  }\n\n  renderChatMessages = () => {\n    const { activeToMessages, selectedServiceMessage } = this.props\n    const displayedToMessages = []\n\n    this.checkMessageFunc()\n\n      if (selectedServiceMessage) {\n        for (var i=0; i < activeToMessages.length; i++) {\n            if (activeToMessages[i].serviceid === selectedServiceMessage.serviceid) {\n                displayedToMessages.push(activeToMessages[i]);\n\n    //this.setState(prevState => ({ correctChats: [ activeToMessages[i], ...prevState.correctChats]}))\n\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n        console.log(this.state);\n\n        return displayedToMessages.map((v) => {\n            return (\n                <ChatToRow>\n                    <ChatMessageToBubble>\n                        {v.textMessage}\n                    </ChatMessageToBubble>\n                </ChatToRow>\n            )\n        })\n      } else {\n          return (\n              <div>There are no messages to display</div>\n          )\n      }\n  }\n\n  toggleTemplateTrue = () => {\n      const { toggleTemplateOverlay } = this.props\n      toggleTemplateOverlay(true);\n  }\n\n  sendNewMessage = (e, value) => {\n      const { selectedMessageText, createNewToMessage, selectedServiceMessage } = this.props\n        e.preventDefault();\n        console.log(value)\n        console.log(selectedMessageText)\n\n        const info =\n            {\n                textMessage: selectedMessageText,\n                phoneNumber: selectedServiceMessage.phoneNumber,\n                serviceid: selectedServiceMessage.serviceid,\n                vehicleid: selectedServiceMessage.vehicleid,\n                user: selectedServiceMessage.user\n            }\n        createNewToMessage(info);\n        this.forceUpdate();\n  }\n\n  handleChange = (e) => {\n      getSelectedMessageText(e.target.value)\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  render() {\n    const { getSelectedMessageText, selectedMessageText, createNewToMessage, selectedServiceMessage } = this.props\n    console.log(createNewToMessage);\n    const newText = \"akjshdkjashdkjahsdkhasdkj\"\n    console.log(this.props)\n\n    return (\n      <div>\n          {this.displayOverlay()}\n        <MessengerContainer>\n            <MessengerContainerTop>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n                <MessengerTopText>\n                    <Text\n                        white35\n                        padding=\"25px 0\"\n                    >\n                        Current Vehicles\n                    </Text>\n                </MessengerTopText>\n                <MessengerSearchBar \n                    width=\"85%\"\n                    placeholder=\"Search...\"\n                />\n            </MessengerContainerTop>\n            {this.renderChatCells()}\n        </MessengerContainer>\n        <MessengerChatContainer>\n            <MessengerChatTopSec>\n                {this.renderServiceId()}\n            </MessengerChatTopSec>\n            <ChatMessagesContainer>\n                {this.renderChatMessages()}\n            </ChatMessagesContainer>\n            <MessengerFixedBottom>\n                <BottomLeftButton\n                    onClick={() => this.toggleTemplateTrue()}\n                >\n                    <SVG src={templatey} />\n                </BottomLeftButton>\n                <BottomMiddleText>\n                    <form method=\"POST\" onChange={this.handleChange} onSubmit={(e) => this.sendNewMessage(e, this)}>\n                        <MessengerSearchBar \n                            width=\"97%\"\n                            placeholder=\"Enter Messege...\"\n                            value={selectedMessageText}\n                            name=\"toMessage\"\n                        />\n                    </form>\n                </BottomMiddleText>\n                <BottomRightButton>\n                    <SVG src={senddb} />\n                </BottomRightButton>\n            </MessengerFixedBottom>\n        </MessengerChatContainer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  realCustomers: state.realCustomers,\n  selectedCustomer: state.environment.selectedCustomer,\n  activeServices: state.activeServices,\n  selectedServiceMessage: state.environment.selectedServiceMessage,\n  selectedMessageText: state.environment.selectedMessageText,\n  showTemplateOverlay: state.environment.showTemplateOverlay,\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getActiveCustomerServices: () => dispatch(getActiveCustomerServices()),\n   getSelectedServiceMessage: (sm) => dispatch(getSelectedServiceMessage(sm)),\n   getSelectedMessageText: (text) => dispatch(getSelectedMessageText(text)),\n   toggleTemplateOverlay: (status) => dispatch(toggleTemplateOverlay(status)),\n   getCustomerActiveToMessages: (status) => dispatch(getCustomerActiveToMessages)\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(ChatMessenger);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\n\nimport { getSelectedCustomer, updateCustomerSearch, getCurrentFilter } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerSearchBar = styled.input`\n    @media ${device.tablet} {\n        width: 100%;\n        height: 100%;\n        background-color: ${Colors.fullWhite};\n        margin: 0 auto;\n        padding-left: 10px;\n        font-size: 16px;\n        border: none;\n        border-radius: 20px;\n\n        :focus {\n          outline: none;\n        }\n    } \n`\n\nconst CustomerSearchSelectSec = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 672px;\n      margin: 0 auto;\n      margin-top: 30px;\n    } \n`\n\nconst SearchNameBox = styled(NewDiv)`\n    @media ${device.tablet} {\n      text-align: left;\n      width: 242px;\n      display: inline-block;\n    }\n`\n\nconst NameSelectDiv = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 242px;\n      height: 40px;\n      border-radius: 20px;\n      overflow: hidden;\n\n      select {\n        outline: none;\n        border: 0px;\n      }\n    } \n`\n\nconst StyledSelect = styled.select`\n    @media ${device.tablet} {\n      width: 100%;\n      height: 100%\n      font-size: 16px;\n      color: ${Colors.lightGray};\n      -webkit-border-top-right-radius: 15px;\n      -webkit-border-bottom-right-radius: 15px;\n      -moz-border-radius-topright: 15px;\n      -moz-border-radius-bottomright: 15px;\n      border-top-right-radius: 15px;\n      border-bottom-right-radius: 15px;\n    }\n`\n\nconst SearchButton = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 156px;\n      height: 40px;\n      display: inline-block;\n      float: right;\n      margin-top: 30.5px;\n    }\n`\n\nconst AllCsBG = styled(NewDiv)`\n    @media ${device.tablet} {\n      width: 100%;\n      background: rgb(0,142,204);\n      background: linear-gradient(90deg, rgba(0,142,204,1) 0%, rgba(89,200,248,1) 100%);\n      height: 300px;\n    }\n`\n\nclass AllCustomers extends Component {\n\n  static propTypes = {\n    getRealCustomers: PropTypes.func.isRequired,\n    realCustomers: PropTypes.array.isRequired\n  }\n\n  static defaultProps = {\n    realCustomers: []\n  }\n\n  componentDidMount() {\n    this.props.getRealCustomers();\n    const {showNavBar, toggleNavBar, toggleNavToggle } = this.props\n    if (showNavBar === 'block') {\n      toggleNavBar('none')\n      toggleNavToggle(barsw);\n    } else {\n      console.log('Not showing....');\n    }\n  }\n\n  searchCustomers = (event) => {\n    const { search, updateCustomerSearch } = this.props\n    var searchText = event.target.value\n    updateCustomerSearch(searchText)\n\n    var s = document.getElementById('search-select');\n    var strSelect = s.options[s.selectedIndex].value\n\n    console.log(strSelect)\n  }\n\n  updateFilter = (event) => {\n    const { getCurrentFilter } = this.props\n    var cFilter = event.target.value\n    getCurrentFilter(cFilter)\n    console.log(cFilter)\n  }\n\n  renderRows = () => {\n    const { realCustomers, selectedCustomer, getSelectedCustomer, history, search, currentFilter } = this.props\n    console.log(selectedCustomer);\n\n    var filteredCustomers;\n\n    if (currentFilter === 'Name') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomers\n      } else {\n        filteredCustomers = realCustomers.filter((item) => {\n          var name = item.name.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = name.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n      \n    } else if (currentFilter === 'Phone Number') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomers\n      } else {\n        filteredCustomers = realCustomers.filter((item) => {\n          var number = item.phoneNumber1.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = number.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n    } else if (currentFilter === 'Email') {\n      if (search === null || search === '') {\n        filteredCustomers = realCustomers\n      } else {\n        filteredCustomers = realCustomers.filter((item) => {\n          var email = item.email.toLowerCase()\n          var filterVal = search.toLowerCase();\n          var n = email.match(filterVal)\n          if (n != null) {\n            return true\n          }\n        })\n      }\n    } else {\n      filteredCustomers = realCustomers\n    }\n\n    return filteredCustomers.map((d) => {\n      console.log(filteredCustomers);\n      console.log(currentFilter)\n      return (\n        <CustomerCellRow\n          key={d.customerid}\n          realCustomers={realCustomers}\n          selectedCustomer={selectedCustomer}\n          getSelectedCustomer={getSelectedCustomer}\n          history={history}\n          {...d}\n        />\n      )\n    })\n  }\n\n  render() {\n    const { realCustomers, updateCustomerSearch, search } = this.props\n\n    return (\n      <div>\n        <AllCsBG>\n          <MainHeading>\n              <Text\n                mainHeading\n                padding=\"30px 0 50px 0\"\n              >\n                All Customers\n              </Text>\n            </MainHeading>\n        <NewDiv\n          width=\"662px\"\n          height=\"40px\"\n        >\n          <CustomerSearchBar \n            placeholder=\"Search\"\n            onChange={this.searchCustomers}\n            value={search}\n          />\n        </NewDiv>\n        <CustomerSearchSelectSec>\n          <SearchNameBox\n            float=\"left\"\n          >\n            <Text\n              padding=\"0 0 15px 0\"\n            >\n              Search By:\n            </Text>\n            <NameSelectDiv>\n              <StyledSelect \n              id=\"search-select\"\n              onChange={this.updateFilter}\n              >\n                <option>Name</option>\n                <option>Phone Number</option>\n                <option>Email</option>\n                <option>Vin Number</option>\n              </StyledSelect>\n            </NameSelectDiv>\n          </SearchNameBox>\n          <SearchNameBox>\n            <Text\n              padding=\"0 0 15px 0\"\n            >\n              Filter By:\n            </Text>\n            <NameSelectDiv>\n              <StyledSelect>\n                <option>A-Z</option>\n              </StyledSelect>\n            </NameSelectDiv>\n          </SearchNameBox>\n          <SearchButton>\n            <Button\n              width=\"100%\"\n              height=\"100%\"\n              borderRadius=\"40px\"\n              standardBtn\n            >\n              <Text\n              >\n                Search\n                </Text>\n            </Button>\n          </SearchButton>\n        </CustomerSearchSelectSec>\n      </AllCsBG>\n        <NewDiv\n          width=\"100vw\"\n        >\n            {this.renderRows()}\n        </NewDiv>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  realCustomers: state.realCustomers,\n  selectedCustomer: state.environment.selectedCustomer,\n  search: state.environment.search,\n  currentFilter: state.environment.currentFilter,\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getRealCustomers: () => dispatch(getRealCustomers()),\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   updateCustomerSearch: (search) => dispatch (updateCustomerSearch(search)),\n   getCurrentFilter: (filter) => dispatch (getCurrentFilter(filter))\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(AllCustomers);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport mailw from '../../rersources/svg/mailw.svg';\nimport carw from '../../rersources/svg/carw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n    }\n`\n\nclass CustomerInfo extends Component {\n  componentDidMount() {\n    const { selectedCustomer, getSelectedCustomer, realCustomers, customerVehicles, getRealCustomers } = this.props\n\n    getRealCustomers()\n\n    const {\n        match: { params: { customerid } }\n    } = this.props\n\n    const sc = this.search(customerid, realCustomers);\n    if (realCustomers.length > 1) {\n        console.log(getSelectedCustomer);\n        getSelectedCustomer(sc);\n        console.log(sc);\n    } else {\n        console.log('error');\n    }\n}\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n    openNewVehicle = () => {\n        const customerid = this.props.selectedCustomer.customerid\n        const history = this.props.history;\n        history.push(`/new-vehicle`);\n    }\n\n    openVehicleDetails = (v) => {\n        const { getSelectedVehicle, selectedVehicle, history } = this.props\n        const vehicleid = v.vehicleid\n        getSelectedVehicle(v)\n        console.log(selectedVehicle)\n        history.push(`/customers/vehicles/${vehicleid}`);\n   //   const sc = this.search(customerid, realCustomers);\n   //   getSelectedCustomer(sc);\n      console.log(v);\n    }\n\n    renderVehicles = () => {\n        const { customerVehicles, selectedCustomer } = this.props\n        const customerid = this.props.selectedCustomer.customerid\n        const newVehicleArray =[]\n         for (var i=0; i < customerVehicles.length; i++) {\n            if (customerVehicles[i].ownerid === customerid) {\n                newVehicleArray.push(customerVehicles[i])\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n        console.log(customerVehicles);\n        console.log(newVehicleArray);\n        const vehicles = newVehicleArray\n        console.log(vehicles);\n        return vehicles.map((v) => {\n            console.log(v);\n            return (\n                <NewDiv>\n                    <Text\n                        dblue22\n                        borderBottom\n                        padding=\"20px 0 5px 0\"\n                        color={Colors.lightBlue}\n                        onClick={() => this.openVehicleDetails(v)}\n                    >\n                        {v.vehicleMake} {v.vehicleModel}\n                    </Text>\n                </NewDiv>\n            )\n        })\n    }\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n    }\n\n  render() {\n    const { realCustomers, selectedCustomer, customerVehicles } = this.props\n    if (realCustomers.length >= 1) {\n        return (\n            <MainBG>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Customer Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                         CUSTOMER NAME:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.name}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.phoneNumber1}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={mailw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          EMAIL:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedCustomer.email}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n              <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    height=\"auto\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                            VEHICLES:\n                      </Text>\n                      {this.renderVehicles()}\n                  </InfoEText>\n              </InfoElement>\n              <NewDiv\n                margin=\"0 auto\"\n                width=\"100%\"\n              >\n                  <Button\n                    largeBtn\n                    margin=\"0 auto\"\n                    backgroundColor={Colors.darkBlue}\n                    onClick={() => this.openNewVehicle()}\n                  >\n                    <Text\n                      white20\n                    >\n                      Add New Vehicle\n                    </Text>\n                  </Button>\n              </NewDiv>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   getRealCustomers: () => dispatch(getRealCustomers())\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer, getSelectedService } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport mailw from '../../rersources/svg/mailw.svg';\nimport carw from '../../rersources/svg/carw.svg';\nimport vinw from '../../rersources/svg/vinw.svg';\nimport licensew from '../../rersources/svg/licensew.svg';\nimport calendarw from '../../rersources/svg/calendarw.svg';\nimport historyw from '../../rersources/svg/historyw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n    }\n`\n\nclass VehicleInfo extends Component {\n  componentDidMount() {\n    const { getSelectedVehicle, customerVehicles, customerServices, selectedVehicle } = this.props\n    const {\n        match: { params: { vehicleid } }\n    } = this.props\n\n    const sc = this.search(vehicleid, customerServices);\n\n    if (customerServices.length > 1) {\n   //     getSelectedVehicle(sc);\n        console.log('selecteing customer')\n    } else {\n        console.log('error');\n    }\n}\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    openServiceScreen = () => {\n        const { getSelectedVehicle, selectedVehicle, history } = this.props\n        const customerid = selectedVehicle.ownerid\n        history.push(`/customers/service/${customerid}`);\n    }\n\n    openServiceDetails = (v) => {\n        const { history, getSelectedService } = this.props\n        const vehicleid = v.vehicleid\n        const serviceid = v.serviceid\n        history.push(`/customers/vehicles/${vehicleid}/${serviceid}`);\n        getSelectedService(v);\n      console.log(v);\n      console.log(getSelectedService);\n    }\n\n    renderServices = () => {\n        const { getSelectedVehicle, customerVehicles, customerServices, selectedVehicle } = this.props\n        const newServiceArray = []\n\n        for (var i=0; i < customerServices.length; i++) {\n            if (customerServices[i].vehicleid === selectedVehicle.vehicleid) {\n                newServiceArray.push(customerServices[i]);\n                console.log('Pushed');\n            }  else {\n                console.log('did not match');\n            }  \n        }\n\n       const services = newServiceArray\n         console.log(services.length);\n        return services.map((v) => {\n            return (\n                <NewDiv>\n                    <Text\n                        white20\n                        padding=\"20px 0 5px 0\"\n                        onClick={() => this.openServiceDetails(v)}\n                    >\n                        Service - {v.vehicleid}\n                    </Text>\n                </NewDiv>\n            )\n        })\n    }\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n      }\n\n  render() {\n    const { selectedVehicle, selectedCustomer } = this.props\n\n    if (selectedVehicle) {\n        return (\n            <MainBG>\n                <StyledBackIcon\n                onClick={() => this.goBack()}\n                >\n                <SVG src={arrowleftw} />\n            </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Vehicle Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          OWNER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.ownerid}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.phoneNumber1}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER 2:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.phoneNumber2}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={calendarw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          YEAR:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleYear}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MAKE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleMake}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={carw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MODEL:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleModel}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={licensew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          LICENSE #:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleLicenseNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={vinw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          VIN #:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedVehicle.vehicleVinNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n              <InfoEIcon>\n                      <SVG src={vinw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    height=\"auto\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                            Service History\n                      </Text>\n                      {this.renderServices()}\n                  </InfoEText>\n              </InfoElement>\n              <NewDiv\n                margin=\"0 auto\"\n                width=\"100%\"\n              >\n                  <Button\n                    largeBtn\n                    margin=\"0 auto\"\n                    backgroundColor={Colors.darkBlue}\n                    onClick={() => this.openServiceScreen()}\n                  >\n                    <Text\n                      white20\n                    >\n                      Service This Vehicle\n                    </Text>\n                  </Button>\n              </NewDiv>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n   getSelectedService: (service) => dispatch(getSelectedService(service))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(VehicleInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport phonew from '../../rersources/svg/phonew.svg';\nimport detailsw from '../../rersources/svg/detailsw.svg';\nimport mileagew from '../../rersources/svg/mileagew.svg';\nimport pencilw from '../../rersources/svg/pencilw.svg';\nimport calendarw from '../../rersources/svg/calendarw.svg';\nimport historyw from '../../rersources/svg/historyw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst CustomerInfoContainer = styled(NewDiv)`\n`\n\nconst InfoElement = styled(NewDiv)`\n    @media ${device.tablet} {\n        margin: 0;\n        margin-left: 80px;\n        margin-bottom: 50px;\n        text-align: left;\n    } \n`\n\nconst InfoEIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n\n        svg {\n            width: 40px;\n            height: 40px;\n        }\n    } \n`\n\nconst InfoEText = styled(NewDiv)`\n    @media ${device.tablet} {\n        display: inline-block;\n        height: ${props => (props.height || '40px')};\n        width: ${props => (props.width || 'auto')}\n        margin-left: ${props => (props.marginLeft || '0px')};\n        vertical-align: top;\n    }\n`\n\nclass ServiceInfo extends Component {\n  componentDidMount() {\n    const { getSelectedVehicle, customerVehicles, customerServices, selectedVehicle } = this.props\n    const {\n        match: { params: { vehicleid } }\n    } = this.props\n}\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].vehicleid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    goBack() {\n        const { history } = this.props\n        history.go(-1)\n    }\n\n  render() {\n    const { selectedVehicle, selectedCustomer, selectedService } = this.props\n    console.log(this.props.state);\n\n    if (selectedService) {\n        return (\n            <MainBG>\n                <StyledBackIcon\n                    onClick={() => this.goBack()}\n                >\n                    <SVG src={arrowleftw} />\n                </StyledBackIcon>\n             <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Service Info\n                </Text>\n              </MainHeading>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={userw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          CUSTOMER NAME\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.customerName}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={calendarw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          DATE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.date}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={phonew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          PHONE NUMBER:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.phoneNumber}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={mileagew} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          MILEAGE:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.mileage}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={pencilw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          REASON FOR VISIT:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.reason}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n              <InfoElement>\n                  <InfoEIcon>\n                      <SVG src={detailsw} />\n                  </InfoEIcon>\n                  <InfoEText\n                    width=\"250px\"\n                    marginLeft=\"50px\"\n                  >\n                      <Text\n                      customerIE\n                      dblue22\n                      >\n                          DETAILS:\n                      </Text>\n                  </InfoEText>\n                  <InfoEText>\n                      <Text\n                      customerIE\n                      white20\n                      >\n                          {selectedService.details}\n                      </Text>\n                  </InfoEText>\n              </InfoElement>\n            </MainBG>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(ServiceInfo));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport checkw from '../../rersources/svg/checkw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text'; \n\nconst ConfirmContentContainer = styled.div`\n    @media ${device.tablet} {\n        padding-top: 300px;\n        width: 500px;\n        text-align: center;\n        margin: 0 auto;\n    }\n`\n\nconst ConfirmIconDiv = styled.div`\n    @media ${device.tablet} {\n        width: 200px;\n        height: 200px;\n        margin: 0 auto;  \n    }\n\n    svg {\n        width: 100%\n        height: 100%\n    }\n`\n\nconst ConfirmContentText = styled.div`\n    @media ${device.tablet} {\n        width: 500px;\n        margin: 0 auto;\n        padding-top: 50px;\n        padding-bottom: 50px;\n    }\n`\n\nconst ConfirmButtons = styled.div`\n    @media ${device.tablet} {\n\n    }\n`\n\nclass CustomerConfirmation extends Component {\n    componentDidMount() {\n    }\n\n    search = (id, myArray) => {\n        for (var i=0; i < myArray.length; i++) {\n            if (myArray[i].customerid === id) {\n                return myArray[i];\n            }\n        }\n    }\n\n    openAllVehicles = () => {\n        console.log('Opening all vehicles')\n    }\n    openAddVehicle = () => {\n        const { realCustomers, selectedCustomer, getSelectedCustomer, history } = this.props\n        const currentCus = realCustomers.slice(-1).pop();\n        getSelectedCustomer(currentCus);\n        history.push(`/new-vehicle`);\n    }\n\n    render() {\n        const { realCustomers, getSelectedCustomer, selectedCustomer } = this.props\n\n        if (realCustomers.length > 0) {\n            console.log(realCustomers)\n            const currentCus = realCustomers.slice(-1).pop()\n            console.log(currentCus);\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                            <ConfirmIconDiv>\n                                <SVG src={checkw} />\n                            </ConfirmIconDiv>\n                            <ConfirmContentText>\n                                <Text\n                                    white20\n                                >\n                                    {currentCus.name}\n                                The new customer has been added successfully. Would you like to add a vehicle for this customer now?\n                                </Text>\n                        </ConfirmContentText>\n                        <ConfirmButtons>\n                                <Button\n                                    display=\"inline-block\"\n                                    margin=\"0px 5px\"\n                                    width=\"156px\"\n                                    height=\"40px\"\n                                    borderRadius=\"25px\"\n                                    backgroundColor={Colors.fullWhite}\n                                    onClick={() => this.openAllVehicles()}\n                                >\n                                    <Text\n                                        dblue20\n                                    >\n                                        Not Now\n                                    </Text>\n                                </Button>\n                                <Button\n                                    display=\"inline-block\"\n                                    standardBtn\n                                    margin=\"0px 5px\"\n                                    onClick={() => this.openAddVehicle()}\n                                >\n                                    <Text\n                                        white20\n                                    >\n                                        Yes\n                                    </Text>\n                                </Button>\n                            </ConfirmButtons>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                           <p>Loading...</p>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    state: state\n  })\n  \n  const dispatchToProps = (dispatch) => ({\n     \n  })\n  \n  export default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerConfirmation));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../constants/colors';\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userw from '../../rersources/svg/userw.svg';\nimport checkw from '../../rersources/svg/checkw.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { NewDiv, MainBG, MainHeading } from './Styled/StyledComponents';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text'; \n\nconst ConfirmContentContainer = styled.div`\n    @media ${device.tablet} {\n        padding-top: 300px;\n        width: 500px;\n        text-align: center;\n        margin: 0 auto;\n    }\n`\n\nconst ConfirmIconDiv = styled.div`\n    @media ${device.tablet} {\n        width: 200px;\n        height: 200px;\n        margin: 0 auto;  \n    }\n\n    svg {\n        width: 100%\n        height: 100%\n    }\n`\n\nconst ConfirmContentText = styled.div`\n    @media ${device.tablet} {\n        width: 500px;\n        margin: 0 auto;\n        padding-top: 50px;\n        padding-bottom: 50px;\n    }\n`\n\nconst ConfirmButtons = styled.div`\n    @media ${device.tablet} {\n\n    }\n`\n\nclass VehicleConfirmation extends Component {\n    componentDidMount() {\n    }\n\n    search = (id, myArray) => {\n        for (var i=0; i < myArray.length; i++) {\n            if (myArray[i].customerid === id) {\n                return myArray[i];\n            }\n        }\n    }\n\n    openAllVehicles = () => {\n        console.log('Opening all vehicles')\n    }\n    openAddService = () => {\n        const { realCustomers, selectedCustomer, getSelectedVehicle, history, customerVehicles, selectedVehicle } = this.props\n        const currentCus = customerVehicles.slice(-1).pop();\n        getSelectedVehicle(currentCus);\n        history.push('/new-service');\n    }\n\n    render() {\n        const { realCustomers, getSelectedCustomer, selectedCustomer } = this.props\n\n        if (realCustomers.length > 0) {\n            console.log(realCustomers)\n            const currentCus = realCustomers.slice(-1).pop()\n            console.log(currentCus);\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                            <ConfirmIconDiv>\n                                <SVG src={checkw} />\n                            </ConfirmIconDiv>\n                            <ConfirmContentText>\n                                <Text\n                                    white20\n                                >\n                                The new vehicle has been added successfully. Would you like to service this customer now?\n                                </Text>\n                        </ConfirmContentText>\n                        <ConfirmButtons>\n                                <Button\n                                    display=\"inline-block\"\n                                    margin=\"0px 5px\"\n                                    width=\"156px\"\n                                    height=\"40px\"\n                                    borderRadius=\"25px\"\n                                    backgroundColor={Colors.fullWhite}\n                                    onClick={() => this.openAllVehicles()}\n                                >\n                                    <Text\n                                        dblue20\n                                    >\n                                        Not Now\n                                    </Text>\n                                </Button>\n                                <Button\n                                    display=\"inline-block\"\n                                    standardBtn\n                                    margin=\"0px 5px\"\n                                    onClick={() => this.openAddService()}\n                                >\n                                    <Text\n                                        white20\n                                    >\n                                        Yes\n                                    </Text>\n                                </Button>\n                            </ConfirmButtons>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <MainBG>\n                        <ConfirmContentContainer>\n                           <p>Loading...</p>\n                        </ConfirmContentContainer>\n                    </MainBG>\n                </div>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    state: state\n  })\n  \n  const dispatchToProps = (dispatch) => ({\n     \n  })\n  \n  export default withRouter(connect(mapStateToProps, dispatchToProps)(VehicleConfirmation));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {userLogin} from '../../store/actions/customer'\nimport './customers.css';\n\nclass UserLogin extends Component {\n\n  static propTypes = {\n    userLogin: PropTypes.func.isRequired,\n    resSend: PropTypes.string.isRequired\n  }\n\n  static defaultProps = {\n    resSend: ''\n  }\n\n  componentWillMount() {\n    this.props.userLogin();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h2>Res Send User Login</h2>\n        <p>{this.props.resSend}</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  resSend: state.resSend\n})\n\nconst dispatchToProps = (dispatch) => ({\n   userLogin: () => dispatch(userLogin())\n})\n\nexport default connect(mapStateToProps, dispatchToProps)(UserLogin);","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Colors from '../constants/colors';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\n//import ReactSVG from 'react-svg';\nimport SVG from 'react-inlinesvg';\n\nconst FormField = styled.input`\n    -webkit-appearance: none;\n    background-color: ${Colors.fullWhite};\n    outline: none;\n    border: none;\n    border-radius: 0px 10px 10px 0px;\n    padding: 0;\n    padding-left: 10px;\n    font-size: 16px;\n\n    @media ${device.tablet} {\n        width: ${({ width }) => (width || '345px')};\n        height: 50px;\n        float: right;\n        margin: 0 auto;\n    }\n`\n\nconst FormFieldContainer = styled.div`\n\n    @media ${device.tablet} {\n        width: ${({ width }) => (width || '417px')};\n        height: 50px;\n        margin-bottom: 50px;\n    }\n\n    border-radius: 10px;\n    -webkit-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    -moz-box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n    box-shadow: 0px 7px 6px 1px rgba(0,0,0,0.2);\n`\n\nconst FormFieldLeft = styled.div`\n    border-radius: 10px 0px 0px 10px;\n    width: 61px;\n    height: 50px;\n    background-color: ${Colors.fullWhite};\n    float: left;\n`\n\nconst FormFieldSplit = styled.div`\n    width: 1px;\n    height: 50px;\n    background: ${Colors.lightBlue};\n    float: left;\n`\n\nconst FormIconContainer = styled(NewDiv)`\n    width: 33px;\n    height: 33px;\n    margin: 0 auto;\n    margin-top: 8px;\n\n    svg {\n        width: 33px;\n        height: 33px;\n    }\n`\n\nexport default ({ input, label, svg, placeholder, defaultValue, fieldWidth, containerWidth, meta: { error, touched } }) => {\n    console.log(defaultValue);\n    return (\n        <FormFieldContainer\n            width={containerWidth}\n        >\n                <FormFieldLeft>\n                    <FormIconContainer\n                    >\n                        <SVG src={svg} />\n                    </FormIconContainer>\n                </FormFieldLeft>\n                <FormFieldSplit />\n                <FormField {...input} placeholder={placeholder} defaultValue={defaultValue} width={fieldWidth} /> <br/>\n                {touched && error}\n        </FormFieldContainer>\n    )\n}\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport barsw from '../../rersources/svg/barsw.svg';\nimport emailb from '../../rersources/svg/emailb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport SVG from 'react-inlinesvg';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport StyledBackIcon from './Styled/StyledBackIcon';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst FIELDS = [\n  {\n    label: 'Customer Name', name: 'cname', svg: userb, placeholder: 'Enter Customer Name...', noValueError: 'You must provide a customer name'\n  },\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter Phone Number...', noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Secondary Phone Number', name: 'pnumber2', svg: phoneb, placeholder: 'Enter Secondary Phone Number', noValueError: 'You must provide a secondary phone number'\n  },\n  {\n    label: 'Customer Email', name: 'email', svg: emailb, placeholder: 'Enter Email...', noValueError: 'You must provide a email address'\n  },\n]\n\nclass AddCustomer extends Component {\n  componentDidMount() {\n    const {showNavBar, toggleNavBar, toggleNavToggle } = this.props\n    if (showNavBar === 'block') {\n      toggleNavBar('none')\n      toggleNavToggle(barsw);\n    } else {\n      console.log('Not showing....');\n    }\n  }\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          type=\"text\" \n          name={field.name} \n          placeholder={field.placeholder}\n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  addNewCustomer = (values) => {\n      const { createNewCustomer, history, realCustomers } = this.props\n      console.log(realCustomers);\n      createNewCustomer(values);\n      history.push('/new-customer/confirmation');\n      window.location.reload();\n  }\n\n  render() {\n    const { createNewCustomer } = this.props\n    console.log(createNewCustomer);\n    return (\n      <div>\n          <MainBG>\n            <StyledBackIcon\n                onClick={() => this.goBack()}\n            >\n                <SVG src={arrowleftw} />\n            </StyledBackIcon>\n              <MainHeading>\n                <Text\n                  mainHeading\n                  padding=\"30px 0 50px 0\"\n                >\n                  Enter The Fields Below\n                </Text>\n              </MainHeading>\n            <FormContainer\n            >\n                <form onSubmit={this.props.handleSubmit(values => this.addNewCustomer(values))}>\n                  {this.renderFields()}\n                  <Button\n                    standardBtn\n                    margin=\"0 auto\"\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Submit\n                    </Text>\n                  </Button>\n                </form>\n            </FormContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values, props) => {\n  //const { realCustomers } = this.props\n  const errors = {};\n\n  console.log(values);\n  console.log(props);\n  console.log(values.email);\n  console.log(props.realCustomers);\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n  });\n\n  for (var i=0; i < props.realCustomers.length; i++) {\n    if (values.email == props.realCustomers[i].email) {\n      errors.email = 'This email is already in use'\n      console.log('ERROR');\n    } else {\n      console.log('SUCCESS');\n    }\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newCustomerForm'\n})(AddCustomer)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport hashb from '../../rersources/svg/hashb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst FIELDS = [\n  {\n    label: 'Name', name: 'name', svg: userb, placeholder: 'Enter name...', noValueError: 'You must provide a name'\n  },\n  {\n    label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter vehicle mileage...', noValueError: 'You must provide a value for mileage'\n  },\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...',  noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Reason For Visit', name: 'reason', svg: pencilb, placeholder: 'Enter reason...', noValueError: 'You must provide a reason for visit'\n  },\n  {\n    label: 'Tag Number', name: 'tnumber', svg: hashb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number'\n  }\n]\n\nclass AddService extends Component {\n\n  renderFields = () => {\n    const selectedCustomer = this.props.selectedCustomer\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          type=\"text\" \n          name={field.name} \n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n          placeholder={field.placeholder}\n          svg={field.svg}\n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history } = this.props\n    history.go(-1)\n  }\n\n  render() {\n    const { createNewService, selectedCustomer, selectedVehicle } = this.props\n    console.log(this.props);\n    console.log(selectedCustomer);\n    console.log(selectedVehicle);\n    const props = this.props\n\n    const createBody = (values, props) => {\n      const history = this.props.history;\n        let dataa = {\n          values: values,\n          props: props\n        }\n        createNewService(dataa);\n        history.push('/customers/chat/service')\n        window.location.reload();\n    }\n\n    return (\n      <div>\n      <MainBG>\n        <StyledBackIcon\n            onClick={() => this.goBack()}\n        >\n           <SVG src={arrowleftw} />\n        </StyledBackIcon>\n          <MainHeading>\n            <Text\n              mainHeading\n              padding=\"30px 0 50px 0\"\n            >\n              Enter The Fields Below\n            </Text>\n          </MainHeading>\n        <FormContainer\n        >\n            <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n              {this.renderFields()}\n              <Button\n                standardBtn\n                margin=\"0 auto\"\n                type=\"submit\"\n              >\n                <Text\n                  buttonText\n                >\n                  Submit\n                </Text>\n              </Button>\n            </form>\n        </FormContainer>\n      </MainBG>\n  </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newServiceForm'\n})(AddService)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewCustomer, createNewVehicle } from '../../store/actions/customer'\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport phoneb from '../../rersources/svg/phoneb.svg';\nimport calendarb from '../../rersources/svg/calendarb.svg';\nimport carb from '../../rersources/svg/carb.svg';\nimport licenseb from '../../rersources/svg/licenseb.svg';\nimport vinb from '../../rersources/svg/vinb.svg';\nimport pencilb from '../../rersources/svg/pencilb.svg';\nimport mileageb from '../../rersources/svg/mileageb.svg';\nimport hashb from '../../rersources/svg/hashb.svg';\nimport arrowleftw from '../../rersources/svg/arrowleftw.svg';\nimport StyledBackIcon from './Styled/StyledBackIcon';\nimport { MainBG, NewDiv, MainHeading } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst FormContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n          width: 500px;\n          height: 700px;\n          margin: 0 auto;  \n    }\n`\n\nconst FIELDS = [\n  {\n    label: 'Phone Number', name: 'pnumber', svg: phoneb, placeholder: 'Enter phone number...', noValueError: 'You must provide a phone number'\n  },\n  {\n    label: 'Secondary Phone Number', name: 'pnumber2', svg: phoneb, placeholder: 'Enter secondary phone number...',  noValueError: 'You must provide a secondary phone number'\n  },\n  {\n    label: 'Vehicle Year', name: 'vyear', svg: calendarb, placeholder: 'Enter vehicle year...', noValueError: 'You must provide a vehicle year'\n  },\n  {\n    label: 'Vehicle Make', name: 'vmake', svg: carb, placeholder: 'Enter vehicle make...', noValueError: 'You must provide a vehicle make'\n  },\n  {\n    label: 'Vehicle Model', name: 'vmodel', svg: carb, placeholder: 'Enter vehicle model..', noValueError: 'You must provide a vehicle model'\n  },\n  {\n    label: 'License Plate Number', name: 'lpnumber', svg: licenseb, placeholder: 'Enter license plate number...', noValueError: 'You must provide a license plate number'\n  },\n  {\n    label: 'Vehicle Vin Number', name: 'vnumber', svg: vinb, placeholder: 'Enter vehicle vin number...', noValueError: 'You must provide a vin number'\n  },\n  {\n    label: 'Mileage', name: 'mileage', svg: mileageb, placeholder: 'Enter mileage...', noValueError: 'You must provide the mileage'\n  },\n  {\n    label: 'Tag Number', name: 'tnumber', svg: hashb, placeholder: 'Enter tag number...', noValueError: 'You must provide a tag number'\n  },\n]\n\nclass AddVehicle extends Component {\n  componentDidMount() {\n    const { getSelectedCustomer, realCustomers } = this.props\n\n  }\n\n  renderFields = () => {\n    const selectedCustomer = this.props.selectedCustomer\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          type=\"text\" \n          name={field.name} \n          component={TextField} \n          fieldWidth=\"428px\"\n          containerWidth=\"500px\" \n          placeholder={field.placeholder}\n          svg={field.svg}\n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  goBack() {\n    const { history, selectedCustomer } = this.props\n    console.log(this.props)\n    console.log(`Here is the selected customer ${selectedCustomer}`);\n    history.go(-1)\n  }\n\n  render() {\n    const { createNewVehicle, selectedCustomer } = this.props\n    console.log(this.props);\n    console.log(selectedCustomer);\n    const props = this.props\n\n    const createBody = (values, props) => {\n      const history = props.history\n        let dataa = {\n          values: values,\n          props: props\n        }\n        createNewVehicle(dataa);\n        console.log(history)\n        history.push('/new-vehicle/confirmation');\n        window.location.reload();\n    }\n\n    return (\n      <div>\n      <MainBG>\n        <StyledBackIcon\n            onClick={() => this.goBack()}\n        >\n           <SVG src={arrowleftw} />\n        </StyledBackIcon>\n          <MainHeading>\n            <Text\n              mainHeading\n              padding=\"30px 0 50px 0\"\n            >\n              Enter The Fields Below\n            </Text>\n          </MainHeading>\n        <FormContainer\n        >\n            <form onSubmit={this.props.handleSubmit(values => createBody(values, props))}>\n              {this.renderFields()}\n              <Button\n                standardBtn\n                margin=\"0 auto\"\n                type=\"submit\"\n              >\n                <Text\n                  buttonText\n                >\n                  Submit\n                </Text>\n              </Button>\n            </form>\n        </FormContainer>\n      </MainBG>\n  </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newVehicleForm'\n})(AddVehicle)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewUser } from '../../store/actions/customer';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport Colors from '../constants/colors';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport { MainBG, NewDiv } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\nconst RegisterContainer = styled(NewDiv)`\n  @media ${device.tablet} {\n    width: 418px;\n    height: 700px;\n    margin: 0 auto;\n  } \n\n`\n\n\nconst FIELDS = [\n  {\n    label: 'Email', name: 'email', svg: userb, placeholder: 'Enter Email....', noValueError: 'You must provide a email address'\n  },\n  {\n    label: 'Password', name: 'password', svg: lockb, placeholder: 'Enter Password....', noValueError: 'You must provide a password'\n  },\n  {\n    label: 'Confirm Password', name: 'password2', svg: lockb, placeholder: 'Confirm Password....', noValueError: 'Please confirm your password'\n  },\n  {\n    label: 'Company Name', name: 'companyName', svg: lockb, placeholder: 'Enter Company Name....', noValueError: 'Please enter a name for your company'\n  }\n]\n\nclass RegisterUser extends Component {\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          placeholder={field.placeholder}\n          type=\"text\" \n          name={field.name} \n          component={TextField}\n          fieldWidth=\"345px\"\n          containerWidth=\"417px\" \n      />\n      )  \n    });\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  handleNewUser = (values) => {\n    const { createNewUser, history } = this.props\n    createNewUser(values);\n  //  history.push('/login')\n  }\n\n  render() {\n    const { createNewUser } = this.props\n    return (\n      <div>\n          <MainBG>\n            <RegisterContainer\n            >\n              <NewDiv\n                padding=\"200px 0 56px 0\"\n              >\n                  <img src = { mainLogo } />\n                </NewDiv>\n                <form onSubmit={this.props.handleSubmit(values => this.handleNewUser(values))}>\n                  {this.renderFields()}\n                  <Button\n                    width=\"416px\"\n                    height=\"50px\"\n                    backgroundColor={Colors.darkBlue}\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Sign Up\n                    </Text>\n                  </Button>\n                </form>\n            </RegisterContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n    console.log(values);\n     if (values.password != values.password2) {\n         errors.password2 = 'Passwords do not match'\n    };\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'newUserForm'\n})(RegisterUser)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNewUser } from '../../store/actions/customer';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport lockb from '../../rersources/svg/lockb.svg';\nimport userb from '../../rersources/svg/userb.svg';\nimport { MainBG, NewDiv } from './Styled/StyledComponents';\nimport mainLogo from '../../rersources/mainLogo.png';\nimport { device } from './Styled/StyledMediaQuery';\n\nimport TextField from './TextField';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\nimport colors from '../constants/colors';\n\nconst LoginContainer = styled(NewDiv)`\n  @media ${device.tablet} {\n    width: 418px;\n    height: 700px;\n    margin: 0 auto;\n  } \n\n`\n\nconst FIELDS = [\n  {\n    label: 'Email', name: 'email', placeholder: 'Enter Email....', svg: userb, noValueError: 'You must provide a email address'\n  },\n  {\n    label: 'Password', name: 'password', placeholder: 'Enter Password....', svg: lockb, noValueError: 'You must provide a password'\n  }\n]\n\nclass LoginUser extends Component {\n\n  renderFields = () => {\n    return FIELDS.map(field => {\n      return(\n        <Field \n          key={field.name}\n          label={field.label} \n          svg={field.svg}\n          type=\"text\" \n          name={field.name} \n          placeholder={field.placeholder}\n          component={TextField} \n      />\n      )  \n    });\n  }\n\n  handleLoginSubmit = (values) => {\n    const { userLogin, history } = this.props\n    userLogin(values);\n   // window.location.reload()\n  }\n\n  handleInputChange = () => {\n      console.log('The input field is being changed.')\n  }\n\n  render() {\n    const { userLogin, logoutUser } = this.props\n    return (\n      <div>\n          <MainBG>\n            <LoginContainer\n            >\n              <NewDiv\n                padding=\"200px 0 56px 0\"\n              >\n                  <img src = { mainLogo } />\n                </NewDiv>\n                <form onSubmit={this.props.handleSubmit(values => this.handleLoginSubmit(values))}>\n                  {this.renderFields()}\n                  <Button\n                    width=\"416px\"\n                    height=\"50px\"\n                    backgroundColor={colors.darkBlue}\n                    type=\"submit\"\n                  >\n                    <Text\n                      buttonText\n                    >\n                      Sign In\n                    </Text>\n                  </Button>\n                </form>\n            </LoginContainer>\n          </MainBG>\n      </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n\n  FIELDS.forEach(({ name, noValueError }) => {\n    if (!values[name]) {\n      errors[name] = noValueError;\n    }\n    console.log(values);\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'userLoginForm'\n})(LoginUser)","import React, { Component, Fragment } from 'react'\nimport styled from 'styled-components';\nimport { device } from '../Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport Colors from '../../constants/colors';\nimport userb from '../../../rersources/svg/userb.svg';\nimport lockb from '../../../rersources/svg/lockb.svg';\nimport plusw from '../../../rersources/svg/plusw.svg';\nimport pointw from '../../../rersources/svg/pointw.svg';\nimport phonebookw from '../../../rersources/svg/phonebookw.svg';\nimport settingsw from '../../../rersources/svg/settingsw.svg';\nimport returnw from '../../../rersources/svg/returnw.svg';\nimport barsw from '../../../rersources/svg/barsw.svg';\nimport { NewDiv } from '../Styled/StyledComponents';\nimport Button from './Button';\nimport Text from './Text';\n\nexport const MainNavContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        background-color: ${Colors.black};\n        width: 100%;\n        opacity: .8;\n        z-index: 90;\n        display: ${({ display }) => (display || 'none')};\n        position: fixed;\n        top: 0;\n        bottom: 0;\n    }\n`\n\n\nexport const HeaderContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        background-color: ${Colors.lightBlue};\n        float: left;\n        position: fixed;\n        height: 100vh;\n        z-index: 100;\n        display: ${({ display }) => (display || 'none')};\n        border-bottom-right-radius: 20px;\n        border-top-right-radius: 20px;\n    } \n`\n\nexport const HeaderTop = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 323px;\n        height: 207px;\n        padding-top: 15px;\n        background-color: ${Colors.fullWhite};\n        border-top-right-radius: 20px;\n    } \n`\n\nexport const HeaderTopImg = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 100px;\n        height: 100px;\n        border-radius: 50px;\n        margin: 0 auto;\n        background: ${Colors.darkBlue};\n    }\n`\n\nexport const HeaderTopText = styled(NewDiv)`\n    @media ${device.tablet} {\n        width: 92%;\n        margin: 0 auto;\n        margin-top: 15px;\n    }\n`\n\nexport const HeaderLIContainer = styled(NewDiv)`\n    @media ${device.tablet} {\n        height: 70px;\n        width: 100%\n        border-bottom: 1px solid white;\n        background: ${Colors.lightBlue};\n    }\n`\n\nexport const LILeft = styled(NewDiv)`\n    @media ${device.tablet} {\n        float: left;\n        width: 80px;\n        height: 70px;\n    }\n`\n\nexport const LIRight = styled(NewDiv)`\n    @media ${device.tablet} {\n        float: right;\n        width: 243px;\n        height: 70px;\n        text-align: left;\n        line-height: 70px;\n    }\n`\n\nexport const NavLIIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        padding-top: 20px;\n        width: 30px;\n        height: 30px;\n        margin: 0 auto;\n\n       svg {\n           width: 30px;\n           height: 30px;\n       } \n    }\n`\n\nexport const NavToggleIcon = styled(NewDiv)`\n    @media ${device.tablet} {\n        height: 50px;\n        width: 50px;\n        position: fixed;\n        bottom: 35px;\n        left: 25px;\n        display: ${({ display }) => (display || 'none')};\n        z-index: 999;\n\n        svg {\n            height: 50px;\n            width: 50px;\n        }\n    }\n`\n\nclass StyledNavBar extends Component  {\n\n    handleLogout = () => {\n        const { logoutUser, history } = this.props\n        console.log('Handling logout....')\n        logoutUser();\n        history.push('/')\n        window.location.reload()\n    }\n\n\n    render() {\n        const { renderContent, toggleNavBar, toggleNavToggle, fetchUser, showNavBar, showNavToggle } = this.props\n        console.log(showNavToggle);\n        console.log(showNavBar);\n        const toggleNav = () => {\n            if (showNavBar === 'block') {\n                toggleNavBar('none')\n                toggleNavToggle(barsw);\n            } else {\n                toggleNavBar('block');\n                toggleNavToggle(returnw);\n            }\n        }\n        return (\n          <div>\n              <MainNavContainer \n                display={showNavBar}\n              />\n            <HeaderContainer\n                display={showNavBar}\n            >\n                <HeaderTop>\n                      <HeaderTopImg />\n                      <HeaderTopText>\n                          <Text\n                            lblue22\n                            padding=\"10px 0 0 0\"\n                            maxWidth=\"300px\"\n                          >\n                              Haron Jaguar Land Rover\n                          </Text>\n                          <Text\n                            gray30\n                            padding=\"10px 0 0 0\"\n                          >\n                              Welcome\n                          </Text>\n                      </HeaderTopText>\n                </HeaderTop>\n                <Link to ='/new-customer'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={plusw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              New Customer\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/customers/chat/service'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={pointw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              Current Vehicles\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/all-customers'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={phonebookw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              All Customers\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                <Link to ='/settings'>\n                  <HeaderLIContainer>\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={settingsw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              Settings\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n                </Link>\n                  <HeaderLIContainer\n                    onClick={this.handleLogout}\n                  >\n                      <LILeft>\n                          <NavLIIcon>\n                              <SVG src={settingsw} />\n                          </NavLIIcon>\n                      </LILeft>\n                      <LIRight>\n                          <Text\n                              navItem\n                          >\n                              {renderContent()}\n                          </Text>\n                      </LIRight>\n                  </HeaderLIContainer>\n            </HeaderContainer>\n             <NavToggleIcon\n             onClick={toggleNav}\n             display='block'\n           >\n               <SVG src={showNavToggle} />\n           </NavToggleIcon>\n           </div>\n          )\n    }\n   \n  }\n\n  export default withRouter(StyledNavBar);\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport {connect } from 'react-redux';\nimport {getRealCustomers} from '../../store/actions/customer'\nimport './customers.css';\n\nimport styled from 'styled-components';\nimport { device } from './Styled/StyledMediaQuery';\nimport { BrowserRouter as Router, Route, Link, withRouter } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\n\nimport { getSelectedCustomer } from '../../store/reducers/environment';\nimport CustomerCellRow from './CustomerCellRow';\nimport userb from '../../rersources/svg/userb.svg';\nimport lockb from '../../rersources/svg/lockb.svg';\nimport { NewDiv } from './Styled/StyledComponents';\nimport Button from './Styled/Button';\nimport Text from './Styled/Text';\n\n\nclass CustomerService extends Component {\n\n  componentDidMount() {\n  }\n\n  search = (id, myArray) => {\n    for (var i=0; i < myArray.length; i++) {\n        if (myArray[i].customerid === id) {\n            return myArray[i];\n        }\n    }\n}\n\n    openServiceCustomer = () => {\n        const { history } = this.props\n        history.push(`/new-vehicle`);\n    }\n\n  render() {\n    const realCustomers = this.props.state.realCustomers\n    const selectedCustomer = this.props.selectedCustomer\n\n    console.log(realCustomers.length)\n    console.log(selectedCustomer);\n    console.log(this.props);\n\n    if (realCustomers.length >= 1) {\n        return (\n            <div>\n              <h2>Customer Service</h2>\n              <Button onClick={() => this.openServiceCustomer()}>\n                  Add Vehicle\n              </Button>\n            </div>\n          );\n    } else {\n        return (\n            <div>\n                Loading.....\n            </div>\n        )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state: state\n})\n\nconst dispatchToProps = (dispatch) => ({\n   getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer))\n})\n\nexport default withRouter(connect(mapStateToProps, dispatchToProps)(CustomerService));","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Provider } from 'react-redux'\nimport logo from './logo.svg'\nimport mainLogo from './rersources/mainLogo.png';\nimport './App.css';\nimport store from './store';\nimport history from './history';\nimport Customers from './components/Customer/customers';\nimport ChatMessenger from './components/Customer/ChatMessenger';\nimport AllCustomers from './components/Customer/AllCustomers';\nimport CustomerInfo from './components/Customer/CustomerInfo';\nimport VehicleInfo from './components/Customer/VehicleInfo';\nimport ServiceInfo from './components/Customer/ServiceInfo';\nimport CustomerConfirmation from './components/Customer/CustomerConfirmation';\nimport VehicleConfirmation from './components/Customer/VehicleConfirmation';\nimport UserLogin from './components/Customer/userLogin';\nimport AddCustomer from './components/Customer/AddCustomer';\nimport AddService from './components/Customer/AddService';\nimport AddVehicle from './components/Customer/AddVehicle';\nimport RegisterUser from './components/Customer/RegisterUser';\nimport LoginUser from './components/Customer/LoginUser';\nimport StyledNavBar from './components/Customer/Styled/StyledNavBar';\nimport CustomerService from './components/Customer/CustomerService';\nimport { connect } from 'react-redux';\n\nimport { createNewCustomer, createNewUser, createNewVehicle, userLogin, logoutUser, fetchUser, getRealCustomers, getCustomerVehicles, createNewService, getCustomerServices, createNewToMessage, getCustomerActiveToMessages } from './store/actions/customer';\nimport { toggleNavBar, toggleNavToggle, getSelectedCustomer, getSelectedVehicle, getCurrentEmailId } from './store/reducers/environment';\n\nimport styled from 'styled-components';\n\nimport { BrowserRouter as Router, Route, Link, withRouter, Switch } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\n\nconst Code = () => {\n  return (\n    <div>\n      Code Code Code\n    </div>\n  )\n}\n\nclass App extends Component {\n\n  componentDidMount() {\n    const { fetchUser, getRealCustomers, getCustomerVehicles, getCustomerServices, getCustomerActiveToMessages } = this.props;\n    getRealCustomers();\n    getCustomerVehicles();\n    getCustomerServices();\n    fetchUser();\n    getCustomerActiveToMessages();\n  }\n\n  renderContent = () => {\n    const props = this.props\n    const auth = this.props.auth\n    const data = props && props.auth ? props.auth.data : null;\n    switch (data) {\n      case null:\n        return 'Still deciding';\n      case false:\n        return 'Login';\n      case '':\n        return 'Login';\n      default:\n        return 'Logout';\n    }\n  }\n\n  renderCorrectPage = () => {\n    const props = this.props\n    const auth = this.props.auth\n    const data = props && props.auth ? props.auth.data: null\n\n    const userLogin = this.props.userLogin;\n    const logoutUser = this.props.logoutUser;\n    const getSelectedCustomer = this.props.getSelectedCustomer;\n    const environment = this.props.environment;\n\n    switch (data) {\n      case null:\n        console.log('null');\n        return (\n          <LoginUser\n           userLogin={userLogin}\n            logoutUser={logoutUser}\n          />\n        )\n      case false:\n          console.log('false');\n          return (\n            <LoginUser\n              userLogin={userLogin}\n              logoutUser={logoutUser}\n              history={history}\n           />\n        )\n      case '':\n          console.log('empty');\n          return (\n            <LoginUser\n              userLogin={userLogin}\n              logoutUser={logoutUser}\n              history={history}\n           />\n        )\n      default:\n          console.log('default');\n        return (\n            <AllCustomers\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              history={history}\n             />\n        )\n\n    }\n  }\n\n  render () {\n    const createNewCustomer = this.props.createNewCustomer;\n    const createNewUser = this.props.createNewUser;\n    const createNewVehicle = this.props.createNewVehicle;\n    const createNewService = this.props.createNewService;\n    const createNewToMessage = this.props.createNewToMessage;\n    const userLogin = this.props.userLogin;\n    const logoutUser = this.props.logoutUser;\n    const toggleNavBar = this.props.toggleNavBar;\n    const toggleNavToggle = this.props.toggleNavToggle;\n    const getSelectedCustomer = this.props.getSelectedCustomer;\n    const getSelectedVehicle = this.props.getSelectedVehicle;\n    const getCurrentEmailId = this.props.getCurrentEmailId\n    const environment = this.props.environment;\n    const realCustomers = this.props.state.realCustomers;\n    const customerVehicles = this.props.state.customerVehicles;\n    const customerServices = this.props.state.customerServices;\n    const activeToMessages = this.props.state.activeToMessages;\n;\n    console.log(this.props);\n    console.log(this.props.environment);\n    console.log(realCustomers);\n    console.log(customerVehicles);\n    console.log(customerServices);\n    console.log(activeToMessages)\n\n    return (\n          <div className=\"App\">\n            <StyledNavBar\n              renderContent={this.renderContent} \n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              fetchUser={fetchUser}\n              showNavBar={environment.showNavBar}\n              showNavToggle={environment.showNavToggle}\n              logoutUser={logoutUser}\n              history={history}\n            />\n            <Switch>\n            <Route exact path=\"/\" \n            render={(props) => \n            <div>\n                {this.renderCorrectPage()}\n              </div>\n                }\n             />\n            <Route exact path=\"/login\" \n            render={(props) => <div>\n              {this.renderCorrectPage()}\n            </div> }\n            history={history}\n             />\n            <Route exact path=\"/register\" \n            render={(props) => <RegisterUser\n            createNewUser={createNewUser}\n            history={history}\n             />  }\n             />\n            <Route exact path=\"/new-customer\" \n            render={(props) => <AddCustomer\n            createNewCustomer={createNewCustomer}\n            toggleNavBar={toggleNavBar}\n            toggleNavToggle={toggleNavToggle}\n            showNavBar={environment.showNavBar}\n            history={history}\n            realCustomers={realCustomers}\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            getCurrentEmailId={getCurrentEmailId}\n             />  }\n             />\n             <Route exact path=\"/new-vehicle\" \n            render={(props) => <AddVehicle\n            createNewVehicle={createNewVehicle}\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            history={history}\n             />  }\n             />\n             <Route exact path=\"/new-service\" \n            render={(props) => <AddService\n            createNewService={createNewService}\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            history={history}\n             />  }\n             />\n             <Route exact path=\"/new-customer/confirmation\" \n            render={(props) => <CustomerConfirmation\n            selectedCustomer={environment.selectedCustomer}\n            getSelectedCustomer={getSelectedCustomer}\n            realCustomers={realCustomers}\n            history={history}\n             />  }\n             />\n\n            <Route exact path=\"/new-vehicle/confirmation\" \n            render={(props) => <VehicleConfirmation\n            selectedCustomer={environment.selectedCustomer}\n            selectedVehicle={environment.selectedVehicle}\n            getSelectedCustomer={getSelectedCustomer}\n            realCustomers={realCustomers}\n            customerVehicles={customerVehicles}\n            getSelectedVehicle={getSelectedVehicle}\n            history={history}\n             />  }\n             />\n\n            <Route exact path=\"/all-customers\" \n            render={(props) => <AllCustomers\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              history={history}\n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              showNavBar={environment.showNavBar}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/:customerid\" \n              render={(props) => <CustomerInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/vehicles/:vehicle\" \n              render={(props) => <VehicleInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n              customerServices={customerServices}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/vehicles/:vehicleid/:serviceid\" \n              render={(props) => <ServiceInfo\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              getSelectedVehicle={getSelectedVehicle}\n              selectedVehicle={environment.selectedVehicle}\n              history={history}\n              selectedCustomer={environment.selectedCustomer}\n              realCustomers={realCustomers}\n              customerVehicles={customerVehicles}\n              customerServices={customerServices}\n              selectedService={environment.selectedService}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/service/:customerid\" \n              render={(props) => <AddService\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              selectedVehicle={environment.selectedVehicle}\n              realCustomers={realCustomers}\n              history={history}\n              createNewService={createNewService}\n    \n             />  }\n             />\n             <Route exact path=\"/customers/chat/service\" \n              render={(props) => <ChatMessenger\n              {...props}\n              getSelectedCustomer={getSelectedCustomer}\n              selectedCustomer={environment.selectedCustomer}\n              selectedVehicle={environment.selectedVehicle}\n              realCustomers={realCustomers}\n              history={history}\n              customerServices={customerServices}\n              createNewToMessage={createNewToMessage}\n              activeToMessages={activeToMessages}\n              toggleNavBar={toggleNavBar}\n              toggleNavToggle={toggleNavToggle}\n              showNavBar={environment.showNavBar}\n    \n             />  }\n             />\n            <Route exact path=\"/settings\" component={Code} />\n            <Route exact path=\"/logout\" component={Code} logoutUser={logoutUser} />\n            </Switch>\n          </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { \n        auth: state.auth,\n        environment: state.environment,\n        state: state\n      }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createNewCustomer: (values) => dispatch(createNewCustomer(values)),\n    createNewUser: (values) => dispatch(createNewUser(values)),\n    createNewVehicle: (values) => dispatch(createNewVehicle(values)),\n    createNewService: (values) => dispatch(createNewService(values)),\n    createNewToMessage: (value) => dispatch(createNewToMessage(value)),\n    userLogin: (values) => dispatch(userLogin(values)),\n    logoutUser: (values) => dispatch(logoutUser(values)),\n    fetchUser: (values) => dispatch(fetchUser(values)),\n    toggleNavBar: (display) => dispatch(toggleNavBar(display)),\n    toggleNavToggle: (display) => dispatch(toggleNavToggle(display)),\n    getSelectedCustomer: (customer) => dispatch(getSelectedCustomer(customer)),\n    getSelectedVehicle: (vehicle) => dispatch(getSelectedVehicle(vehicle)),\n    getCurrentEmailId: (email) => dispatch(getCurrentEmailId(email)),\n    getRealCustomers: () => dispatch(getRealCustomers()),\n    getCustomerVehicles: () => dispatch(getCustomerVehicles()),\n    getCustomerServices: () => dispatch(getCustomerServices()),\n    getCustomerActiveToMessages: () => dispatch(getCustomerActiveToMessages())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport history from './history';\n\nimport { Provider } from 'react-redux';\n//import reducers from './reducers';\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter\n            history={history}\n        >\n            <App \n                history={history}\n            />\n        </BrowserRouter>\n    </Provider>, \n    document.querySelector('#root')\n);\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/barsw.03d3330b.svg\";","module.exports = __webpack_public_path__ + \"static/media/mainLogo.546207c0.png\";","module.exports = __webpack_public_path__ + \"static/media/userw.60f972be.svg\";","module.exports = __webpack_public_path__ + \"static/media/phoneb.cbe528a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/phonew.1d986067.svg\";","module.exports = __webpack_public_path__ + \"static/media/carw.8e8e5ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendarw.702919de.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkw.ed1b0bd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/mileageb.096767ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/hashb.d38b84d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/mailw.1bafb9c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencilb.fc4dabf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinw.d6f95123.svg\";"],"sourceRoot":""}